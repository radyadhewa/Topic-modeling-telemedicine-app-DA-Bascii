(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    435021,       8885]
NotebookOptionsPosition[    423570,       8700]
NotebookOutlinePosition[    423996,       8717]
CellTagsIndexPosition[    423953,       8714]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Earthquake Catastrophe Insurance", "Title",
 CellChangeTimes->{{3.940951384398926*^9, 3.9409513920704994`*^9}, {
  3.940980452374874*^9, 
  3.940980491648054*^9}},ExpressionUUID->"f256d4ea-5a4a-5743-98cb-\
777f31ba1990"],

Cell["Michelle Intan Handa 6701013556", "Author",
 CellChangeTimes->{{3.940980500462631*^9, 
  3.940980506218689*^9}},ExpressionUUID->"8f8098d8-83b2-3f4a-b858-\
092eaa0a8be7"],

Cell[CellGroupData[{

Cell["Import Data", "Section",
 CellChangeTimes->{{3.9409514262596664`*^9, 
  3.940951430871895*^9}},ExpressionUUID->"63949002-80ff-1543-8992-\
6d5b6b41bbce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataClean", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\ASUS'\\\\Documents\\\\Wolfram\\\\data_cleaned.xlsx\>\"\
", "]"}]}], ";"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"67220f13-cddd-5648-9c1d-b06c78f3a9bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleanDataset", "=", 
  RowBox[{"Dataset", "[", "dataClean", "]"}]}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"01f13e77-113b-ad4b-87cf-51f4643a30d0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {{{
        "Origin Time", "Latitude", "Longitude", "Depth", "Magnitude"}, {
        "2022/01/01", 24.8, 125., 28., 4.}, {
        "2022/01/02", 34.1, 135.1, 9., 3.7}, {
        "2022/01/02", 35.7, 140.6, 50., 3.8}, {
        "2022/01/02", 37.5, 137.2, 13., 3.6}, {
        "2022/01/03", 38.8, 142., 46., 3.7}, {
        "2022/01/03", 23.9, 122.2, 27., 6.3}, {
        "2022/01/04", 37.5, 137.2, 13., 3.5}, {
        "2022/01/04", 37.6, 141.6, 55., 4.2}, {
        "2022/01/05", 36.1, 140., 49., 3.8}, {
        "2022/01/07", 27.4, 128.5, 49., 4.3}, {
        "2022/01/07", 33.9, 135.4, 52., 3.8}, {
        "2022/01/08", 27.4, 128.6, 43., 3.8}, {
        "2022/01/10", 28.3, 129.3, 15., 3.8}, {
        "2022/01/11", 32.9, 131.9, 10., 3.9}, {
        "2022/01/11", 38.8, 142.1, 44., 3.9}, {
        "2022/01/11", 36.2, 140.6, 82., 3.7}, {
        "2022/01/13", 31., 131.4, 30., 4.6}, {
        "2022/01/13", 30.4, 131., 32., 4.4}, {
        "2022/01/14", 37.5, 137.2, 13., 3.6}, {
        "2022/01/14", 35.3, 140.4, 58., 3.5}, {
        "2022/01/15", 43.1, 146., 67., 4.3}, {
        "2022/01/15", 38.2, 141.7, 51., 4.2}, {
        "2022/01/16", 34.1, 135.1, 4., 2.8}, {
        "2022/01/18", 36.8, 140.6, 8., 4.}, {
        "2022/01/18", 34.5, 137.6, 35., 3.6}, {
        "2022/01/19", 32.8, 130.6, 14., 3.3}, {
        "2022/01/19", 37.4, 141.9, 41., 4.4}, {
        "2022/01/22", 32.7, 132., 40., 4.1}, {
        "2022/01/22", 43.3, 145.9, 90., 4.1}, {
        "2022/01/22", 32.6, 132., 40., 3.4}, {
        "2022/01/22", 32.7, 132., 39., 3.5}, {
        "2022/01/22", 32.7, 132., 37., 4.1}, {
        "2022/01/22", 32.7, 132., 38., 4.7}, {
        "2022/01/22", 32.6, 132., 39., 4.}, {
        "2022/01/22", 32.7, 132., 45., 4.}, {
        "2022/01/22", 32.6, 132., 40., 4.1}, {
        "2022/01/22", 32.6, 132., 39., 4.}, {
        "2022/01/22", 32.7, 132., 38., 4.5}, {
        "2022/01/22", 32.7, 132., 37., 3.9}, {
        "2022/01/22", 32.7, 132., 45., 6.6}, {
        "2022/01/23", 32.7, 132., 37., 3.7}, {
        "2022/01/23", 28.3, 129.4, 32., 3.6}, {
        "2022/01/23", 38.5, 138.2, 12., 4.3}, {
        "2022/01/27", 36., 140.3, 55., 4.1}, {
        "2022/01/28", 38.2, 141.7, 52., 4.}, {
        "2022/01/28", 32.6, 132., 34., 3.8}, {
        "2022/01/28", 34.1, 135.5, 59., 3.9}, {
        "2022/01/29", 34., 135.2, 6., 3.7}, {
        "2022/01/29", 39., 142.4, 46., 4.}, {
        "2022/01/29", 39., 142.4, 47., 4.7}, {
        "2022/01/30", 34.6, 135.9, 9., 4.}, {
        "2022/01/30", 33.9, 135.7, 45., 3.6}, {
        "2022/01/30", 34., 135.2, 6., 2.8}, {
        "2022/01/31", 35.6, 140.1, 69., 3.8}, {
        "2022/01/31", 36.7, 140.5, 10., 3.8}, {
        "2022/02/01", 35.8, 140.9, 12., 4.}, {
        "2022/02/01", 39., 142.4, 47., 3.9}, {
        "2022/02/01", 35.3, 139.5, 100., 3.9}, {
        "2022/02/02", 36.1, 139.8, 50., 3.6}, {
        "2022/02/03", 35.8, 140.9, 29., 4.3}, {
        "2022/02/03", 35.9, 140.8, 40., 3.7}, {
        "2022/02/04", 32.6, 132., 41., 3.5}, {
        "2022/02/04", 32.7, 132., 39., 3.8}, {
        "2022/02/04", 32.3, 129.7, 13., 3.7}, {
        "2022/02/06", 36., 139.8, 46., 4.}, {
        "2022/02/06", 35.5, 139.5, 69., 3.5}, {
        "2022/02/06", 41.5, 142.1, 54., 4.3}, {
        "2022/02/07", 37.5, 137.2, 13., 4.1}, {
        "2022/02/08", 38.1, 141.7, 51., 3.9}, {
        "2022/02/09", 28., 129.3, 39., 3.3}, {
        "2022/02/09", 26.7, 126.3, 19., 5.4}, {
        "2022/02/09", 26.8, 126.2, 28., 5.6}, {
        "2022/02/10", 38.7, 141.5, 59., 3.8}, {
        "2022/02/11", 37.3, 138.3, 22., 3.2}, {
        "2022/02/11", 37.3, 138.3, 21., 3.3}, {
        "2022/02/11", 37., 141.1, 18., 4.4}, {
        "2022/02/11", 35.3, 133., 9., 4.}, {
        "2022/02/12", 37.5, 137.3, 13., 3.2}, {
        "2022/02/12", 32.6, 132., 42., 3.9}, {
        "2022/02/12", 23.9, 122.2, 17., 5.8}, {
        "2022/02/13", 42.3, 144., 61., 4.6}, {
        "2022/02/14", 35.9, 140.5, 46., 4.4}, {
        "2022/02/14", 32.6, 132., 35., 3.5}, {
        "2022/02/14", 31.6, 130.9, 7., 3.4}, {
        "2022/02/15", 28.8, 130.1, 54., 4.3}, {
        "2022/02/16", 37.7, 141.9, 36., 4.3}, {
        "2022/02/17", 25., 125.6, 54., 4.3}, {
        "2022/02/17", 42., 142.5, 57., 5.}, {
        "2022/02/18", 38.1, 141.7, 52., 5.3}, {
        "2022/02/19", 37.1, 141., 54., 3.6}, {
        "2022/02/19", 30.7, 131.1, 33., 3.9}, {
        "2022/02/19", 26.6, 127.9, 38., 3.4}, {
        "2022/02/21", 28.7, 130., 36., 4.7}, {
        "2022/02/21", 36.2, 140.9, 43., 4.4}, {
        "2022/02/21", 34., 137.3, 356., 5.}, {
        "2022/02/22", 26.8, 126.3, 17., 5.8}, {
        "2022/02/22", 43.2, 145.3, 100., 3.9}, {
        "2022/02/23", 42.9, 145.4, 46., 3.9}, {
        "2022/02/23", 31.6, 130.9, 7., 3.1}, {
        "2022/02/24", 32.7, 130.1, 7., 3.}, {
        "2022/02/24", 37.9, 141.9, 44., 4.2}, {
        "2022/02/24", 33.8, 135.8, 16., 3.4}, {
        "2022/02/24", 26.8, 126.3, 29., 4.9}, {
        "2022/02/25", 26.8, 126.3, 29., 5.4}, {
        "2022/02/25", 38.4, 142., 43., 4.3}, {
        "2022/02/26", 39.2, 142.4, 41., 4.8}, {
        "2022/02/26", 36.3, 137.6, 0., 3.1}, {
        "2022/02/26", 37.5, 141.4, 49., 4.5}, {
        "2022/02/28", 26.9, 128.4, 46., 4.1}, {
        "2022/03/01", 35.2, 136.5, 6., 2.5}, {
        "2022/03/02", 36., 139.8, 45., 3.5}, {
        "2022/03/03", 32.7, 132., 37., 3.6}, {
        "2022/03/06", 28., 130.2, 35., 5.1}, {
        "2022/03/07", 37.4, 137.2, 10., 3.4}, {
        "2022/03/07", 39.5, 140.5, 7., 3.5}, {
        "2022/03/07", 38.9, 141.9, 51., 3.7}, {
        "2022/03/08", 37.6, 141.5, 52., 4.}, {
        "2022/03/08", 37.5, 137.2, 13., 3.6}, {
        "2022/03/08", 37.5, 137.2, 14., 4.8}, {
        "2022/03/08", 37.4, 137.2, 11., 3.9}, {
        "2022/03/09", 43.6, 142.5, 10., 2.2}, {
        "2022/03/10", 36., 139.8, 48., 4.1}, {
        "2022/03/10", 37.5, 137.3, 13., 3.7}, {
        "2022/03/10", 37.5, 137.3, 13., 3.6}, {
        "2022/03/11", 35.1, 135.1, 14., 3.5}, {
        "2022/03/11", 35.1, 135.1, 15., 4.1}, {
        "2022/03/11", 37.5, 137.3, 13., 3.3}, {
        "2022/03/12", 37.5, 137.3, 14., 3.4}, {
        "2022/03/12", 37.5, 137.3, 14., 3.3}, {
        "2022/03/12", 35.4, 139., 20., 3.2}, {
        "2022/03/12", 35.4, 139., 21., 3.5}, {
        "2022/03/13", 34., 135.2, 5., 3.3}, {
        "2022/03/13", 26.8, 126.3, 27., 4.3}, {
        "2022/03/15", 43., 145.1, 79., 3.7}, {
        "2022/03/16", 37.7, 141.6, 54., 4.2}, {
        "2022/03/16", 37.8, 141.7, 60., 4.8}, {
        "2022/03/16", 37.8, 141.7, 63., 4.7}, {
        "2022/03/16", 37.7, 141.6, 57., 7.4}, {
        "2022/03/16", 37.6, 141.6, 57., 6.1}, {
        "2022/03/17", 26.8, 126.4, 24., 4.9}, {
        "2022/03/17", 37.9, 141.7, 61., 4.6}, {
        "2022/03/17", 26.8, 126.2, 19., 5.9}, {
        "2022/03/17", 37.7, 141.7, 57., 4.7}, {
        "2022/03/17", 42.9, 145., 61., 3.6}, {
        "2022/03/17", 25.8, 123.8, 179., 5.3}, {
        "2022/03/17", 37.8, 141.6, 55., 3.9}, {
        "2022/03/17", 37.8, 141.6, 51., 4.}, {
        "2022/03/17", 37.7, 141.5, 52., 4.1}, {
        "2022/03/17", 37.8, 141.7, 66., 4.5}, {
        "2022/03/17", 37.8, 141.7, 61., 4.2}, {
        "2022/03/17", 37.7, 141.5, 54., 4.1}, {
        "2022/03/17", 37.8, 141.7, 61., 4.4}, {
        "2022/03/17", 37.7, 141.5, 53., 4.2}, {
        "2022/03/17", 37.8, 141.7, 53., 4.3}, {
        "2022/03/17", 37.7, 141.7, 57., 5.5}, {
        "2022/03/17", 37.7, 141.6, 58., 4.1}, {
        "2022/03/17", 37.7, 141.7, 64., 4.3}, {
        "2022/03/18", 39.9, 142., 18., 5.6}, {
        "2022/03/18", 37.9, 141.7, 57., 4.4}, {
        "2022/03/18", 37.7, 141.5, 52., 4.1}, {
        "2022/03/18", 37.8, 141.5, 56., 4.}, {
        "2022/03/18", 39.5, 140.5, 7., 3.3}, {
        "2022/03/19", 34.2, 135.1, 7., 3.2}, {
        "2022/03/19", 37.7, 141.5, 54., 4.2}, {
        "2022/03/19", 34.2, 135.1, 7., 3.6}, {
        "2022/03/19", 25.5, 123.9, 171., 5.9}, {
        "2022/03/19", 37.7, 141.7, 58., 5.}, {
        "2022/03/20", 37.6, 141.5, 55., 3.9}, {
        "2022/03/20", 37.9, 141.7, 59., 4.1}, {
        "2022/03/20", 37.9, 141.6, 55., 4.}, {
        "2022/03/21", 35.2, 133.2, 6., 3.1}, {
        "2022/03/21", 37.7, 141.5, 52., 3.9}, {
        "2022/03/21", 37.7, 141.6, 56., 4.}, {
        "2022/03/21", 37.8, 141.6, 54., 4.3}, {
        "2022/03/23", 37.7, 141.5, 54., 4.3}, {
        "2022/03/23", 37.7, 141.6, 55., 4.5}, {
        "2022/03/23", 37.5, 137.3, 14., 4.3}, {
        "2022/03/23", 37.5, 137.2, 14., 3.3}, {
        "2022/03/23", 23.4, 121.4, 44., 6.6}, {
        "2022/03/24", 36., 139.2, 120., 4.}, {
        "2022/03/24", 37.1, 138.1, 10., 3.1}, {
        "2022/03/24", 37.8, 141.6, 50., 4.3}, {
        "2022/03/24", 37.7, 139.9, 4., 3.5}, {
        "2022/03/24", 38.8, 141.5, 75., 4.1}, {
        "2022/03/24", 37.9, 141.7, 57., 4.3}, {
        "2022/03/24", 26.8, 126.3, 17., 5.3}, {
        "2022/03/24", 26.8, 126.5, 7., 5.2}, {
        "2022/03/25", 43.3, 146., 80., 3.9}, {
        "2022/03/25", 37.7, 141.5, 51., 4.}, {
        "2022/03/25", 24.9, 124.5, 74., 4.3}, {
        "2022/03/25", 37.5, 141.3, 52., 5.2}, {
        "2022/03/25", 43.6, 145.4, 132., 4.}, {
        "2022/03/26", 38.8, 142., 47., 3.9}, {
        "2022/03/26", 43.4, 146.1, 84., 4.2}, {
        "2022/03/26", 37.5, 141.4, 51., 4.7}, {
        "2022/03/27", 37.8, 141.6, 54., 4.7}, {
        "2022/03/27", 37.4, 141.5, 46., 4.2}, {
        "2022/03/27", 37.7, 141.7, 64., 4.2}, {
        "2022/03/27", 42.3, 143., 53., 5.1}, {
        "2022/03/27", 26.8, 126.3, 27., 5.6}, {
        "2022/03/28", 42.5, 142.5, 23., 4.2}, {
        "2022/03/28", 37., 141.1, 51., 3.6}, {
        "2022/03/29", 37.9, 141.7, 56., 4.2}, {
        "2022/03/29", 37.7, 141.5, 55., 4.5}, {
        "2022/03/30", 26.8, 126.2, 12., 4.9}, {
        "2022/03/30", 26.8, 126.4, 19., 5.5}, {
        "2022/03/30", 31.9, 129.7, 10., 3.6}, {
        "2022/03/30", 40., 141.9, 17., 4.9}, {
        "2022/03/31", 35., 135.5, 13., 4.4}, {
        "2022/03/31", 35.6, 140., 73., 4.7}, {
        "2022/04/01", 24.5, 123.7, 9., 3.4}, {
        "2022/04/01", 44., 145., 2., 3.}, {
        "2022/04/02", 31.5, 131.8, 22., 4.6}, {
        "2022/04/02", 36.4, 140.5, 56., 4.4}, {
        "2022/04/02", 38.9, 141.9, 51., 3.9}, {
        "2022/04/03", 34.9, 135.6, 11., 3.9}, {
        "2022/04/03", 26.8, 126.5, 22., 4.7}, {
        "2022/04/03", 37.9, 141.6, 51., 4.3}, {
        "2022/04/04", 35.7, 139.9, 60., 3.9}, {
        "2022/04/04", 35.7, 139.9, 62., 4.6}, {
        "2022/04/04", 37.3, 141.5, 44., 5.4}, {
        "2022/04/04", 37.5, 137.2, 13., 3.7}, {
        "2022/04/04", 37.5, 137.2, 13., 4.}, {
        "2022/04/04", 37.5, 137.2, 14., 4.3}, {
        "2022/04/06", 34., 135.2, 6., 3.6}, {
        "2022/04/06", 37.8, 141.7, 64., 4.2}, {
        "2022/04/06", 37.8, 141.5, 53., 5.2}, {
        "2022/04/07", 35.9, 136.7, 6., 3.1}, {
        "2022/04/07", 34.8, 135.6, 7., 3.3}, {
        "2022/04/07", 26.7, 126.3, 28., 4.6}, {
        "2022/04/07", 34.9, 137.5, 11., 4.7}, {
        "2022/04/08", 37.5, 137.2, 13., 3.}, {
        "2022/04/08", 37.5, 137.2, 13., 3.3}, {
        "2022/04/08", 37.5, 137.2, 13., 4.2}, {
        "2022/04/08", 42.9, 146., 22., 4.1}, {
        "2022/04/09", 37.5, 137.2, 13., 2.8}, {
        "2022/04/10", 36.2, 141.4, 30., 5.}, {
        "2022/04/10", 37.3, 141.8, 39., 4.8}, {
        "2022/04/10", 37.5, 137.3, 13., 3.2}, {
        "2022/04/11", 35., 135.5, 14., 3.5}, {
        "2022/04/11", 32.7, 130.6, 12., 2.6}, {
        "2022/04/13", 36., 139.9, 46., 3.2}, {
        "2022/04/13", 35., 135.5, 13., 3.9}, {
        "2022/04/13", 26.8, 126.4, 16., 5.6}, {
        "2022/04/13", 34.6, 140.3, 59., 4.3}, {
        "2022/04/14", 36., 139.9, 44., 3.5}, {
        "2022/04/15", 28., 128.2, 19., 4.3}, {
        "2022/04/15", 37., 141.1, 50., 4.3}, {
        "2022/04/18", 37.7, 141.5, 54., 4.1}, {
        "2022/04/19", 36.8, 140.3, 93., 5.4}, {
        "2022/04/22", 43., 145.4, 51., 3.8}, {
        "2022/04/22", 33.9, 134.1, 7., 2.3}, {
        "2022/04/22", 36.5, 136.7, 13., 3.5}, {
        "2022/04/23", 37.5, 137.2, 12., 3.3}, {
        "2022/04/23", 34.1, 131.7, 11., 4.2}, {
        "2022/04/24", 40.9, 141.9, 59., 3.6}, {
        "2022/04/24", 23.4, 123.1, 51., 5.5}, {
        "2022/04/24", 41.7, 143.8, 25., 5.4}, {
        "2022/04/24", 39.6, 141.8, 64., 4.}, {
        "2022/04/25", 35., 135.5, 14., 4.1}, {
        "2022/04/26", 43.6, 144.4, 1., 1.4}, {
        "2022/04/27", 35.5, 140., 21., 2.9}, {
        "2022/04/27", 35.1, 140.4, 100., 4.3}, {
        "2022/04/28", 41.2, 142.3, 53., 4.7}, {
        "2022/04/28", 43., 142.3, 147., 4.8}, {
        "2022/04/29", 37.5, 137.2, 13., 2.9}, {
        "2022/04/29", 37.6, 141.5, 57., 3.8}, {
        "2022/04/30", 35., 135.5, 12., 4.3}, {
        "2022/05/01", 37.7, 141.5, 53., 4.1}, {
        "2022/05/02", 35., 135.5, 13., 4.4}, {
        "2022/05/02", 31.5, 131.8, 22., 5.}, {
        "2022/05/02", 37.5, 137.3, 12., 4.1}, {
        "2022/05/02", 37., 139.3, 7., 2.1}, {
        "2022/05/03", 35.6, 139.4, 130., 4.6}, {
        "2022/05/03", 35.4, 133.9, 13., 4.3}, {
        "2022/05/04", 24.8, 125.3, 50., 4.5}, {
        "2022/05/05", 36.1, 139.8, 52., 4.8}, {
        "2022/05/05", 37.7, 141.5, 53., 3.9}, {
        "2022/05/06", 26.8, 126.5, 8., 5.5}, {
        "2022/05/07", 26.9, 126.4, 13., 5.7}, {
        "2022/05/08", 36.5, 140.5, 58., 3.5}, {
        "2022/05/09", 34.5, 136.9, 341., 5.2}, {
        "2022/05/09", 23.9, 122.5, 19., 6.6}, {
        "2022/05/09", 38.6, 141.9, 46., 4.}, {
        "2022/05/10", 37.8, 141.6, 50., 4.2}, {
        "2022/05/10", 32.5, 129.8, 13., 3.}, {
        "2022/05/10", 43.6, 144.3, 3., 2.1}, {
        "2022/05/10", 37.7, 141.8, 43., 4.3}, {
        "2022/05/12", 24.2, 123.6, 20., 4.}, {
        "2022/05/12", 37.8, 141.7, 54., 4.1}, {
        "2022/05/13", 37.2, 141.5, 43., 4.5}, {
        "2022/05/14", 34.6, 140.5, 82., 4.6}, {
        "2022/05/14", 37.5, 137.2, 14., 3.8}, {
        "2022/05/14", 40., 142.7, 34., 4.7}, {
        "2022/05/16", 33.9, 135.1, 7., 3.9}, {
        "2022/05/17", 37.9, 141.8, 55., 4.1}, {
        "2022/05/17", 34.7, 139.5, 137., 4.1}, {
        "2022/05/17", 37., 141.2, 48., 3.8}, {
        "2022/05/17", 32.2, 130.5, 8., 2.7}, {
        "2022/05/18", 40.9, 143.1, 21., 5.3}, {
        "2022/05/20", 37.5, 137.3, 14., 4.1}, {
        "2022/05/20", 36.3, 140.9, 28., 3.5}, {
        "2022/05/21", 35., 135.5, 14., 3.5}, {
        "2022/05/21", 35.5, 138.9, 20., 3.3}, {
        "2022/05/22", 42.1, 142.9, 43., 4.7}, {
        "2022/05/22", 36.7, 141.4, 5., 6.}, {
        "2022/05/22", 37., 140.9, 52., 3.4}, {
        "2022/05/23", 41.2, 143.1, 24., 5.6}, {
        "2022/05/23", 33.9, 134.3, 39., 4.2}, {
        "2022/05/23", 35.1, 140.4, 54., 4.2}, {
        "2022/05/24", 34.2, 135.1, 5., 3.1}, {
        "2022/05/25", 37.5, 141., 88., 3.8}, {
        "2022/05/27", 37.8, 141.6, 55., 4.7}, {
        "2022/05/27", 36.4, 138., 8., 3.3}, {
        "2022/05/29", 36.2, 140.9, 44., 5.3}, {
        "2022/05/31", 37.5, 137.3, 12., 3.1}, {
        "2022/05/31", 32.5, 130.6, 9., 3.8}, {
        "2022/06/01", 36.4, 140.6, 53., 3.6}, {
        "2022/06/01", 36., 137.4, 6., 2.6}, {
        "2022/06/01", 42.6, 142.1, 102., 4.3}, {
        "2022/06/02", 37.5, 137.3, 12., 3.}, {
        "2022/06/02", 37.8, 141.6, 57., 4.2}, {
        "2022/06/02", 36., 140.1, 61., 4.3}, {
        "2022/06/03", 26.8, 126.3, 16., 5.9}, {
        "2022/06/03", 37.5, 137.2, 13., 3.9}, {
        "2022/06/03", 35., 135.5, 12., 3.4}, {
        "2022/06/07", 34., 132., 6., 3.8}, {
        "2022/06/07", 25.6, 123.4, 204., 5.2}, {
        "2022/06/09", 37.7, 141.5, 55., 3.9}, {
        "2022/06/09", 33.7, 134.7, 39., 3.9}, {
        "2022/06/09", 37.9, 141.7, 56., 4.1}, {
        "2022/06/09", 38.5, 141.8, 50., 4.4}, {
        "2022/06/10", 41.8, 142.2, 67., 4.9}, {
        "2022/06/10", 37.5, 137.2, 13., 3.5}, {
        "2022/06/11", 37.6, 141.3, 84., 4.}, {
        "2022/06/12", 37.6, 141.5, 54., 5.1}, {
        "2022/06/12", 38.8, 142., 55., 4.}, {
        "2022/06/12", 36.5, 137.7, 3., 2.7}, {
        "2022/06/13", 24.1, 123.7, 19., 4.6}, {
        "2022/06/13", 37.2, 141.3, 41., 4.3}, {
        "2022/06/14", 41., 141.5, 81., 3.7}, {
        "2022/06/14", 34.2, 135.4, 6., 3.}, {
        "2022/06/14", 33.3, 132.1, 48., 4.}, {
        "2022/06/14", 33.3, 132.1, 47., 3.7}, {
        "2022/06/15", 38.4, 141.9, 60., 4.3}, {
        "2022/06/16", 37.5, 137.2, 13., 4.}, {
        "2022/06/17", 37.5, 141.5, 58., 4.7}, {
        "2022/06/17", 33.9, 134.5, 45., 4.9}, {
        "2022/06/19", 37.5, 137.2, 11., 3.2}, {
        "2022/06/19", 26.8, 126.3, 25., 5.2}, {
        "2022/06/19", 26.8, 126.3, 19., 5.8}, {
        "2022/06/19", 36.8, 140.3, 95., 4.4}, {
        "2022/06/19", 37.5, 137.2, 12., 3.3}, {
        "2022/06/19", 37.5, 137.2, 13., 2.9}, {
        "2022/06/19", 37.5, 137.2, 13., 3.2}, {
        "2022/06/19", 37.5, 137.2, 13., 5.4}, {
        "2022/06/20", 37.5, 137.3, 14., 4.3}, {
        "2022/06/20", 45., 141.8, 8., 2.7}, {
        "2022/06/20", 45., 141.8, 7., 2.5}, {
        "2022/06/20", 37.5, 137.3, 14., 5.}, {
        "2022/06/20", 37.5, 137.3, 13., 3.4}, {
        "2022/06/20", 35.4, 136.3, 13., 3.6}, {
        "2022/06/20", 45., 141.8, 10., 4.4}, {
        "2022/06/20", 36.8, 140.3, 94., 3.6}, {
        "2022/06/21", 26.7, 126.3, 33., 4.8}, {
        "2022/06/21", 32.7, 129.9, 14., 2.9}, {
        "2022/06/21", 35.4, 136.3, 13., 3.4}, {
        "2022/06/21", 37.5, 137.2, 12., 4.1}, {
        "2022/06/23", 27.8, 128.8, 8., 3.2}, {
        "2022/06/23", 36.6, 139.3, 8., 2.9}, {
        "2022/06/24", 24., 122.4, 27., 5.6}, {
        "2022/06/26", 32.5, 130.6, 9., 4.7}, {
        "2022/06/27", 43.3, 145.4, 78., 3.6}, {
        "2022/06/28", 38.4, 142.1, 42., 4.9}, {
        "2022/06/29", 37.5, 137.2, 13., 3.5}, {
        "2022/06/29", 32.7, 130.5, 10., 3.9}, {
        "2022/06/30", 31., 128.9, 17., 4.4}, {
        "2022/06/30", 31.8, 131.6, 38., 3.6}, {
        "2022/07/02", 40.3, 142.1, 49., 3.6}, {
        "2022/07/02", 45.8, 142.2, 324., 5.9}, {
        "2022/07/05", 42.3, 142.9, 53., 4.9}, {
        "2022/07/05", 34.9, 136.5, 15., 3.1}, {
        "2022/07/05", 34.2, 139.8, 89., 4.6}, {
        "2022/07/06", 26.7, 126.3, 23., 5.1}, {
        "2022/07/06", 41.4, 142., 58., 4.6}, {
        "2022/07/06", 38.4, 141.9, 63., 5.4}, {
        "2022/07/07", 37.7, 141.5, 55., 4.4}, {
        "2022/07/08", 26.8, 126.2, 17., 5.1}, {
        "2022/07/08", 34.4, 135.5, 14., 3.3}, {
        "2022/07/08", 36.8, 140.5, 8., 3.9}, {
        "2022/07/09", 35.5, 139.6, 33., 3.6}, {
        "2022/07/09", 43.3, 145.5, 70., 4.}, {
        "2022/07/09", 37.1, 141.3, 11., 4.6}, {
        "2022/07/09", 38.1, 141.7, 57., 4.2}, {
        "2022/07/12", 36., 137.5, 5., 3.}, {
        "2022/07/15", 36.4, 140.6, 55., 3.7}, {
        "2022/07/16", 34., 135.2, 4., 2.4}, {
        "2022/07/16", 40.3, 142., 52., 3.8}, {
        "2022/07/17", 37.5, 137.2, 14., 3.4}, {
        "2022/07/17", 34.5, 135.3, 14., 3.2}, {
        "2022/07/17", 40.2, 141.9, 22., 3.8}, {
        "2022/07/20", 35.4, 133.4, 14., 3.4}, {
        "2022/07/20", 36.8, 140.5, 9., 3.6}, {
        "2022/07/21", 37.5, 141.5, 47., 4.8}, {
        "2022/07/21", 37.5, 141.9, 41., 4.6}, {
        "2022/07/22", 40.5, 141.4, 86., 5.3}, {
        "2022/07/23", 38.5, 141.9, 53., 3.8}, {
        "2022/07/24", 36., 139.9, 44., 4.2}, {
        "2022/07/25", 26.8, 126.3, 27., 4.6}, {
        "2022/07/25", 26.7, 126.4, 30., 5.1}, {
        "2022/07/25", 35.1, 138.5, 14., 2.6}, {
        "2022/07/25", 35.1, 138.5, 14., 2.7}, {
        "2022/07/25", 35.1, 138.5, 14., 3.5}, {
        "2022/07/26", 35.4, 140.3, 30., 2.9}, {
        "2022/07/26", 40.2, 141., 7., 3.2}, {
        "2022/07/27", 34.2, 135.1, 8., 2.6}, {
        "2022/07/27", 40., 141.8, 7., 3.8}, {
        "2022/07/29", 33., 131.6, 7., 2.4}, {
        "2022/07/29", 36.4, 140.6, 56., 4.}, {
        "2022/07/29", 35.5, 140., 70., 3.6}, {
        "2022/07/30", 37.8, 141.6, 56., 4.}, {
        "2022/07/31", 34.2, 135.1, 5., 3.3}, {
        "2022/07/31", 31.6, 130.9, 7., 2.9}, {
        "2022/07/31", 36., 139.8, 46., 3.3}, {
        "2022/08/02", 33.9, 135.1, 6., 2.9}, {
        "2022/08/03", 37.3, 141.1, 33., 4.6}, {
        "2022/08/04", 37.6, 141.6, 57., 5.6}, {
        "2022/08/04", 45., 141.8, 9., 2.9}, {
        "2022/08/04", 45., 141.8, 8., 3.5}, {
        "2022/08/04", 45., 141.8, 7., 4.1}, {
        "2022/08/06", 36.2, 141.1, 30., 5.}, {
        "2022/08/07", 34.2, 135.2, 4., 2.4}, {
        "2022/08/07", 43.7, 147.7, 0., 6.}, {
        "2022/08/07", 34.2, 135.4, 6., 2.8}, {
        "2022/08/08", 39.6, 142.1, 48., 4.}, {
        "2022/08/08", 39.6, 142.1, 49., 4.1}, {
        "2022/08/08", 42.3, 144.1, 57., 4.2}, {
        "2022/08/10", 39.7, 141.8, 59., 4.1}, {
        "2022/08/11", 44.8, 142.1, 7., 3.4}, {
        "2022/08/11", 44.8, 142.1, 7., 3.3}, {
        "2022/08/11", 44.8, 142.1, 0., 2.9}, {
        "2022/08/11", 44.8, 142.1, 7., 3.3}, {
        "2022/08/11", 44.8, 142.1, 6., 4.6}, {
        "2022/08/11", 44.8, 142., 6., 3.9}, {
        "2022/08/11", 44.8, 142.1, 6., 3.2}, {
        "2022/08/11", 44.8, 142.1, 5., 5.4}, {
        "2022/08/11", 44.8, 142.1, 2., 5.2}, {
        "2022/08/12", 35.5, 140.9, 36., 4.6}, {
        "2022/08/12", 44.8, 142., 2., 4.4}, {
        "2022/08/12", 38.5, 141.8, 53., 4.4}, {
        "2022/08/14", 37.5, 137.2, 13., 3.9}, {
        "2022/08/14", 37.5, 137.2, 13., 4.1}, {
        "2022/08/14", 35.5, 140.9, 32., 4.5}, {
        "2022/08/14", 46.5, 144.8, 414., 5.5}, {
        "2022/08/14", 37., 140.4, 7., 2.7}, {
        "2022/08/15", 35.4, 133.8, 11., 3.7}, {
        "2022/08/16", 44.8, 142.1, 0., 4.2}, {
        "2022/08/16", 37.5, 137.2, 13., 3.4}, {
        "2022/08/16", 34.9, 132.2, 12., 3.4}, {
        "2022/08/16", 39.8, 141.7, 69., 3.9}, {
        "2022/08/18", 26.6, 127.7, 44., 4.4}, {
        "2022/08/18", 37.6, 141.5, 56., 5.2}, {
        "2022/08/18", 35.6, 141., 20., 5.}, {
        "2022/08/19", 33.6, 130.7, 14., 3.1}, {
        "2022/08/20", 41.8, 140.9, 9., 2.4}, {
        "2022/08/20", 32.7, 130.6, 12., 3.4}, {
        "2022/08/20", 37.7, 141.7, 64., 4.3}, {
        "2022/08/22", 36., 139.8, 45., 3.7}, {
        "2022/08/22", 34.8, 136.6, 19., 3.4}, {
        "2022/08/23", 36.6, 140.9, 48., 3.7}, {
        "2022/08/24", 37.4, 141.4, 47., 4.1}, {
        "2022/08/26", 32., 129.9, 12., 4.5}, {
        "2022/08/28", 39.8, 141.9, 56., 4.2}, {
        "2022/08/30", 24.2, 124.1, 17., 4.}, {
        "2022/08/30", 42.3, 143.1, 51., 4.1}, {
        "2022/09/01", 31.2, 131.9, 25., 4.6}, {
        "2022/09/01", 36.2, 140.9, 36., 4.}, {
        "2022/09/02", 45., 141.8, 0., 2.4}, {
        "2022/09/02", 32.5, 130.5, 11., 3.6}, {
        "2022/09/03", 36.4, 141.1, 39., 3.9}, {
        "2022/09/03", 36.1, 139.8, 51., 3.9}, {
        "2022/09/03", 35.8, 139.8, 84., 4.2}, {
        "2022/09/03", 35.4, 140.4, 32., 4.1}, {
        "2022/09/04", 37.8, 141.7, 64., 4.8}, {
        "2022/09/07", 36.5, 137.6, 4., 3.3}, {
        "2022/09/08", 39.8, 140.8, 2., 3.5}, {
        "2022/09/09", 36.8, 140.5, 7., 4.5}, {
        "2022/09/09", 43.1, 145.8, 43., 3.7}, {
        "2022/09/11", 26.3, 127.6, 22., 4.}, {
        "2022/09/12", 42., 144.8, 16., 4.9}, {
        "2022/09/13", 37.7, 141.8, 44., 3.9}, {
        "2022/09/13", 41.5, 142.1, 54., 5.1}, {
        "2022/09/14", 37.5, 137.2, 13., 3.5}, {
        "2022/09/15", 44.8, 142.1, 9., 3.3}, {
        "2022/09/17", 38.8, 142., 46., 3.7}, {
        "2022/09/18", 26.3, 125.9, 24., 5.7}, {
        "2022/09/18", 26.3, 125.9, 8., 6.}, {
        "2022/09/18", 35.8, 140.6, 51., 4.7}, {
        "2022/09/18", 34.8, 132.9, 13., 3.6}, {
        "2022/09/19", 37.7, 141.5, 54., 4.3}, {
        "2022/09/19", 38.3, 142.1, 37., 4.}, {
        "2022/09/20", 37.5, 137.2, 12., 3.1}, {
        "2022/09/20", 40., 142., 48., 4.4}, {
        "2022/09/20", 36.3, 139.8, 70., 4.4}, {
        "2022/09/22", 35.2, 141.2, 13., 5.3}, {
        "2022/09/23", 36., 140.2, 83., 4.7}, {
        "2022/09/24", 42.6, 143.1, 106., 4.2}, {
        "2022/09/24", 37.7, 141.7, 58., 4.2}, {
        "2022/09/24", 34.8, 135.3, 9., 3.1}, {
        "2022/09/24", 34.7, 135.3, 9., 4.}, {
        "2022/09/25", 42.3, 143., 53., 3.7}, {
        "2022/09/25", 36.8, 140.5, 7., 4.2}, {
        "2022/09/25", 37.5, 137.2, 12., 3.8}, {
        "2022/09/26", 43.7, 144., 11., 3.6}, {
        "2022/09/26", 32.1, 131.4, 21., 2.8}, {
        "2022/09/26", 34.9, 132.2, 12., 3.5}, {
        "2022/09/27", 43.7, 144., 12., 3.4}, {
        "2022/09/27", 40.5, 142.9, 25., 5.}, {
        "2022/09/28", 37.5, 137.2, 12., 3.8}, {
        "2022/09/28", 42.7, 143.2, 82., 3.5}, {
        "2022/09/30", 36., 139.8, 47., 4.4}, {
        "2022/09/30", 36.8, 140.5, 7., 4.4}, {
        "2023/01/02", 41.9, 142.5, 66., 4.2}, {
        "2023/01/03", 40.1, 142.6, 37., 5.1}, {
        "2023/01/03", 36., 139.9, 87., 4.}, {
        "2023/01/03", 31.8, 131.6, 33., 3.5}, {
        "2023/01/04", 31.9, 131., 7., 2.6}, {
        "2023/01/06", 37.4, 137.2, 12., 3.9}, {
        "2023/01/06", 37.5, 137.2, 13., 4.5}, {
        "2023/01/07", 37.3, 141.6, 44., 4.5}, {
        "2023/01/08", 36.7, 140.9, 55., 3.5}, {
        "2023/01/08", 37., 141.4, 40., 4.6}, {
        "2023/01/11", 35.4, 139., 13., 4.1}, {
        "2023/01/12", 35.4, 141., 26., 4.7}, {
        "2023/01/13", 37.4, 137.2, 9., 3.}, {
        "2023/01/13", 37.5, 137.2, 13., 4.1}, {
        "2023/01/13", 36.4, 140.6, 53., 3.4}, {
        "2023/01/13", 43.9, 142.3, 0., 3.1}, {
        "2023/01/14", 27.5, 128.8, 17., 3.5}, {
        "2023/01/14", 37.5, 137.2, 14., 3.5}, {
        "2023/01/15", 25.1, 125.8, 30., 5.3}, {
        "2023/01/15", 32.9, 131.1, 7., 2.9}, {
        "2023/01/16", 28.9, 139.7, 422., 5.9}, {
        "2023/01/16", 33.9, 131.3, 12., 3.1}, {
        "2023/01/16", 41.1, 142.4, 46., 4.5}, {
        "2023/01/17", 43.9, 142.3, 0., 4.5}, {
        "2023/01/18", 24.8, 125., 14., 4.6}, {
        "2023/01/18", 24.8, 125.3, 50., 4.2}, {
        "2023/01/18", 43.9, 142.3, 0., 3.3}, {
        "2023/01/20", 38.8, 142., 46., 5.}, {
        "2023/01/20", 35., 132.9, 11., 3.3}, {
        "2023/01/21", 36.3, 140.6, 53., 3.6}, {
        "2023/01/21", 37.1, 141.5, 41., 4.}, {
        "2023/01/21", 37.6, 141.6, 60., 4.3}, {
        "2023/01/25", 36.1, 139.8, 48., 3.6}, {
        "2023/01/25", 37.5, 141.5, 55., 5.1}, {
        "2023/01/27", 37.8, 141.5, 53., 4.}, {
        "2023/01/29", 35.3, 139.2, 144., 4.9}, {
        "2023/01/30", 36.4, 136.8, 13., 3.4}, {
        "2023/01/31", 37.8, 142., 36., 4.3}, {
        "2023/02/03", 38.6, 141.8, 48., 3.8}, {
        "2023/02/06", 32.7, 130.7, 13., 2.9}, {
        "2023/02/07", 36.5, 140.2, 107., 3.8}, {
        "2023/02/08", 44.8, 141.8, 24., 3.4}, {
        "2023/02/08", 42.9, 145.4, 46., 4.3}, {
        "2023/02/09", 35.8, 137.6, 6., 2.7}, {
        "2023/02/09", 32.7, 130.8, 10., 3.9}, {
        "2023/02/09", 34., 135.3, 9., 2.9}, {
        "2023/02/10", 35.3, 133.3, 11., 3.6}, {
        "2023/02/11", 32.7, 130.7, 8., 2.9}, {
        "2023/02/11", 32.7, 130.7, 11., 3.3}, {
        "2023/02/12", 33., 132., 13., 3.6}, {
        "2023/02/13", 37.7, 141.5, 54., 4.8}, {
        "2023/02/13", 39.6, 140.7, 7., 3.5}, {
        "2023/02/14", 37.8, 138.6, 20., 3.8}, {
        "2023/02/14", 42.4, 145., 26., 4.7}, {
        "2023/02/15", 38.7, 142.2, 45., 4.}, {
        "2023/02/17", 34., 130.4, 16., 4.3}, {
        "2023/02/17", 40.1, 142.4, 5., 4.4}, {
        "2023/02/17", 26.5, 128.7, 24., 5.3}, {
        "2023/02/19", 37.1, 141.1, 52., 4.}, {
        "2023/02/20", 36.7, 138.4, 2., 3.3}, {
        "2023/02/20", 32.7, 131.8, 49., 3.4}, {
        "2023/02/20", 42.7, 143.1, 118., 4.9}, {
        "2023/02/21", 37.5, 137.2, 12., 4.1}, {
        "2023/02/21", 35.4, 140.3, 29., 3.3}, {
        "2023/02/21", 37.5, 137.2, 13., 3.2}, {
        "2023/02/25", 42.7, 145., 63., 6.}, {
        "2023/02/25", 27.1, 126.6, 29., 4.9}, {
        "2023/02/25", 24.6, 124.9, 61., 4.3}, {
        "2023/02/25", 38.9, 142.1, 44., 3.8}, {
        "2023/02/26", 37.5, 137.2, 12., 3.5}, {
        "2023/02/26", 37.5, 137.2, 12., 4.}, {
        "2023/02/28", 28., 129.4, 26., 3.9}, {
        "2023/02/28", 35.9, 140.8, 40., 4.5}, {
        "2023/02/28", 38.4, 142.1, 42., 4.3}, {
        "2023/03/01", 35.7, 140.6, 49., 4.1}, {
        "2023/03/02", 33.2, 139.4, 14., 5.}, {
        "2023/03/02", 43.3, 147., 61., 4.7}, {
        "2023/03/03", 33.2, 139.4, 16., 3.8}, {
        "2023/03/04", 34.8, 139.2, 8., 3.}, {
        "2023/03/04", 34.8, 139.2, 12., 2.8}, {
        "2023/03/04", 24.2, 123.8, 19., 3.4}, {
        "2023/03/05", 34.8, 138.3, 11., 2.8}, {
        "2023/03/07", 35., 137.7, 16., 3.4}, {
        "2023/03/07", 42.3, 144.5, 20., 5.}, {
        "2023/03/08", 36.1, 140., 66., 3.6}, {
        "2023/03/10", 42.8, 141.8, 8., 2.6}, {
        "2023/03/11", 35.7, 139.9, 63., 4.3}, {
        "2023/03/11", 42.2, 142.9, 49., 4.8}, {
        "2023/03/12", 35.3, 139.1, 12., 2.9}, {
        "2023/03/12", 26.7, 126.9, 91., 4.3}, {
        "2023/03/14", 39.8, 141.7, 70., 4.}, {
        "2023/03/14", 36.7, 140.5, 7., 4.2}, {
        "2023/03/14", 36.1, 136.3, 8., 3.}, {
        "2023/03/15", 35.5, 140.1, 69., 3.8}, {
        "2023/03/15", 36., 139.9, 46., 4.1}, {
        "2023/03/18", 36.3, 140., 73., 3.8}, {
        "2023/03/19", 35.2, 137.4, 46., 3.1}, {
        "2023/03/20", 35.5, 140.9, 35., 4.6}, {
        "2023/03/20", 37.4, 137.2, 12., 3.4}, {
        "2023/03/21", 36.3, 137.9, 10., 3.3}, {
        "2023/03/22", 40.2, 143., 20., 5.7}, {
        "2023/03/23", 32.5, 130.7, 9., 3.4}, {
        "2023/03/24", 37.8, 141.7, 66., 4.3}, {
        "2023/03/24", 34.2, 135.4, 7., 2.9}, {
        "2023/03/24", 36.4, 140.3, 83., 4.7}, {
        "2023/03/25", 33.1, 132.3, 46., 3.5}, {
        "2023/03/26", 38.3, 141.6, 59., 4.5}, {
        "2023/03/27", 37.1, 141.4, 43., 3.8}, {
        "2023/03/27", 38.3, 141.6, 60., 5.3}, {
        "2023/03/28", 41.1, 142.8, 28., 6.2}, {
        "2023/03/29", 37.5, 137.3, 13., 3.4}, {
        "2023/03/29", 37.5, 137.3, 13., 3.5}, {
        "2023/03/29", 37.5, 137.3, 13., 4.1}, {
        "2023/04/01", 38.1, 141.7, 52., 3.8}, {
        "2023/04/01", 32.7, 130.5, 11., 3.1}, {
        "2023/04/01", 38.3, 138.8, 28., 4.9}, {
        "2023/04/01", 35.7, 140.8, 10., 3.6}, {
        "2023/04/01", 38.6, 142.1, 44., 4.2}, {
        "2023/04/01", 41.1, 142.8, 28., 4.8}, {
        "2023/04/02", 36.4, 140.5, 55., 3.8}, {
        "2023/04/04", 30.5, 131.1, 30., 3.8}, {
        "2023/04/04", 38.1, 141.7, 53., 3.7}, {
        "2023/04/05", 35., 137.2, 39., 3.7}, {
        "2023/04/05", 42.7, 145., 60., 4.2}, {
        "2023/04/07", 36.7, 141.2, 75., 4.}, {
        "2023/04/07", 32.5, 130.6, 9., 3.8}, {
        "2023/04/08", 36., 139.4, 60., 3.6}, {
        "2023/04/09", 35.1, 137.2, 40., 3.7}, {
        "2023/04/09", 43.7, 143.9, 11., 2.7}, {
        "2023/04/10", 24.3, 122.9, 49., 5.}, {
        "2023/04/12", 37., 141.2, 48., 4.}, {
        "2023/04/12", 35.1, 132.7, 8., 3.9}, {
        "2023/04/12", 35.6, 140.1, 70., 3.9}, {
        "2023/04/12", 42.5, 143.7, 99., 4.3}, {
        "2023/04/13", 34., 135.2, 3., 2.3}, {
        "2023/04/13", 36.2, 140.9, 43., 3.5}, {
        "2023/04/14", 36.8, 138.6, 3., 2.5}, {
        "2023/04/15", 39.1, 142.4, 45., 4.3}, {
        "2023/04/15", 43., 145.5, 47., 3.9}, {
        "2023/04/15", 35., 133.4, 11., 2.9}, {
        "2023/04/17", 36., 137.5, 6., 3.3}, {
        "2023/04/17", 37.1, 141.4, 46., 4.8}, {
        "2023/04/17", 32.6, 130.6, 10., 3.6}, {
        "2023/04/20", 37.4, 137.2, 7., 3.2}, {
        "2023/04/21", 35.4, 136.7, 11., 3.3}, {
        "2023/04/22", 37.4, 137.2, 7., 2.5}, {
        "2023/04/22", 41.8, 141.1, 5., 2.5}, {
        "2023/04/22", 36.3, 140.6, 52., 3.3}, {
        "2023/04/22", 37.2, 141.3, 29., 4.2}, {
        "2023/04/23", 34., 135.2, 5., 2.5}, {
        "2023/04/24", 34., 135.2, 5., 2.4}, {
        "2023/04/25", 39.9, 141.9, 51., 4.1}, {
        "2023/04/25", 34., 135.2, 5., 2.5}, {
        "2023/04/25", 37., 139.3, 7., 2.2}, {
        "2023/04/26", 37.6, 141.6, 54., 4.3}, {
        "2023/04/27", 37., 141.1, 49., 4.}, {
        "2023/04/27", 26.1, 128.6, 32., 5.5}, {
        "2023/04/27", 36., 140., 51., 3.4}, {
        "2023/04/28", 41.4, 140.1, 8., 2.9}, {
        "2023/04/28", 26.4, 128.2, 36., 4.1}, {
        "2023/04/29", 32.3, 129.8, 13., 3.7}, {
        "2023/04/29", 32.3, 129.8, 13., 3.8}, {
        "2023/04/30", 37., 139.3, 7., 2.2}, {
        "2023/04/30", 35.6, 137.1, 10., 3.7}, {
        "2023/04/30", 37., 139.3, 8., 2.3}, {
        "2023/05/01", 26., 128.6, 30., 5.3}, {
        "2023/05/01", 26., 128.7, 18., 6.4}, {
        "2023/05/01", 42., 142.4, 71., 4.2}, {
        "2023/05/01", 36.1, 141.1, 19., 4.4}, {
        "2023/05/01", 34., 134.2, 44., 3.3}, {
        "2023/05/01", 36.4, 140.6, 53., 4.2}, {
        "2023/05/01", 27.5, 128.8, 16., 3.3}, {
        "2023/05/02", 37.8, 141.6, 57., 4.1}, {
        "2023/05/03", 36.6, 141., 46., 4.}, {
        "2023/05/05", 37.5, 137.2, 12., 3.9}, {
        "2023/05/05", 37.5, 137.2, 14., 4.3}, {
        "2023/05/05", 37.5, 137.2, 14., 3.6}, {
        "2023/05/05", 37.5, 137.2, 13., 3.8}, {
        "2023/05/05", 37.5, 137.2, 13., 3.3}, {
        "2023/05/05", 37.5, 137.2, 14., 3.5}, {
        "2023/05/05", 37.5, 137.2, 12., 3.6}, {
        "2023/05/05", 37.5, 137.2, 13., 4.}, {
        "2023/05/05", 37.5, 137.2, 12., 3.6}, {
        "2023/05/05", 37.5, 137.2, 13., 4.1}, {
        "2023/05/05", 37.5, 137.2, 12., 3.8}, {
        "2023/05/05", 37.5, 137.3, 14., 3.3}, {
        "2023/05/05", 37.5, 137.2, 12., 4.}, {
        "2023/05/05", 37.5, 137.2, 13., 3.5}, {
        "2023/05/05", 37.5, 137.2, 14., 5.9}, {
        "2023/05/05", 34.9, 135.3, 12., 3.}, {
        "2023/05/05", 37.6, 137.2, 10., 3.9}, {
        "2023/05/05", 39.3, 142., 48., 4.5}, {
        "2023/05/05", 37.5, 137.3, 13., 3.3}, {
        "2023/05/05", 37.5, 137.3, 13., 3.4}, {
        "2023/05/05", 37.5, 137.3, 13., 4.3}, {
        "2023/05/05", 37.5, 137.3, 12., 3.6}, {
        "2023/05/05", 37.5, 137.2, 12., 3.2}, {
        "2023/05/05", 37.5, 137.2, 11., 3.4}, {
        "2023/05/05", 37.5, 137.3, 14., 3.9}, {
        "2023/05/05", 37.5, 137.2, 13., 3.2}, {
        "2023/05/05", 37.5, 137.2, 13., 3.4}, {
        "2023/05/05", 37.5, 137.3, 12., 3.5}, {
        "2023/05/05", 37.5, 137.3, 12., 3.5}, {
        "2023/05/05", 37.5, 137.2, 12., 3.5}, {
        "2023/05/05", 37.5, 137.2, 13., 5.}, {
        "2023/05/05", 37.5, 137.3, 13., 4.}, {
        "2023/05/05", 37.5, 137.3, 12., 6.5}, {
        "2023/05/06", 37.5, 137.2, 12., 4.1}, {
        "2023/05/06", 37.5, 137.2, 11., 3.1}, {
        "2023/05/06", 41.4, 142., 56., 5.7}, {
        "2023/05/06", 37.5, 137.2, 12., 3.6}, {
        "2023/05/06", 42.9, 146.2, 41., 4.4}, {
        "2023/05/07", 39.1, 140.4, 2., 2.7}, {
        "2023/05/07", 37.5, 137.2, 12., 3.1}, {
        "2023/05/08", 37.5, 137.3, 13., 3.8}, {
        "2023/05/08", 37.5, 137.3, 13., 3.5}, {
        "2023/05/09", 39.6, 142.1, 49., 3.8}, {
        "2023/05/09", 40.9, 142., 59., 3.8}, {
        "2023/05/09", 37.5, 137.2, 9., 4.2}, {
        "2023/05/09", 37.5, 137.3, 14., 4.4}, {
        "2023/05/09", 37.5, 137.3, 15., 4.7}, {
        "2023/05/10", 37.6, 137.2, 13., 5.}, {
        "2023/05/10", 37.4, 137.3, 6., 2.9}, {
        "2023/05/10", 35.7, 140., 66., 3.9}, {
        "2023/05/10", 37.6, 137.2, 12., 4.9}, {
        "2023/05/10", 39.8, 142.2, 32., 4.2}, {
        "2023/05/10", 32.8, 130.8, 6., 3.1}, {
        "2023/05/11", 24.2, 125.2, 33., 5.9}, {
        "2023/05/11", 35.8, 140.5, 40., 3.7}, {
        "2023/05/11", 42.3, 143., 55., 5.5}, {
        "2023/05/11", 29.9, 130., 13., 4.3}, {
        "2023/05/11", 37.5, 137.2, 8., 3.3}, {
        "2023/05/11", 35.1, 140.1, 40., 5.2}, {
        "2023/05/12", 33.4, 132.4, 42., 4.2}, {
        "2023/05/12", 37.5, 137.2, 12., 3.3}, {
        "2023/05/13", 29.9, 130., 12., 5.1}, {
        "2023/05/14", 33.3, 139.3, 16., 5.5}, {
        "2023/05/14", 33.4, 139.2, 19., 5.9}, {
        "2023/05/14", 33.3, 139.2, 12., 5.9}, {
        "2023/05/14", 33.3, 139.3, 17., 5.6}, {
        "2023/05/15", 37.5, 137.1, 9., 2.9}, {
        "2023/05/15", 33.4, 139.3, 24., 5.2}, {
        "2023/05/16", 36.4, 140.6, 67., 3.8}, {
        "2023/05/18", 37.4, 137.2, 10., 3.6}, {
        "2023/05/19", 33.2, 132.2, 46., 4.5}, {
        "2023/05/20", 34.9, 140.2, 79., 4.2}, {
        "2023/05/21", 43.5, 146.7, 39., 4.7}, {
        "2023/05/21", 39.6, 142.1, 49., 3.5}, {
        "2023/05/21", 40.7, 141.1, 14., 2.8}, {
        "2023/05/21", 35.8, 140.5, 38., 3.4}, {
        "2023/05/22", 42.8, 144.5, 45., 3.8}, {
        "2023/05/22", 34.4, 139.2, 11., 2.6}, {
        "2023/05/22", 37.4, 137.2, 11., 3.}, {
        "2023/05/22", 34.4, 139.2, 11., 5.1}, {
        "2023/05/22", 34.4, 139.2, 10., 4.1}, {
        "2023/05/22", 34.4, 139.2, 12., 2.9}, {
        "2023/05/22", 34.4, 139.2, 13., 3.1}, {
        "2023/05/22", 34.4, 139.2, 10., 3.8}, {
        "2023/05/22", 34.4, 139.2, 11., 5.3}, {
        "2023/05/22", 34.4, 139.2, 11., 2.9}, {
        "2023/05/22", 34.4, 139.2, 12., 4.2}, {
        "2023/05/22", 37.4, 137.2, 11., 3.}, {
        "2023/05/22", 37.7, 141.6, 62., 4.}, {
        "2023/05/22", 29.7, 129.4, 191., 5.4}, {
        "2023/05/22", 37.6, 137.2, 11., 4.}, {
        "2023/05/23", 34., 134.8, 46., 4.}, {
        "2023/05/23", 34.4, 139.2, 10., 2.9}, {
        "2023/05/23", 34.4, 139.2, 9., 3.}, {
        "2023/05/23", 34.4, 139.2, 14., 3.}, {
        "2023/05/23", 34.5, 139.2, 12., 4.}, {
        "2023/05/23", 34.4, 139.2, 12., 2.9}, {
        "2023/05/24", 34.5, 139.2, 11., 2.9}, {
        "2023/05/24", 34.4, 139.2, 9., 4.1}, {
        "2023/05/25", 42., 142.5, 67., 4.2}, {
        "2023/05/26", 35.6, 140.6, 50., 3.4}, {
        "2023/05/26", 35.6, 140.7, 48., 4.4}, {
        "2023/05/26", 35.6, 140.6, 50., 6.2}, {
        "2023/05/26", 34.4, 139.2, 11., 2.3}, {
        "2023/05/27", 29.9, 129.9, 12., 4.6}, {
        "2023/05/27", 35.6, 140.7, 49., 4.1}, {
        "2023/05/28", 34.4, 139.2, 12., 2.8}, {
        "2023/05/28", 35.8, 140.9, 27., 3.4}, {
        "2023/05/29", 44.8, 142.1, 0., 2.}, {
        "2023/05/30", 37.5, 141.7, 44., 3.9}, {
        "2023/05/30", 32.6, 130.6, 12., 3.8}, {
        "2023/05/30", 37.4, 137.2, 9., 2.6}, {
        "2023/05/30", 37.5, 137.3, 4., 4.6}, {
        "2023/06/01", 29.9, 130., 11., 4.3}, {
        "2023/06/01", 38.7, 142.2, 41., 4.1}, {
        "2023/06/01", 37.5, 137.3, 5., 3.7}, {
        "2023/06/03", 42., 142.5, 65., 5.1}, {
        "2023/06/04", 35.8, 140., 70., 4.6}, {
        "2023/06/04", 37.4, 137.3, 3., 3.}, {
        "2023/06/05", 38.4, 142.1, 41., 4.3}, {
        "2023/06/06", 39.6, 140.5, 6., 3.}, {
        "2023/06/06", 36.8, 140.5, 7., 4.}, {
        "2023/06/06", 35.8, 140.9, 25., 3.7}, {
        "2023/06/08", 37.7, 141.6, 62., 4.2}, {
        "2023/06/08", 36.4, 140.5, 57., 3.4}, {
        "2023/06/09", 37.5, 137.2, 8., 3.1}, {
        "2023/06/09", 37.4, 137.4, 4., 3.8}, {
        "2023/06/10", 38.7, 142., 57., 3.7}, {
        "2023/06/10", 37.5, 137.2, 9., 3.}, {
        "2023/06/10", 34.4, 139.2, 9., 2.9}, {
        "2023/06/11", 42.5, 141.9, 136., 6.2}, {
        "2023/06/11", 33.8, 135.2, 51., 4.1}, {
        "2023/06/13", 37.5, 137.2, 9., 3.}, {
        "2023/06/14", 37.5, 137.3, 10., 3.6}, {
        "2023/06/15", 35.7, 140.6, 48., 4.2}, {
        "2023/06/15", 35.7, 140.7, 50., 4.2}, {
        "2023/06/16", 35.7, 140.7, 49., 4.9}, {
        "2023/06/16", 35.8, 140.1, 66., 4.}, {
        "2023/06/16", 31.5, 130.3, 6., 2.8}, {
        "2023/06/17", 41.3, 142.6, 35., 5.}, {
        "2023/06/17", 47.2, 147.8, 457., 5.8}, {
        "2023/06/17", 42.2, 142.9, 54., 4.1}, {
        "2023/06/17", 41.1, 142.8, 30., 5.7}, {
        "2023/06/19", 42.4, 143., 59., 5.}, {
        "2023/06/19", 34.7, 139.2, 0., 2.7}, {
        "2023/06/19", 31.2, 131.6, 27., 4.2}, {
        "2023/06/19", 31.2, 131.6, 28., 4.7}, {
        "2023/06/20", 36.5, 137.7, 1., 4.}, {
        "2023/06/20", 35.8, 139.6, 59., 3.7}, {
        "2023/06/21", 35.2, 137.2, 44., 3.4}, {
        "2023/06/22", 43., 141.9, 157., 4.6}, {
        "2023/06/22", 36.6, 140.9, 50., 3.8}, {
        "2023/06/22", 41.5, 142., 55., 4.1}, {
        "2023/06/22", 26.4, 127.9, 39., 5.2}, {
        "2023/06/24", 37.2, 141.8, 40., 5.}, {
        "2023/06/24", 45.7, 143.1, 338., 5.8}, {
        "2023/06/25", 36.5, 137.7, 0., 3.}, {
        "2023/06/25", 36., 137.5, 10., 3.2}, {
        "2023/06/28", 44.8, 142.1, 7., 3.1}, {
        "2023/06/28", 42.2, 142.7, 31., 3.4}, {
        "2023/06/28", 35.6, 141.4, 9., 4.5}, {
        "2023/06/28", 42.1, 134.4, 518., 6.3}, {
        "2023/06/28", 37.4, 137.3, 4., 3.3}, {
        "2023/06/29", 28.3, 129.4, 27., 3.1}, {
        "2023/06/30", 36.6, 140.9, 49., 4.}, {
        "2023/06/30", 36.5, 140.7, 55., 3.9}, {
        "2023/07/01", 35.5, 140.9, 36., 4.9}, {
        "2023/07/01", 24.3, 124.9, 56., 4.2}, {
        "2023/07/02", 34.1, 135., 9., 3.3}, {
        "2023/07/02", 34.9, 135.3, 6., 3.3}, {
        "2023/07/03", 36.6, 138.2, 7., 3.}, {
        "2023/07/03", 36.6, 138.2, 8., 3.1}, {
        "2023/07/06", 42.4, 142.6, 23., 4.3}, {
        "2023/07/07", 43.4, 146.1, 60., 3.7}, {
        "2023/07/08", 37.5, 137.2, 13., 4.}, {
        "2023/07/08", 38.9, 142.4, 48., 4.1}, {
        "2023/07/10", 37., 140.9, 73., 4.}, {
        "2023/07/10", 35.7, 140.6, 50., 4.}, {
        "2023/07/10", 35.6, 140.4, 66., 4.5}, {
        "2023/07/12", 37.5, 137.3, 4., 3.6}, {
        "2023/07/13", 40., 142.7, 34., 5.}, {
        "2023/07/16", 37.6, 137.3, 9., 3.8}, {
        "2023/07/16", 34., 135.5, 64., 4.}, {
        "2023/07/17", 42.7, 143.3, 111., 4.5}, {
        "2023/07/17", 37.5, 137.2, 8., 3.2}, {
        "2023/07/18", 37.4, 141.4, 33., 3.7}, {
        "2023/07/19", 37.8, 141.6, 50., 4.1}, {
        "2023/07/20", 35.7, 140.7, 50., 4.4}, {
        "2023/07/20", 35.9, 137.7, 9., 3.7}, {
        "2023/07/20", 34.2, 135.1, 7., 2.7}, {
        "2023/07/22", 32.6, 132.2, 37., 5.}, {
        "2023/07/22", 35.8, 137.4, 6., 3.6}, {
        "2023/07/22", 36.4, 140.6, 52., 4.8}, {
        "2023/07/23", 36.6, 140.9, 86., 3.8}, {
        "2023/07/24", 38.2, 141.5, 64., 4.1}, {
        "2023/07/24", 35.9, 140., 68., 4.2}, {
        "2023/07/26", 36.6, 132.7, 37., 4.5}, {
        "2023/07/26", 32., 131.6, 42., 4.4}, {
        "2023/07/26", 31.5, 130.6, 4., 3.1}, {
        "2023/07/27", 43.9, 147.6, 85., 5.2}, {
        "2023/07/27", 36., 139.8, 46., 3.7}, {
        "2023/07/28", 32.7, 130.1, 10., 2.9}, {
        "2023/07/28", 32.7, 130.1, 10., 3.4}, {
        "2023/07/29", 36.3, 139.9, 77., 4.6}, {
        "2023/07/30", 43.6, 144.4, 0., 2.7}, {
        "2023/07/30", 37.4, 137.2, 10., 3.2}, {
        "2023/07/31", 36.7, 140.5, 8., 3.6}, {
        "2023/08/01", 36.9, 141.8, 68., 4.3}, {
        "2023/08/05", 36.7, 140.7, 92., 3.8}, {
        "2023/08/07", 34.2, 135.4, 6., 3.}, {
        "2023/08/07", 30.7, 131.5, 37., 4.7}, {
        "2023/08/07", 30.7, 131.4, 43., 5.4}, {
        "2023/08/08", 32.2, 132., 27., 3.8}, {
        "2023/08/09", 35.1, 140.6, 53., 4.1}, {
        "2023/08/09", 35.7, 140.8, 10., 3.3}, {
        "2023/08/09", 37.9, 141.8, 61., 4.3}, {
        "2023/08/11", 38.6, 142.3, 58., 4.7}, {
        "2023/08/11", 41.1, 142.9, 28., 6.2}, {
        "2023/08/12", 45., 141.8, 0., 3.}, {
        "2023/08/12", 34.9, 137.2, 39., 3.9}, {
        "2023/08/13", 45., 141.8, 0., 2.6}, {
        "2023/08/15", 38.9, 141.6, 64., 3.7}, {
        "2023/08/16", 38., 141.8, 55., 4.1}, {
        "2023/08/16", 39.7, 141.8, 58., 4.2}, {
        "2023/08/16", 37.4, 137.3, 8., 3.}, {
        "2023/08/16", 24.8, 125.3, 46., 4.6}, {
        "2023/08/17", 32.6, 132., 40., 3.5}, {
        "2023/08/19", 43.5, 146.1, 76., 4.5}, {
        "2023/08/19", 35.9, 136.6, 10., 4.3}, {
        "2023/08/19", 42.3, 143.1, 51., 5.1}, {
        "2023/08/19", 39.6, 142.1, 47., 3.9}, {
        "2023/08/21", 27.3, 128.9, 28., 4.}, {
        "2023/08/21", 42.7, 142.9, 116., 4.3}, {
        "2023/08/22", 36.4, 139.3, 6., 3.}, {
        "2023/08/22", 38.2, 141.7, 58., 4.2}, {
        "2023/08/23", 40.1, 141.9, 15., 4.7}, {
        "2023/08/24", 33.9, 135.6, 43., 3.4}, {
        "2023/08/25", 39.4, 143.3, 15., 6.}, {
        "2023/08/26", 33.9, 131.8, 74., 4.6}, {
        "2023/08/26", 36.5, 140.5, 58., 3.6}, {
        "2023/08/27", 36.6, 139.3, 5., 3.4}, {
        "2023/08/27", 35.5, 140.9, 37., 4.6}, {
        "2023/08/28", 37.1, 142.3, 11., 5.}, {
        "2023/08/28", 37.5, 141.3, 30., 4.1}, {
        "2023/08/31", 37.6, 141.5, 82., 4.1}, {
        "2023/08/31", 37.7, 141.7, 55., 4.6}, {
        "2023/09/02", 37.5, 137.2, 13., 3.4}, {
        "2023/09/03", 43., 144.3, 99., 4.1}, {
        "2023/09/04", 37.3, 141.3, 27., 4.1}, {
        "2023/09/05", 36.7, 141.5, 36., 4.4}, {
        "2023/09/05", 35.8, 140.1, 68., 4.2}, {
        "2023/09/05", 35.8, 140.1, 72., 4.6}, {
        "2023/09/05", 34., 135.2, 4., 2.3}, {
        "2023/09/05", 36., 139.9, 45., 3.2}, {
        "2023/09/07", 32.9, 128.9, 12., 2.8}, {
        "2023/09/08", 38.9, 142.1, 46., 5.4}, {
        "2023/09/08", 29.3, 129.3, 18., 4.4}, {
        "2023/09/09", 33.5, 132., 71., 4.1}, {
        "2023/09/09", 29.3, 129.2, 19., 3.8}, {
        "2023/09/09", 29.3, 129.3, 19., 5.1}, {
        "2023/09/09", 29.3, 129.3, 15., 4.9}, {
        "2023/09/11", 36.8, 139.8, 4., 2.9}, {
        "2023/09/11", 31., 131.5, 33., 4.3}, {
        "2023/09/11", 29.3, 129.3, 18., 5.3}, {
        "2023/09/12", 28.1, 130.3, 35., 4.8}, {
        "2023/09/12", 28.1, 130.3, 36., 4.4}, {
        "2023/09/12", 29.3, 129.3, 19., 4.6}, {
        "2023/09/14", 39., 139.9, 10., 2.7}, {
        "2023/09/14", 28.1, 129.4, 34., 3.8}, {
        "2023/09/15", 35.3, 137.1, 48., 3.6}, {
        "2023/09/15", 37.5, 137.2, 13., 3.6}, {
        "2023/09/16", 37.1, 141.4, 44., 4.2}, {
        "2023/09/17", 34., 135.3, 8., 3.2}, {
        "2023/09/18", 26.4, 125.2, 182., 6.5}, {
        "2023/09/19", 38.4, 141.6, 57., 5.6}, {
        "2023/09/22", 43., 144.3, 97., 3.7}, {
        "2023/09/23", 34.8, 139.3, 0., 3.}, {
        "2023/09/24", 35.7, 140.6, 51., 3.7}, {
        "2023/09/25", 37.5, 137.2, 8., 3.6}, {
        "2023/09/25", 41.4, 142., 54., 4.1}, {
        "2023/09/26", 34.9, 135.4, 10., 3.6}, {
        "2023/09/26", 38.3, 141.1, 77., 4.6}, {
        "2023/09/27", 37.5, 141.4, 55., 4.9}, {
        "2023/09/27", 34.9, 135.4, 10., 3.}, {
        "2023/09/28", 37.4, 137.2, 12., 4.3}, {
        "2023/09/28", 37.5, 137.2, 10., 3.7}, {
        "2023/09/29", 36.5, 140.8, 83., 3.8}, {
        "2023/09/29", 36.8, 140.3, 109., 4.6}, {
        "2023/09/29", 44.3, 148.8, 30., 6.2}, {
        "2023/09/30", 40., 140.6, 5., 3.9}, {
        "2023/09/30", 43.3, 143.9, 1., 4.1}}}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[{
             TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
             TypeSystem`PackageScope`UnknownShape[False], 
             TypeSystem`PackageScope`UnknownShape[False], 
             TypeSystem`PackageScope`UnknownShape[False], 
             TypeSystem`PackageScope`UnknownShape[False]}], 
           DirectedInfinity[1], 5, {All, All}]], 20, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Tuple[{
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`AnyType, TypeSystem`AnyType}], 988], 1], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[{
             TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
             TypeSystem`PackageScope`UnknownShape[False], 
             TypeSystem`PackageScope`UnknownShape[False], 
             TypeSystem`PackageScope`UnknownShape[False], 
             TypeSystem`PackageScope`UnknownShape[False]}], 
           DirectedInfinity[1], 5, {All, All}]], 20, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Tuple[{
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`AnyType, TypeSystem`AnyType}], 988], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 5, "DataRowCount" -> 
     1, "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["Origin Time", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Latitude", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Longitude", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Depth", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Magnitude", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/01", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["125.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["135.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["140.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["137.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/03", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["38.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["142.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/03", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["122.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/04", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["137.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/04", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 9, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 9, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["141.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 9, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["55.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 9, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 9, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/05", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 10, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 10, 2},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["140.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 10, 3},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["49.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 10, 4},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 10, 5},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/07", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 11, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 11, 2},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["128.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 11, 3},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["49.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 11, 4},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 11, 5},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/07", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 12, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 12, 2},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["135.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 12, 3},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["52.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 12, 4},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 12, 5},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/08", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 13, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 13, 2},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["128.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 13, 3},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["43.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 13, 4},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 13, 5},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/10", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 14, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 14, 2},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["129.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 14, 3},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 14, 4},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 14, 5},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 15, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 15, 2},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["131.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 15, 3},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 15, 4},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 15, 5},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 16, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["38.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 16, 2},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["142.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 16, 3},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 16, 4},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 16, 5},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 17, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 17, 2},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["140.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 17, 3},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["82.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 17, 4},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 17, 5},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/13", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 18, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 18, 2},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["131.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 18, 3},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 18, 4},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 18, 5},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/13", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 19, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 19, 2},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["131.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 19, 3},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 19, 4},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 19, 5},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/14", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 20, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 20, 2},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["137.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 20, 3},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 20, 4},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 20, 5},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["988 total \:203a ", ""], 
                  Style[
                   Superscript["988 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1}, 
                   2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{491.9, {191.19942315808908`, 195.21177684191093`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{491.9, {191.19942315808908`, 195.21177684191093`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9409514600073853`*^9, 3.9418658638868885`*^9, 
  3.9418706269121933`*^9, 3.941871458334749*^9, 3.9419705488656063`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"51ed4496-b654-5840-8410-e5b399f80803"]
}, Open  ]],

Cell[TextData[StyleBox["Magnitudo",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.940951470310524*^9, 
  3.9409514720879745`*^9}},ExpressionUUID->"468885d6-8174-344e-b8ac-\
e9e7c05fd6af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"magnitudo", "=", 
  RowBox[{"cleanDataset", "[", 
   RowBox[{"All", ",", 
    RowBox[{"2", ";;"}], ",", 
    RowBox[{"{", "5", "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"8951e9c1-fd05-4a48-80ed-5b1a7311e3c1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> CompressedData["
1:eJx1mV1u40YQhG3LXlGUTFIj6scL5CFnyAGiM+wRAiSvOc/umZIT5B55TnZH
1YP6mhRgDEjOTHdXV//M+Off/vzy++bp6en5/79/NnWsv+n+7ev33/v9jx+/
4f73X99/h3j/y4/fx73OPzy+TzG/fj/GM8f6fYzR5ZXH8zHkSo72dXmf7tJb
8+v7Pvapz1OMdZ997Kv3dX2J/TTqu78voX/9/jnskB6OA/cbkv1uR8HzIewl
nppHXKmHyznEeson3o7bCHzPj+cL9tslPzi/dtD3mvzveuxDH4513vx4PsPu
MdYLV99/DvnL+HWPeV3wTvvVfU6Bg+t1wvoCHrwifuSPOfFzmR+HkOM8eg45
5CP5Lv9Invtrh/l94pHjcQK+Pz3W3QIn9+815rs957BnOf4K4n9CvpjAiwv4
ewy+Mj+4vIaD9vU8eAV/xrSP/E97lvlboF8feWV5vxYftM/jYF6Vr+/+foS9
BeME/OfAkzjpWfaJB/KL43mCHwvioEv5YTleC3AYse6c4snxOMCOOXB3vzRc
XL8+8bOOqlNzxAvjrK57TflR+NLv5JHHg/Ky6sRLimf6S37ResZfHf/9tcrb
AreCfLRd6QemlH/1vu7zFPgux8cJfBaPLsBxXokf8bELeS4n5xvpI3vc3hH4
tPpe7XyLePR9mY978OmGvMz4msDLppf28zzAeY1vbj/r3DHyncfbHvvNKR7p
b49/2d/yiJ6FG3ngcdth/nvyo9ejE/J5q/teB/rgr+azvku/Kkd1vNVtz2st
rzA+HEf2RVv4vWDfhqPwpjzWK61zPpTAX8+eJ4/43oc8zxtTrGecuX82yAv7
sJvviZvz4Qz+Tckez6dvwGsLPrxC/gY8op09/MTnEv7Te4934TND3i2dazSf
dcX5k/VxvMbEZ8+TBXHK+tnyYR0vgetyP7jHSH7OYb/3NZvU7zt/9vFMvZx3
zMftPCU5y+eEcQXnU+Dq+asgL00RZ47fHOu0j+Om+nVb6YuZ17oVf52xPtcL
1/Md9rb64Dxs5zD5TfP1nfqwT5Rczff6o3peMB4QTzwfdyke3E7eH5wR/1fM
b/Il1+2Q/1s+ZH6Qv3iuW+ZH47nnH/ZPjIc38HYLvmyTfuKx4zoAT9b9xit9
93zTzsEebzxH3mD3MfHH5Tc++PyWN73f0T5d8Fb68dnX5z5IOAnH5fibIG+A
/UPwSjxyffqIe/rX/dniwHk5IN5vsI/n/AF54wT7mefa/ZLyBPOF8yHfE3rd
zedMH+XfF9hLv4yJ39Lb5e8Qr68xOv4T5GzAM/UPz4kHdaT/trGe96jax9+/
hB/r+4/Qi30p85DrSVyZfwbgcUh5y+dPK+ta/vZ7EN5z8ByyT3p5v8s+YZf4
vDyyrnxGnegiztiXi588H3n8DOA375tK6OH5YkScsW5fgwfOI/p7XvH7HOt8
P92jXpBH5hSn8hPve9x+5lGtVzx1oY9wd7kNV/Hcv7c8Kj/y/sH5vcX8Ln1n
HLIvdf/dIg7rWMB/1o2n8C/x0Hr3I/NA67c9bo7JnrW+mrjyXOz43pAnuvA/
+0M/V67dW12B6yW+ezzl/2Owj3e8B+w7J7nS389tHfwj/D8QR+RJjk+Prz7k
uRzeQ6z9f4jnkpavZC/n+fnsHfxpcllXl8/JxJNyjmGX8Hb/8H6ihFzHn/8n
an2Y37/wPpJ9ZMun4q3zeYw4Iz7L/Vjum1zP9Xtx17/x2Hl2CzmOwx7yZ9g7
IU/s0/fl85Pi5AX9zaeV+xrW7zn47v5t/b344/s0v2s/3i95/lC/rzp8SfmJ
/5dyPx4g9xTrGH9uX+ON5+fp/h9SX/sF
      "], "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`MatrixShape[987, 1], 20, 1, {All, All}]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 1], 987], 1], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`MatrixShape[987, 1], 20, 1, {All, All}]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 1], 987], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     1, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 9, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 10, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 11, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 12, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 13, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 14, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 15, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 16, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 17, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 18, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 19, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 20, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["987 total \:203a ", ""], 
                  Style[
                   Superscript["987 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1}, 
                   2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       66.47999999999999, {196.6644685633724, 200.7870514366274}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      66.47999999999999, {196.6644685633724, 200.7870514366274}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9409515657901955`*^9, 3.9418658643153305`*^9, 
  3.941870627158409*^9, 3.9418714585691833`*^9, 3.941970549149891*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"160bd126-33ee-5a40-88ae-0343ce938168"]
}, Open  ]],

Cell[TextData[StyleBox["Depth",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.9409515754474583`*^9, 
  3.9409515760907917`*^9}},ExpressionUUID->"6c9885b2-0c56-754c-a801-\
cfa7f5e482f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"depth", "=", 
  RowBox[{"cleanDataset", "[", 
   RowBox[{"All", ",", 
    RowBox[{"2", ";;"}], ",", 
    RowBox[{"{", "4", "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"3b795995-6ac7-8645-9f08-231dbd0b8399"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> CompressedData["
1:eJyFmU1uHEUUxwdlk2UWWWThxdCKRhaKrICDIeDgxg6J7QnENiQhINBgFBAr
NoAEYtFH4Agcpe/BJkfIEUCa/+9J9RsaWrKeXs2ret8fVX798seLF1dms9lr
//z9dWUN199+v4Zd4EngG4EPA99v14dl4HELZ6fBPwq+E3gz8EF+/yz4B4G9
+H68huNZ6JHrWuA86x8GvxX8fvDA4anwo8DDrB9p/cG/08+0D7o6B/m3sx77
YI9Z5Byi1+xGYOw7YOdOcoSuPw+OHeHDvueB2Ome9LA+8m+dv2x/x+61bzdw
X/rsBb4d+FarT/EjLt7M/k9aOcqfW5LnsMWHR8FPtY4fkDf7iMf+l5Z/2Q07
bgnih9uB91rIuRV3+SofODd+dNyUvvg1fCve0Q/7Jc5nC+07Fp3pdybWgXcC
8d/1wOT9+Glw/BG/DY8DH7Vw9m5w/LsruqyvvguO/6T3cNbSl5/hfyoIf+Iy
+4nHjbgBt9+XLb560Z5b8gqvvPb5yxYWvf1AvH0diH9V/8YL6UM8I3/qa+Xv
RSvXsAokPp+09CUvv+MH9KIfvKN9+Jf9qVNVN9AHeROPPfJ1gbNA6grnwmfR
/l7rxEnisuw5lRf4y/qxjj3pk/D1ecA94elvG3UX/tjnoX5Pvan6ih7YUX7q
n4WedeTmPPgs2nOL/m4g+YJ8rw7WkLqQeomdVpctn4rH7ZZuwz7IEzn7lehc
BzhnLrrocfZzcOyDPT3PXM159CHq3rJdr/kEO6gvEd/zb7JO/UU+7MX+feF3
JAf1Fj2pn8TNUnRPWzmKL3GCfbvQKa6H5y2d63L1O8cP+39o+Zec+D92Z36r
c560+pT88Uv1ifTTHj+Qj8yb+Bd5FQ81P5GvxHfOH59Jr6l8xl/Yd0vrpk99
G8jHfoIevnNB6mqX/fRd4kR8qo4yn8Y+/U/B8Xv6f888nLpd9qKP4w/Olf7o
MzAvUk/w+3Wdw7yOHO53e8K77GceZG6lP3EO/sVe3CN8/i39jv/sTyB5cN7i
lXfQea7DLtB3E3yQA7vwOb6ByEMfsLx84DcmIPLTVw9bfKNOA6PXy1/Fl7zi
U1zXfQI/YRfqrfxd+UAfdr9z3kOv+Wejnx1KTuL1SPTUJfKVulV+CqT+k4/E
L/USuXWPKj2RP/W98sp9ivqI/OiLHc5b+pF574usEy9dC8vP+FFzQfWtbcG7
LU5/HHRvqnk9co/kbd/SbdRd7kXY7b5+f0/6MG+gD5/rlvJ+9Zv4Iz8f+060
Dh3xw1yCnPQh/LNs6WaXrdwVl7q3jfiP+FCdqbrftfJUnfF8qntM5V/sOfh+
S52Af9k39Oj3VdaxI/di/PK4Xa+5wvMJEP9iT+Yw7MP7jucT9PY9YyE65i3y
mryj78En54zMV+SZ+kbVN95PLlq87vXIhd+wfyd5cj55XOfQn6k36M88OTW3
4LeF6PUOV+84xAn3FeKbuS58R9/TkAe/kR/YU3Mx9hw/z7rncXDqgfLO72Z+
Nyk6cM/V97TOvHKidb0DlD696Im/w0D7gXNuip66lHeJkXgiftEfubkP0u/c
Bz3vTM2xrrtT+BS91//v/cnnut9MyWv6qTl96lzfQ+t97r/Pq/rm/jn1jsb8
Rx5zbq/fwZlnPR/M299r3rd+1LNdrdP3kDf1u+5f+Clxw3veoHtD6en38MUE
1Hv0xv3E9PZT6u/L77Xu/O4k35TfQ1d6k6fHwiWP63/dK/gm7tU1H1L38F/q
SM88RH5fFZ3fmZiz9K5a8XFN651g3iOqPrHuPOVdkHjHXsRr+tcfv2fd/YH8
4MNe9Jm8G/n96s9vxd/vB7HLnPccPtf5g8BuDW8PwfFH5Cn9/H8E289+wN7c
k/3OwD2bfog+vjcwB8Anv49ftnyqPpwIso/5Gvn1zsz9uO4t56KnnkSuHnrn
WWDPuwOf+xfxzDsKcRN+1c/xA32M9xHsSXwQN/kqHvjII/zIPuRBD/IK+eGH
f6CDH3Ms9uTcHekBfiE65ofD4NQV8oR7kup9zT/kDfuxK3zId9cf9JiaH4D0
K84hzvh/CPEJf7/T87v7O/LE/iP/x0le9eiXb2Newh6Kt0HrnjOYj3vyhzmK
ue3Vwd94B1cj
      "], "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`MatrixShape[987, 1], 20, 1, {All, All}]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 1], 987], 1], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`MatrixShape[987, 1], 20, 1, {All, All}]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 1], 987], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     1, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["28.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["50.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["46.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["27.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["55.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["49.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 9, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["49.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 10, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["52.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 11, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["43.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 12, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["15.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 13, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 14, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["44.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 15, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["82.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 16, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["30.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 17, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["32.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 18, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 19, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["58.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 20, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["987 total \:203a ", ""], 
                  Style[
                   Superscript["987 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1}, 
                   2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       66.47999999999999, {196.6644685633724, 200.7870514366274}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      66.47999999999999, {196.6644685633724, 200.7870514366274}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940951585511492*^9, 3.9418658644439354`*^9, 
  3.941870627262823*^9, 3.9418714586785297`*^9, 3.941970549396698*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"a52dad6f-06be-ba42-9ab1-6d6153216793"]
}, Open  ]],

Cell[TextData[StyleBox["Date",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.940951603537771*^9, 
  3.9409516040229454`*^9}},ExpressionUUID->"a93989af-2e6f-394b-92fc-\
7ffb98631d55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"date", "=", 
  RowBox[{"cleanDataset", "[", 
   RowBox[{"All", ",", 
    RowBox[{"2", ";;"}], ",", 
    RowBox[{"{", "1", "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"365704e5-ae87-c94a-af00-9b955544a9ae"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {{{"2022/01/01"}, {"2022/01/02"}, {"2022/01/02"}, {
        "2022/01/02"}, {"2022/01/03"}, {"2022/01/03"}, {"2022/01/04"}, {
        "2022/01/04"}, {"2022/01/05"}, {"2022/01/07"}, {"2022/01/07"}, {
        "2022/01/08"}, {"2022/01/10"}, {"2022/01/11"}, {"2022/01/11"}, {
        "2022/01/11"}, {"2022/01/13"}, {"2022/01/13"}, {"2022/01/14"}, {
        "2022/01/14"}, {"2022/01/15"}, {"2022/01/15"}, {"2022/01/16"}, {
        "2022/01/18"}, {"2022/01/18"}, {"2022/01/19"}, {"2022/01/19"}, {
        "2022/01/22"}, {"2022/01/22"}, {"2022/01/22"}, {"2022/01/22"}, {
        "2022/01/22"}, {"2022/01/22"}, {"2022/01/22"}, {"2022/01/22"}, {
        "2022/01/22"}, {"2022/01/22"}, {"2022/01/22"}, {"2022/01/22"}, {
        "2022/01/22"}, {"2022/01/23"}, {"2022/01/23"}, {"2022/01/23"}, {
        "2022/01/27"}, {"2022/01/28"}, {"2022/01/28"}, {"2022/01/28"}, {
        "2022/01/29"}, {"2022/01/29"}, {"2022/01/29"}, {"2022/01/30"}, {
        "2022/01/30"}, {"2022/01/30"}, {"2022/01/31"}, {"2022/01/31"}, {
        "2022/02/01"}, {"2022/02/01"}, {"2022/02/01"}, {"2022/02/02"}, {
        "2022/02/03"}, {"2022/02/03"}, {"2022/02/04"}, {"2022/02/04"}, {
        "2022/02/04"}, {"2022/02/06"}, {"2022/02/06"}, {"2022/02/06"}, {
        "2022/02/07"}, {"2022/02/08"}, {"2022/02/09"}, {"2022/02/09"}, {
        "2022/02/09"}, {"2022/02/10"}, {"2022/02/11"}, {"2022/02/11"}, {
        "2022/02/11"}, {"2022/02/11"}, {"2022/02/12"}, {"2022/02/12"}, {
        "2022/02/12"}, {"2022/02/13"}, {"2022/02/14"}, {"2022/02/14"}, {
        "2022/02/14"}, {"2022/02/15"}, {"2022/02/16"}, {"2022/02/17"}, {
        "2022/02/17"}, {"2022/02/18"}, {"2022/02/19"}, {"2022/02/19"}, {
        "2022/02/19"}, {"2022/02/21"}, {"2022/02/21"}, {"2022/02/21"}, {
        "2022/02/22"}, {"2022/02/22"}, {"2022/02/23"}, {"2022/02/23"}, {
        "2022/02/24"}, {"2022/02/24"}, {"2022/02/24"}, {"2022/02/24"}, {
        "2022/02/25"}, {"2022/02/25"}, {"2022/02/26"}, {"2022/02/26"}, {
        "2022/02/26"}, {"2022/02/28"}, {"2022/03/01"}, {"2022/03/02"}, {
        "2022/03/03"}, {"2022/03/06"}, {"2022/03/07"}, {"2022/03/07"}, {
        "2022/03/07"}, {"2022/03/08"}, {"2022/03/08"}, {"2022/03/08"}, {
        "2022/03/08"}, {"2022/03/09"}, {"2022/03/10"}, {"2022/03/10"}, {
        "2022/03/10"}, {"2022/03/11"}, {"2022/03/11"}, {"2022/03/11"}, {
        "2022/03/12"}, {"2022/03/12"}, {"2022/03/12"}, {"2022/03/12"}, {
        "2022/03/13"}, {"2022/03/13"}, {"2022/03/15"}, {"2022/03/16"}, {
        "2022/03/16"}, {"2022/03/16"}, {"2022/03/16"}, {"2022/03/16"}, {
        "2022/03/17"}, {"2022/03/17"}, {"2022/03/17"}, {"2022/03/17"}, {
        "2022/03/17"}, {"2022/03/17"}, {"2022/03/17"}, {"2022/03/17"}, {
        "2022/03/17"}, {"2022/03/17"}, {"2022/03/17"}, {"2022/03/17"}, {
        "2022/03/17"}, {"2022/03/17"}, {"2022/03/17"}, {"2022/03/17"}, {
        "2022/03/17"}, {"2022/03/17"}, {"2022/03/18"}, {"2022/03/18"}, {
        "2022/03/18"}, {"2022/03/18"}, {"2022/03/18"}, {"2022/03/19"}, {
        "2022/03/19"}, {"2022/03/19"}, {"2022/03/19"}, {"2022/03/19"}, {
        "2022/03/20"}, {"2022/03/20"}, {"2022/03/20"}, {"2022/03/21"}, {
        "2022/03/21"}, {"2022/03/21"}, {"2022/03/21"}, {"2022/03/23"}, {
        "2022/03/23"}, {"2022/03/23"}, {"2022/03/23"}, {"2022/03/23"}, {
        "2022/03/24"}, {"2022/03/24"}, {"2022/03/24"}, {"2022/03/24"}, {
        "2022/03/24"}, {"2022/03/24"}, {"2022/03/24"}, {"2022/03/24"}, {
        "2022/03/25"}, {"2022/03/25"}, {"2022/03/25"}, {"2022/03/25"}, {
        "2022/03/25"}, {"2022/03/26"}, {"2022/03/26"}, {"2022/03/26"}, {
        "2022/03/27"}, {"2022/03/27"}, {"2022/03/27"}, {"2022/03/27"}, {
        "2022/03/27"}, {"2022/03/28"}, {"2022/03/28"}, {"2022/03/29"}, {
        "2022/03/29"}, {"2022/03/30"}, {"2022/03/30"}, {"2022/03/30"}, {
        "2022/03/30"}, {"2022/03/31"}, {"2022/03/31"}, {"2022/04/01"}, {
        "2022/04/01"}, {"2022/04/02"}, {"2022/04/02"}, {"2022/04/02"}, {
        "2022/04/03"}, {"2022/04/03"}, {"2022/04/03"}, {"2022/04/04"}, {
        "2022/04/04"}, {"2022/04/04"}, {"2022/04/04"}, {"2022/04/04"}, {
        "2022/04/04"}, {"2022/04/06"}, {"2022/04/06"}, {"2022/04/06"}, {
        "2022/04/07"}, {"2022/04/07"}, {"2022/04/07"}, {"2022/04/07"}, {
        "2022/04/08"}, {"2022/04/08"}, {"2022/04/08"}, {"2022/04/08"}, {
        "2022/04/09"}, {"2022/04/10"}, {"2022/04/10"}, {"2022/04/10"}, {
        "2022/04/11"}, {"2022/04/11"}, {"2022/04/13"}, {"2022/04/13"}, {
        "2022/04/13"}, {"2022/04/13"}, {"2022/04/14"}, {"2022/04/15"}, {
        "2022/04/15"}, {"2022/04/18"}, {"2022/04/19"}, {"2022/04/22"}, {
        "2022/04/22"}, {"2022/04/22"}, {"2022/04/23"}, {"2022/04/23"}, {
        "2022/04/24"}, {"2022/04/24"}, {"2022/04/24"}, {"2022/04/24"}, {
        "2022/04/25"}, {"2022/04/26"}, {"2022/04/27"}, {"2022/04/27"}, {
        "2022/04/28"}, {"2022/04/28"}, {"2022/04/29"}, {"2022/04/29"}, {
        "2022/04/30"}, {"2022/05/01"}, {"2022/05/02"}, {"2022/05/02"}, {
        "2022/05/02"}, {"2022/05/02"}, {"2022/05/03"}, {"2022/05/03"}, {
        "2022/05/04"}, {"2022/05/05"}, {"2022/05/05"}, {"2022/05/06"}, {
        "2022/05/07"}, {"2022/05/08"}, {"2022/05/09"}, {"2022/05/09"}, {
        "2022/05/09"}, {"2022/05/10"}, {"2022/05/10"}, {"2022/05/10"}, {
        "2022/05/10"}, {"2022/05/12"}, {"2022/05/12"}, {"2022/05/13"}, {
        "2022/05/14"}, {"2022/05/14"}, {"2022/05/14"}, {"2022/05/16"}, {
        "2022/05/17"}, {"2022/05/17"}, {"2022/05/17"}, {"2022/05/17"}, {
        "2022/05/18"}, {"2022/05/20"}, {"2022/05/20"}, {"2022/05/21"}, {
        "2022/05/21"}, {"2022/05/22"}, {"2022/05/22"}, {"2022/05/22"}, {
        "2022/05/23"}, {"2022/05/23"}, {"2022/05/23"}, {"2022/05/24"}, {
        "2022/05/25"}, {"2022/05/27"}, {"2022/05/27"}, {"2022/05/29"}, {
        "2022/05/31"}, {"2022/05/31"}, {"2022/06/01"}, {"2022/06/01"}, {
        "2022/06/01"}, {"2022/06/02"}, {"2022/06/02"}, {"2022/06/02"}, {
        "2022/06/03"}, {"2022/06/03"}, {"2022/06/03"}, {"2022/06/07"}, {
        "2022/06/07"}, {"2022/06/09"}, {"2022/06/09"}, {"2022/06/09"}, {
        "2022/06/09"}, {"2022/06/10"}, {"2022/06/10"}, {"2022/06/11"}, {
        "2022/06/12"}, {"2022/06/12"}, {"2022/06/12"}, {"2022/06/13"}, {
        "2022/06/13"}, {"2022/06/14"}, {"2022/06/14"}, {"2022/06/14"}, {
        "2022/06/14"}, {"2022/06/15"}, {"2022/06/16"}, {"2022/06/17"}, {
        "2022/06/17"}, {"2022/06/19"}, {"2022/06/19"}, {"2022/06/19"}, {
        "2022/06/19"}, {"2022/06/19"}, {"2022/06/19"}, {"2022/06/19"}, {
        "2022/06/19"}, {"2022/06/20"}, {"2022/06/20"}, {"2022/06/20"}, {
        "2022/06/20"}, {"2022/06/20"}, {"2022/06/20"}, {"2022/06/20"}, {
        "2022/06/20"}, {"2022/06/21"}, {"2022/06/21"}, {"2022/06/21"}, {
        "2022/06/21"}, {"2022/06/23"}, {"2022/06/23"}, {"2022/06/24"}, {
        "2022/06/26"}, {"2022/06/27"}, {"2022/06/28"}, {"2022/06/29"}, {
        "2022/06/29"}, {"2022/06/30"}, {"2022/06/30"}, {"2022/07/02"}, {
        "2022/07/02"}, {"2022/07/05"}, {"2022/07/05"}, {"2022/07/05"}, {
        "2022/07/06"}, {"2022/07/06"}, {"2022/07/06"}, {"2022/07/07"}, {
        "2022/07/08"}, {"2022/07/08"}, {"2022/07/08"}, {"2022/07/09"}, {
        "2022/07/09"}, {"2022/07/09"}, {"2022/07/09"}, {"2022/07/12"}, {
        "2022/07/15"}, {"2022/07/16"}, {"2022/07/16"}, {"2022/07/17"}, {
        "2022/07/17"}, {"2022/07/17"}, {"2022/07/20"}, {"2022/07/20"}, {
        "2022/07/21"}, {"2022/07/21"}, {"2022/07/22"}, {"2022/07/23"}, {
        "2022/07/24"}, {"2022/07/25"}, {"2022/07/25"}, {"2022/07/25"}, {
        "2022/07/25"}, {"2022/07/25"}, {"2022/07/26"}, {"2022/07/26"}, {
        "2022/07/27"}, {"2022/07/27"}, {"2022/07/29"}, {"2022/07/29"}, {
        "2022/07/29"}, {"2022/07/30"}, {"2022/07/31"}, {"2022/07/31"}, {
        "2022/07/31"}, {"2022/08/02"}, {"2022/08/03"}, {"2022/08/04"}, {
        "2022/08/04"}, {"2022/08/04"}, {"2022/08/04"}, {"2022/08/06"}, {
        "2022/08/07"}, {"2022/08/07"}, {"2022/08/07"}, {"2022/08/08"}, {
        "2022/08/08"}, {"2022/08/08"}, {"2022/08/10"}, {"2022/08/11"}, {
        "2022/08/11"}, {"2022/08/11"}, {"2022/08/11"}, {"2022/08/11"}, {
        "2022/08/11"}, {"2022/08/11"}, {"2022/08/11"}, {"2022/08/11"}, {
        "2022/08/12"}, {"2022/08/12"}, {"2022/08/12"}, {"2022/08/14"}, {
        "2022/08/14"}, {"2022/08/14"}, {"2022/08/14"}, {"2022/08/14"}, {
        "2022/08/15"}, {"2022/08/16"}, {"2022/08/16"}, {"2022/08/16"}, {
        "2022/08/16"}, {"2022/08/18"}, {"2022/08/18"}, {"2022/08/18"}, {
        "2022/08/19"}, {"2022/08/20"}, {"2022/08/20"}, {"2022/08/20"}, {
        "2022/08/22"}, {"2022/08/22"}, {"2022/08/23"}, {"2022/08/24"}, {
        "2022/08/26"}, {"2022/08/28"}, {"2022/08/30"}, {"2022/08/30"}, {
        "2022/09/01"}, {"2022/09/01"}, {"2022/09/02"}, {"2022/09/02"}, {
        "2022/09/03"}, {"2022/09/03"}, {"2022/09/03"}, {"2022/09/03"}, {
        "2022/09/04"}, {"2022/09/07"}, {"2022/09/08"}, {"2022/09/09"}, {
        "2022/09/09"}, {"2022/09/11"}, {"2022/09/12"}, {"2022/09/13"}, {
        "2022/09/13"}, {"2022/09/14"}, {"2022/09/15"}, {"2022/09/17"}, {
        "2022/09/18"}, {"2022/09/18"}, {"2022/09/18"}, {"2022/09/18"}, {
        "2022/09/19"}, {"2022/09/19"}, {"2022/09/20"}, {"2022/09/20"}, {
        "2022/09/20"}, {"2022/09/22"}, {"2022/09/23"}, {"2022/09/24"}, {
        "2022/09/24"}, {"2022/09/24"}, {"2022/09/24"}, {"2022/09/25"}, {
        "2022/09/25"}, {"2022/09/25"}, {"2022/09/26"}, {"2022/09/26"}, {
        "2022/09/26"}, {"2022/09/27"}, {"2022/09/27"}, {"2022/09/28"}, {
        "2022/09/28"}, {"2022/09/30"}, {"2022/09/30"}, {"2023/01/02"}, {
        "2023/01/03"}, {"2023/01/03"}, {"2023/01/03"}, {"2023/01/04"}, {
        "2023/01/06"}, {"2023/01/06"}, {"2023/01/07"}, {"2023/01/08"}, {
        "2023/01/08"}, {"2023/01/11"}, {"2023/01/12"}, {"2023/01/13"}, {
        "2023/01/13"}, {"2023/01/13"}, {"2023/01/13"}, {"2023/01/14"}, {
        "2023/01/14"}, {"2023/01/15"}, {"2023/01/15"}, {"2023/01/16"}, {
        "2023/01/16"}, {"2023/01/16"}, {"2023/01/17"}, {"2023/01/18"}, {
        "2023/01/18"}, {"2023/01/18"}, {"2023/01/20"}, {"2023/01/20"}, {
        "2023/01/21"}, {"2023/01/21"}, {"2023/01/21"}, {"2023/01/25"}, {
        "2023/01/25"}, {"2023/01/27"}, {"2023/01/29"}, {"2023/01/30"}, {
        "2023/01/31"}, {"2023/02/03"}, {"2023/02/06"}, {"2023/02/07"}, {
        "2023/02/08"}, {"2023/02/08"}, {"2023/02/09"}, {"2023/02/09"}, {
        "2023/02/09"}, {"2023/02/10"}, {"2023/02/11"}, {"2023/02/11"}, {
        "2023/02/12"}, {"2023/02/13"}, {"2023/02/13"}, {"2023/02/14"}, {
        "2023/02/14"}, {"2023/02/15"}, {"2023/02/17"}, {"2023/02/17"}, {
        "2023/02/17"}, {"2023/02/19"}, {"2023/02/20"}, {"2023/02/20"}, {
        "2023/02/20"}, {"2023/02/21"}, {"2023/02/21"}, {"2023/02/21"}, {
        "2023/02/25"}, {"2023/02/25"}, {"2023/02/25"}, {"2023/02/25"}, {
        "2023/02/26"}, {"2023/02/26"}, {"2023/02/28"}, {"2023/02/28"}, {
        "2023/02/28"}, {"2023/03/01"}, {"2023/03/02"}, {"2023/03/02"}, {
        "2023/03/03"}, {"2023/03/04"}, {"2023/03/04"}, {"2023/03/04"}, {
        "2023/03/05"}, {"2023/03/07"}, {"2023/03/07"}, {"2023/03/08"}, {
        "2023/03/10"}, {"2023/03/11"}, {"2023/03/11"}, {"2023/03/12"}, {
        "2023/03/12"}, {"2023/03/14"}, {"2023/03/14"}, {"2023/03/14"}, {
        "2023/03/15"}, {"2023/03/15"}, {"2023/03/18"}, {"2023/03/19"}, {
        "2023/03/20"}, {"2023/03/20"}, {"2023/03/21"}, {"2023/03/22"}, {
        "2023/03/23"}, {"2023/03/24"}, {"2023/03/24"}, {"2023/03/24"}, {
        "2023/03/25"}, {"2023/03/26"}, {"2023/03/27"}, {"2023/03/27"}, {
        "2023/03/28"}, {"2023/03/29"}, {"2023/03/29"}, {"2023/03/29"}, {
        "2023/04/01"}, {"2023/04/01"}, {"2023/04/01"}, {"2023/04/01"}, {
        "2023/04/01"}, {"2023/04/01"}, {"2023/04/02"}, {"2023/04/04"}, {
        "2023/04/04"}, {"2023/04/05"}, {"2023/04/05"}, {"2023/04/07"}, {
        "2023/04/07"}, {"2023/04/08"}, {"2023/04/09"}, {"2023/04/09"}, {
        "2023/04/10"}, {"2023/04/12"}, {"2023/04/12"}, {"2023/04/12"}, {
        "2023/04/12"}, {"2023/04/13"}, {"2023/04/13"}, {"2023/04/14"}, {
        "2023/04/15"}, {"2023/04/15"}, {"2023/04/15"}, {"2023/04/17"}, {
        "2023/04/17"}, {"2023/04/17"}, {"2023/04/20"}, {"2023/04/21"}, {
        "2023/04/22"}, {"2023/04/22"}, {"2023/04/22"}, {"2023/04/22"}, {
        "2023/04/23"}, {"2023/04/24"}, {"2023/04/25"}, {"2023/04/25"}, {
        "2023/04/25"}, {"2023/04/26"}, {"2023/04/27"}, {"2023/04/27"}, {
        "2023/04/27"}, {"2023/04/28"}, {"2023/04/28"}, {"2023/04/29"}, {
        "2023/04/29"}, {"2023/04/30"}, {"2023/04/30"}, {"2023/04/30"}, {
        "2023/05/01"}, {"2023/05/01"}, {"2023/05/01"}, {"2023/05/01"}, {
        "2023/05/01"}, {"2023/05/01"}, {"2023/05/01"}, {"2023/05/02"}, {
        "2023/05/03"}, {"2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {
        "2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {
        "2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {
        "2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {
        "2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {
        "2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {
        "2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {
        "2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {"2023/05/05"}, {
        "2023/05/05"}, {"2023/05/05"}, {"2023/05/06"}, {"2023/05/06"}, {
        "2023/05/06"}, {"2023/05/06"}, {"2023/05/06"}, {"2023/05/07"}, {
        "2023/05/07"}, {"2023/05/08"}, {"2023/05/08"}, {"2023/05/09"}, {
        "2023/05/09"}, {"2023/05/09"}, {"2023/05/09"}, {"2023/05/09"}, {
        "2023/05/10"}, {"2023/05/10"}, {"2023/05/10"}, {"2023/05/10"}, {
        "2023/05/10"}, {"2023/05/10"}, {"2023/05/11"}, {"2023/05/11"}, {
        "2023/05/11"}, {"2023/05/11"}, {"2023/05/11"}, {"2023/05/11"}, {
        "2023/05/12"}, {"2023/05/12"}, {"2023/05/13"}, {"2023/05/14"}, {
        "2023/05/14"}, {"2023/05/14"}, {"2023/05/14"}, {"2023/05/15"}, {
        "2023/05/15"}, {"2023/05/16"}, {"2023/05/18"}, {"2023/05/19"}, {
        "2023/05/20"}, {"2023/05/21"}, {"2023/05/21"}, {"2023/05/21"}, {
        "2023/05/21"}, {"2023/05/22"}, {"2023/05/22"}, {"2023/05/22"}, {
        "2023/05/22"}, {"2023/05/22"}, {"2023/05/22"}, {"2023/05/22"}, {
        "2023/05/22"}, {"2023/05/22"}, {"2023/05/22"}, {"2023/05/22"}, {
        "2023/05/22"}, {"2023/05/22"}, {"2023/05/22"}, {"2023/05/22"}, {
        "2023/05/23"}, {"2023/05/23"}, {"2023/05/23"}, {"2023/05/23"}, {
        "2023/05/23"}, {"2023/05/23"}, {"2023/05/24"}, {"2023/05/24"}, {
        "2023/05/25"}, {"2023/05/26"}, {"2023/05/26"}, {"2023/05/26"}, {
        "2023/05/26"}, {"2023/05/27"}, {"2023/05/27"}, {"2023/05/28"}, {
        "2023/05/28"}, {"2023/05/29"}, {"2023/05/30"}, {"2023/05/30"}, {
        "2023/05/30"}, {"2023/05/30"}, {"2023/06/01"}, {"2023/06/01"}, {
        "2023/06/01"}, {"2023/06/03"}, {"2023/06/04"}, {"2023/06/04"}, {
        "2023/06/05"}, {"2023/06/06"}, {"2023/06/06"}, {"2023/06/06"}, {
        "2023/06/08"}, {"2023/06/08"}, {"2023/06/09"}, {"2023/06/09"}, {
        "2023/06/10"}, {"2023/06/10"}, {"2023/06/10"}, {"2023/06/11"}, {
        "2023/06/11"}, {"2023/06/13"}, {"2023/06/14"}, {"2023/06/15"}, {
        "2023/06/15"}, {"2023/06/16"}, {"2023/06/16"}, {"2023/06/16"}, {
        "2023/06/17"}, {"2023/06/17"}, {"2023/06/17"}, {"2023/06/17"}, {
        "2023/06/19"}, {"2023/06/19"}, {"2023/06/19"}, {"2023/06/19"}, {
        "2023/06/20"}, {"2023/06/20"}, {"2023/06/21"}, {"2023/06/22"}, {
        "2023/06/22"}, {"2023/06/22"}, {"2023/06/22"}, {"2023/06/24"}, {
        "2023/06/24"}, {"2023/06/25"}, {"2023/06/25"}, {"2023/06/28"}, {
        "2023/06/28"}, {"2023/06/28"}, {"2023/06/28"}, {"2023/06/28"}, {
        "2023/06/29"}, {"2023/06/30"}, {"2023/06/30"}, {"2023/07/01"}, {
        "2023/07/01"}, {"2023/07/02"}, {"2023/07/02"}, {"2023/07/03"}, {
        "2023/07/03"}, {"2023/07/06"}, {"2023/07/07"}, {"2023/07/08"}, {
        "2023/07/08"}, {"2023/07/10"}, {"2023/07/10"}, {"2023/07/10"}, {
        "2023/07/12"}, {"2023/07/13"}, {"2023/07/16"}, {"2023/07/16"}, {
        "2023/07/17"}, {"2023/07/17"}, {"2023/07/18"}, {"2023/07/19"}, {
        "2023/07/20"}, {"2023/07/20"}, {"2023/07/20"}, {"2023/07/22"}, {
        "2023/07/22"}, {"2023/07/22"}, {"2023/07/23"}, {"2023/07/24"}, {
        "2023/07/24"}, {"2023/07/26"}, {"2023/07/26"}, {"2023/07/26"}, {
        "2023/07/27"}, {"2023/07/27"}, {"2023/07/28"}, {"2023/07/28"}, {
        "2023/07/29"}, {"2023/07/30"}, {"2023/07/30"}, {"2023/07/31"}, {
        "2023/08/01"}, {"2023/08/05"}, {"2023/08/07"}, {"2023/08/07"}, {
        "2023/08/07"}, {"2023/08/08"}, {"2023/08/09"}, {"2023/08/09"}, {
        "2023/08/09"}, {"2023/08/11"}, {"2023/08/11"}, {"2023/08/12"}, {
        "2023/08/12"}, {"2023/08/13"}, {"2023/08/15"}, {"2023/08/16"}, {
        "2023/08/16"}, {"2023/08/16"}, {"2023/08/16"}, {"2023/08/17"}, {
        "2023/08/19"}, {"2023/08/19"}, {"2023/08/19"}, {"2023/08/19"}, {
        "2023/08/21"}, {"2023/08/21"}, {"2023/08/22"}, {"2023/08/22"}, {
        "2023/08/23"}, {"2023/08/24"}, {"2023/08/25"}, {"2023/08/26"}, {
        "2023/08/26"}, {"2023/08/27"}, {"2023/08/27"}, {"2023/08/28"}, {
        "2023/08/28"}, {"2023/08/31"}, {"2023/08/31"}, {"2023/09/02"}, {
        "2023/09/03"}, {"2023/09/04"}, {"2023/09/05"}, {"2023/09/05"}, {
        "2023/09/05"}, {"2023/09/05"}, {"2023/09/05"}, {"2023/09/07"}, {
        "2023/09/08"}, {"2023/09/08"}, {"2023/09/09"}, {"2023/09/09"}, {
        "2023/09/09"}, {"2023/09/09"}, {"2023/09/11"}, {"2023/09/11"}, {
        "2023/09/11"}, {"2023/09/12"}, {"2023/09/12"}, {"2023/09/12"}, {
        "2023/09/14"}, {"2023/09/14"}, {"2023/09/15"}, {"2023/09/15"}, {
        "2023/09/16"}, {"2023/09/17"}, {"2023/09/18"}, {"2023/09/19"}, {
        "2023/09/22"}, {"2023/09/23"}, {"2023/09/24"}, {"2023/09/25"}, {
        "2023/09/25"}, {"2023/09/26"}, {"2023/09/26"}, {"2023/09/27"}, {
        "2023/09/27"}, {"2023/09/28"}, {"2023/09/28"}, {"2023/09/29"}, {
        "2023/09/29"}, {"2023/09/29"}, {"2023/09/30"}, {"2023/09/30"}}}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`MatrixShape[987, 1], 20, 1, {All, All}]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[String], 1], 987], 1], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`MatrixShape[987, 1], 20, 1, {All, All}]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[String], 1], 987], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     1, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["2022/01/01", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/03", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/03", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/04", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/04", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/05", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 9, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/07", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 10, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/07", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 11, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/08", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 12, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/10", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 13, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 14, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 15, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 16, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/13", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 17, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/13", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 18, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/14", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 19, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2022/01/14", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 20, 1},
                 "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["987 total \:203a ", ""], 
                  Style[
                   Superscript["987 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1}, 
                   2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, All}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{118.48, {196.6644685633724, 200.7870514366274}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{118.48, {196.6644685633724, 200.7870514366274}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940951606710949*^9, 3.9418658645708523`*^9, 
  3.94187062737146*^9, 3.9418714587887993`*^9, 3.9419705495096664`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"7c549c7d-11f7-1e46-9d04-c717e11a86cc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analyze Magnitude and Its Frequency", "Section",
 CellChangeTimes->{{3.940951655642889*^9, 
  3.9409516684008484`*^9}},ExpressionUUID->"ca63e734-d114-1f48-9386-\
91b1bc37ce53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cumMagnitudo", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Flatten", "@", "magnitudo"}], "]"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"ebf1bc4a-aa61-664c-a751-7cc755650fd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", "cumMagnitudo"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"8d189ffd-6ef8-d24d-a378-70ed6d8e998e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.4`", ",", "2.`", ",", "2.1`", ",", "2.2`", ",", "2.3`", ",", "2.4`", ",",
    "2.5`", ",", "2.6`", ",", "2.7`", ",", "2.8`", ",", "2.9`", ",", "3.`", 
   ",", "3.1`", ",", "3.2`", ",", "3.3`", ",", "3.4`", ",", "3.5`", ",", 
   "3.6`", ",", "3.7`", ",", "3.8`", ",", "3.9`", ",", "4.`", ",", "4.1`", 
   ",", "4.2`", ",", "4.3`", ",", "4.4`", ",", "4.5`", ",", "4.6`", ",", 
   "4.7`", ",", "4.8`", ",", "4.9`", ",", "5.`", ",", "5.1`", ",", "5.2`", 
   ",", "5.3`", ",", "5.4`", ",", "5.5`", ",", "5.6`", ",", "5.7`", ",", 
   "5.8`", ",", "5.9`", ",", "6.`", ",", "6.1`", ",", "6.2`", ",", "6.3`", 
   ",", "6.4`", ",", "6.5`", ",", "6.6`", ",", "7.4`"}], "}"}]], "Output",
 CellChangeTimes->{3.9409516877355766`*^9, 3.941865864675043*^9, 
  3.941870627560396*^9, 3.9418714589878845`*^9, 3.9419705496195393`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"47607a32-9f09-ee44-b666-b510c69cf11c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"count", "=", 
  RowBox[{"Counts", "[", 
   RowBox[{"Normal", "@", 
    RowBox[{"Flatten", "@", "magnitudo"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.940951718447977*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"2cd23b1d-b204-1247-893f-021252b3868a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"4.`", "\[Rule]", "63"}], ",", 
   RowBox[{"3.7`", "\[Rule]", "38"}], ",", 
   RowBox[{"3.8`", "\[Rule]", "54"}], ",", 
   RowBox[{"3.6`", "\[Rule]", "51"}], ",", 
   RowBox[{"6.3`", "\[Rule]", "2"}], ",", 
   RowBox[{"3.5`", "\[Rule]", "42"}], ",", 
   RowBox[{"4.2`", "\[Rule]", "52"}], ",", 
   RowBox[{"4.3`", "\[Rule]", "58"}], ",", 
   RowBox[{"3.9`", "\[Rule]", "49"}], ",", 
   RowBox[{"4.6`", "\[Rule]", "34"}], ",", 
   RowBox[{"4.4`", "\[Rule]", "32"}], ",", 
   RowBox[{"2.8`", "\[Rule]", "11"}], ",", 
   RowBox[{"3.3`", "\[Rule]", "41"}], ",", 
   RowBox[{"4.1`", "\[Rule]", "63"}], ",", 
   RowBox[{"3.4`", "\[Rule]", "42"}], ",", 
   RowBox[{"4.7`", "\[Rule]", "28"}], ",", 
   RowBox[{"4.5`", "\[Rule]", "23"}], ",", 
   RowBox[{"6.6`", "\[Rule]", "3"}], ",", 
   RowBox[{"5.4`", "\[Rule]", "11"}], ",", 
   RowBox[{"5.6`", "\[Rule]", "9"}], ",", 
   RowBox[{"3.2`", "\[Rule]", "21"}], ",", 
   RowBox[{"5.8`", "\[Rule]", "5"}], ",", 
   RowBox[{"5.`", "\[Rule]", "21"}], ",", 
   RowBox[{"5.3`", "\[Rule]", "13"}], ",", 
   RowBox[{"3.1`", "\[Rule]", "24"}], ",", 
   RowBox[{"3.`", "\[Rule]", "27"}], ",", 
   RowBox[{"4.9`", "\[Rule]", "18"}], ",", 
   RowBox[{"4.8`", "\[Rule]", "15"}], ",", 
   RowBox[{"2.5`", "\[Rule]", "7"}], ",", 
   RowBox[{"5.1`", "\[Rule]", "14"}], ",", 
   RowBox[{"2.2`", "\[Rule]", "3"}], ",", 
   RowBox[{"7.4`", "\[Rule]", "1"}], ",", 
   RowBox[{"6.1`", "\[Rule]", "1"}], ",", 
   RowBox[{"5.9`", "\[Rule]", "9"}], ",", 
   RowBox[{"5.5`", "\[Rule]", "8"}], ",", 
   RowBox[{"5.2`", "\[Rule]", "12"}], ",", 
   RowBox[{"2.6`", "\[Rule]", "9"}], ",", 
   RowBox[{"2.3`", "\[Rule]", "5"}], ",", 
   RowBox[{"1.4`", "\[Rule]", "1"}], ",", 
   RowBox[{"2.9`", "\[Rule]", "28"}], ",", 
   RowBox[{"2.1`", "\[Rule]", "2"}], ",", 
   RowBox[{"5.7`", "\[Rule]", "5"}], ",", 
   RowBox[{"2.7`", "\[Rule]", "12"}], ",", 
   RowBox[{"6.`", "\[Rule]", "5"}], ",", 
   RowBox[{"2.4`", "\[Rule]", "6"}], ",", 
   RowBox[{"6.2`", "\[Rule]", "5"}], ",", 
   RowBox[{"6.4`", "\[Rule]", "1"}], ",", 
   RowBox[{"6.5`", "\[Rule]", "2"}], ",", 
   RowBox[{"2.`", "\[Rule]", "1"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.940951699343853*^9, 3.94095171910375*^9}, 
   3.9418658646906185`*^9, 3.9418706275767784`*^9, 3.9418714589908657`*^9, 
   3.9419705496378403`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"0d291f5e-e35b-8a45-8f8d-14290c7f5c85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"count", "=", 
  RowBox[{"Flatten", "/@", 
   RowBox[{"List", "@@@", 
    RowBox[{"Normal", "@", "count"}]}]}]}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"77445a62-9e80-c744-95b3-a7de32fdb24f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4.`", ",", "63"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.7`", ",", "38"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.8`", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.6`", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.2`", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "58"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.9`", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8`", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.3`", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.1`", ",", "63"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4`", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.7`", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.5`", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6`", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.2`", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.3`", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.1`", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2`", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.9`", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6`", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.3`", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.9`", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.1`", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.7`", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.4`", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.2`", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9409517338648567`*^9, 3.9418658647047215`*^9, 
  3.941870627600025*^9, 3.9418714590221825`*^9, 3.941970549655075*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"fd0f31fc-6f8b-2848-afd0-f2cf048b88e3"]
}, Open  ]],

Cell[TextData[StyleBox["Find the Distribution",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.9409517562760773`*^9, 
  3.9409517591415176`*^9}},ExpressionUUID->"21726e84-5598-6045-9183-\
cdd550e06798"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xValues", "=", 
  RowBox[{"Flatten", "@", 
   RowBox[{"count", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"a8868159-aa44-0648-805f-d41f7ff66a2a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.`", ",", "3.7`", ",", "3.8`", ",", "3.6`", ",", "6.3`", ",", "3.5`", ",",
    "4.2`", ",", "4.3`", ",", "3.9`", ",", "4.6`", ",", "4.4`", ",", "2.8`", 
   ",", "3.3`", ",", "4.1`", ",", "3.4`", ",", "4.7`", ",", "4.5`", ",", 
   "6.6`", ",", "5.4`", ",", "5.6`", ",", "3.2`", ",", "5.8`", ",", "5.`", 
   ",", "5.3`", ",", "3.1`", ",", "3.`", ",", "4.9`", ",", "4.8`", ",", 
   "2.5`", ",", "5.1`", ",", "2.2`", ",", "7.4`", ",", "6.1`", ",", "5.9`", 
   ",", "5.5`", ",", "5.2`", ",", "2.6`", ",", "2.3`", ",", "1.4`", ",", 
   "2.9`", ",", "2.1`", ",", "5.7`", ",", "2.7`", ",", "6.`", ",", "2.4`", 
   ",", "6.2`", ",", "6.4`", ",", "6.5`", ",", "2.`"}], "}"}]], "Output",
 CellChangeTimes->{3.9409517710299892`*^9, 3.941865864718128*^9, 
  3.941870627609886*^9, 3.9418714590377617`*^9, 3.9419705496731777`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"79cb23d8-cf99-364c-8093-3b15df329738"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindDistribution", "[", "xValues", "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"e51154dc-6794-6e43-9f3c-638bf0f28dd0"],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"4.307843137254903`", ",", "1.5499327167249783`"}], "]"}]], "Output",
 CellChangeTimes->{3.940951778893614*^9, 3.941865875482197*^9, 
  3.9418706290933743`*^9, 3.941871460511364*^9, 3.9419705538570576`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"1a8d85e4-88b7-d445-83e8-a006b2cd1d2a"]
}, Open  ]],

Cell["\<\
The normal distribution implies that most earthquakes occur near the mean \
magnitude, with fewer small or large events.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{3.940951917976839*^9},
 Background->RGBColor[
  1, 0.9, 1],ExpressionUUID->"8f80acbf-f215-4243-811f-49a7394fb4cf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fittedDistX", "=", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"xValues", ",", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"4.30784", ",", "1.54993"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"DistributionFitTest", "[", 
  RowBox[{"xValues", ",", "fittedDistX"}], "]"}]}], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"bbfa1d62-982f-d348-801e-9b533068c6e7"],

Cell[BoxData["0.9615924396035833`"], "Output",
 CellChangeTimes->{3.9409517875777225`*^9, 3.9418658759024487`*^9, 
  3.9418706294968014`*^9, 3.941871460927931*^9, 3.941970554334505*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"cf5c1290-5e54-7a4f-92a7-0e8c155f63c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yValues", "=", 
  RowBox[{"Flatten", "@", 
   RowBox[{"count", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"f52a6958-2873-1b45-87b8-4b9d1a1ac042"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "63", ",", "38", ",", "54", ",", "51", ",", "2", ",", "42", ",", "52", ",", 
   "58", ",", "49", ",", "34", ",", "32", ",", "11", ",", "41", ",", "63", 
   ",", "42", ",", "28", ",", "23", ",", "3", ",", "11", ",", "9", ",", "21", 
   ",", "5", ",", "21", ",", "13", ",", "24", ",", "27", ",", "18", ",", "15",
    ",", "7", ",", "14", ",", "3", ",", "1", ",", "1", ",", "9", ",", "8", 
   ",", "12", ",", "9", ",", "5", ",", "1", ",", "28", ",", "2", ",", "5", 
   ",", "12", ",", "5", ",", "6", ",", "5", ",", "1", ",", "2", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9409517947676525`*^9, 3.94186587591551*^9, 
  3.941870629509081*^9, 3.941871460927931*^9, 3.941970554337576*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"4fc36beb-0c0a-b24d-8c26-53a6f8c310c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindDistribution", "[", "yValues", "]"}]], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"1f74827e-06e4-0d45-9042-5ed4a7d7ad5a"],

Cell[BoxData[
 TemplateBox[{
  "FindDistribution", "conenf", 
   "\"The data will be treated as continuous. Use the option \
TargetFunctions->Discrete otherwise.\"", 2, 15, 1, 24497405206345836536, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.94095180346179*^9, 3.9418658759337273`*^9, 
  3.9418706295281982`*^9, 3.941871460944628*^9, 3.941970554360857*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"fa7d2583-62e5-5c49-ba4e-91fa43589726"],

Cell[BoxData[
 RowBox[{"ExponentialDistribution", "[", "0.048419963389802034`", 
  "]"}]], "Output",
 CellChangeTimes->{3.9409518039886093`*^9, 3.9418658765217953`*^9, 
  3.941870629984785*^9, 3.941871461537981*^9, 3.941970554843956*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"e7a558af-6572-1c4c-87c7-8c5f6d4969d5"]
}, Open  ]],

Cell["\<\
The exponential distribution suggests that earthquake frequencies decrease \
rapidly as they increase in size.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.940951878783333*^9, 3.9409518885669594`*^9}},
 Background->RGBColor[
  1, 0.9, 1],ExpressionUUID->"ae19c79b-0f73-644f-9b80-12c576fbc1fa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fittedDistY", "=", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"yValues", ",", 
     RowBox[{"ExponentialDistribution", "[", "0.04842", "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"DistributionFitTest", "[", 
  RowBox[{"yValues", ",", "fittedDistY"}], "]"}]}], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"e6efb48f-f4d1-284d-a92f-a56dc54d4b3a"],

Cell[BoxData["0.6822692652086905`"], "Output",
 CellChangeTimes->{3.9409518122731667`*^9, 3.941865876591894*^9, 
  3.9418706299997044`*^9, 3.941871461723551*^9, 3.941970554858921*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"4c906da1-8891-8140-872e-22983f04cc35"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use Cramer-Lundberg Theory", "Section",
 CellChangeTimes->{{3.9409519793809185`*^9, 
  3.940951985328333*^9}},ExpressionUUID->"3a4dbdf4-6db5-0246-a7b5-\
b1022f93b6bd"],

Cell[TextData[{
 "R(t) = u + ct - ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], 
     RowBox[{"N", "(", "t", ")"}]], 
    SubscriptBox["S", "i"]}], TraditionalForm]],ExpressionUUID->
  "139e0e74-96db-8a4a-b316-2fcacbeffc17"]
}], "Text",
 CellChangeTimes->{{3.9409520108965893`*^9, 
  3.940952061328783*^9}},ExpressionUUID->"8baf8fec-7b75-a244-98ee-\
1dd024752fab"],

Cell["Initial Reserve (u): The starting capital of the insurer", "Item",
 CellChangeTimes->{{3.940952080377388*^9, 3.9409520923037624`*^9}, {
  3.940952137458494*^9, 
  3.9409521437327976`*^9}},ExpressionUUID->"9543234c-d6cc-cc46-9fd2-\
0cb5b29a5dd2"],

Cell["Premium Rate (c): amount collected per unit time", "Item",
 CellChangeTimes->{{3.940952080377388*^9, 3.940952098023897*^9}, {
  3.94095214650218*^9, 
  3.940952154930683*^9}},ExpressionUUID->"901d141b-83ea-4e49-9ebe-\
42f1f14b98d5"],

Cell["\<\
Number of Claims (N(t)): Modeled using a Poisson process with rate \
\|01d706(t), influenced by x.\
\>", "Item",
 CellChangeTimes->{{3.940952080377388*^9, 
  3.9409521588539753`*^9}},ExpressionUUID->"ef863508-1d29-da48-9506-\
cde2ea49ce41"],

Cell[TextData[{
 "Claim Sizes (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c32f5f1f-4854-644f-9fa7-781d56111704"],
 "): Depends on the magnitude x."
}], "Item",
 CellChangeTimes->{{3.940952080377388*^9, 3.9409521808070717`*^9}, {
  3.9409526683419743`*^9, 
  3.9409526694367733`*^9}},ExpressionUUID->"a1a4bc13-2c1d-1946-84f7-\
bf812c3d035e"],

Cell[TextData[StyleBox["Model the Number of Claims N(t)",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.9409521563140926`*^9, 3.940952156929722*^9}, {
  3.9409521926443977`*^9, 
  3.940952204984869*^9}},ExpressionUUID->"5ca4b3de-b5b2-cf44-9bfe-\
57e5852a0998"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"poissonRate", "=", 
    RowBox[{"1", "/", "0.04842"}]}], ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"poissonProcess", "=", 
   RowBox[{"PoissonProcess", "[", "poissonRate", "]"}]}], 
  ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.9409522122456913`*^9, 3.940952217611244*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"4692aca4-d38f-4e4d-a6ab-dc9fba410301"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"numEarthquakes", "=", 
    RowBox[{"RandomFunction", "[", 
     RowBox[{"poissonProcess", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\n"}]], "Input",
 CellChangeTimes->{{3.940952560959629*^9, 3.9409525648398037`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"13b654a7-70dc-2649-bd88-b6010764cf4c"],

Cell[TextData[{
 StyleBox["Model the Claim Sizes (",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "i"], TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Bold",ExpressionUUID->"c5cec508-2fa5-cf46-8133-550c5f062a25"],
 StyleBox[")",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.9409525707022095`*^9, 3.9409525707031784`*^9}, {
  3.9409526414818172`*^9, 
  3.940952660469412*^9}},ExpressionUUID->"8368269f-aeba-554b-b726-\
763b4f7b50f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"magnitudeDist", "=", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"4.30784", ",", "1.54993"}], "]"}]}], ";"}], "\n"}]], "Input",
 CellChangeTimes->{{3.940952679721607*^9, 3.9409526797236404`*^9}, 
   3.940952945801491*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"90a929b5-d9cb-2644-97d6-fe439c0551e5"],

Cell[TextData[{
 "Claim sizes (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "i"], TraditionalForm]],
  FontWeight->"Plain",ExpressionUUID->"c174ae6d-ca24-c34b-a88f-df5872363ab0"],
 ")",
 " depends on magnitude (x). The larger the magnitude, the larger the claim. \
So, the possible model is:\nS = a \[Cross] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{" ", 
     RowBox[{"b", " ", "\[Cross]", " ", "x"}]}]], TraditionalForm]],
  ExpressionUUID->"e2d5ba31-5530-4447-8db6-3f1d06497393"]
}], "Text",
 CellChangeTimes->{{3.940952952993868*^9, 3.9409530057284164`*^9}, {
  3.940953093315094*^9, 
  3.9409531676296234`*^9}},ExpressionUUID->"7e30c276-857b-204a-a151-\
f6d802b08665"],

Cell[BoxData[
 RowBox[{
  RowBox[{"claimSizes", "=", 
   RowBox[{"claimSizeFunction", "/@", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{"magnitudeDist", ",", "100"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9409533042174263`*^9, 3.940953307241062*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"61cf144e-6c93-2244-931b-651c7b46d220"],

Cell["\<\
Because there is no real data about the damage that each magnitude of \
earthquake produce, we suppose: \
\>", "Text",
 CellChangeTimes->{{3.9409704490327415`*^9, 
  3.9409705172449055`*^9}},ExpressionUUID->"d2405dd6-9e50-744a-a837-\
efeb6e96a92b"],

Cell["\<\
a = 0.01 that represents minimal damage from very small earthquake\
\>", "Item",
 CellChangeTimes->{{3.9409705258983154`*^9, 
  3.9409705271410885`*^9}},ExpressionUUID->"f174ead7-a9e9-d949-8da4-\
086636066b28"],

Cell[CellGroupData[{

Cell["\<\
b = 0.5 makes the function grow exponentially but not too aggressively\
\>", "Item",
 CellChangeTimes->{{3.9409705258983154`*^9, 
  3.9409705598025875`*^9}},ExpressionUUID->"361a219f-c2e9-bf40-ba6a-\
025f23dbc6db"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"claimSizeFunction", "[", 
    RowBox[{"magnitude_", ",", "propertyValue_"}], "]"}], ":=", 
   RowBox[{"propertyValue", "*", 
    RowBox[{"(", 
     RowBox[{"0.01", "*", 
      RowBox[{"Exp", "^", 
       RowBox[{"(", 
        RowBox[{"0.5", "*", "magnitude"}], ")"}]}]}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.940971620025383*^9, 3.9409716219807644`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"a85de0cc-45d3-4e40-8b89-dddbf2bab9e3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expected Claim Size", "Section",
 CellChangeTimes->{{3.9409533203140297`*^9, 3.9409533227798347`*^9}, {
  3.940953450667778*^9, 
  3.9409534534185543`*^9}},ExpressionUUID->"7b7c0b53-4d0a-d34c-a842-\
6be8b77cd8e6"],

Cell[TextData[{
 "E[S] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{
      RowBox[{"S", "(", "x", ")"}], "\[Cross]", 
      RowBox[{"f", "(", "x", ")"}]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f20417b8-bd8e-2f4c-b904-46a3ef57b8e5"]
}], "Text",
 CellChangeTimes->{{3.940953344922941*^9, 
  3.9409534256826077`*^9}},ExpressionUUID->"fbd11f24-ec83-794b-abd1-\
d37f1c3c130e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"expectedClaimSize", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"claimSizeFunction", "[", "x", "]"}], " ", 
      RowBox[{"PDF", "[", 
       RowBox[{"magnitudeDist", ",", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9409534326123257`*^9, 3.9409534340896873`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"61ed1413-e93f-854d-8ec5-5122b888bc70"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"0.2573937406214685`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.208135344162256`\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.30784`\\\"}], \\\"+\\\", \\\"x\\\"}], \
\\\")\\\"}], \\\"2\\\"]}]], \\\" \\\", RowBox[{\\\"claimSizeFunction\\\", \
\\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 24, 2, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409534349983215`*^9, 3.941865876653776*^9, 
  3.941870630113556*^9, 3.9418714619591064`*^9, 3.941970555239893*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"4698aa72-d96b-6249-a6b9-7307abb7340c"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"0.2573937406214685`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.208135344162256`\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.30784`\\\"}], \\\"+\\\", \\\"x\\\"}], \
\\\")\\\"}], \\\"2\\\"]}]], \\\" \\\", RowBox[{\\\"claimSizeFunction\\\", \
\\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 24, 3, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409534349983215`*^9, 3.941865876653776*^9, 
  3.941870630113556*^9, 3.9418714619591064`*^9, 3.9419705552557144`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"b5cf8e62-d399-8249-a566-6b3eedf3909c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"expectedClaimSize", "[", "propertyValue_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "magnitudeRange", ",", "probabilities", ",", "claims", ",", "total"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"magnitudeRange", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"1.4", ",", "7.4", ",", "0.1"}], "]"}]}], ";", 
      RowBox[{"probabilities", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{"magnitudeDist", ",", "#"}], "]"}], "&"}], "/@", 
        "magnitudeRange"}]}], ";", 
      RowBox[{"claims", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"claimSizeFunction", "[", 
          RowBox[{"#", ",", "propertyValue"}], "]"}], "&"}], "/@", 
        "magnitudeRange"}]}], ";", 
      RowBox[{"total", "=", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"claims", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "*", 
           RowBox[{"probabilities", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "magnitudeRange", "]"}]}], "}"}]}], "]"}], 
        "*", "0.1"}]}], ";", "total"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.940970587972599*^9, 3.9409705879735985`*^9}, {
  3.940970641033001*^9, 3.94097064704521*^9}, {3.9409709918053074`*^9, 
  3.9409709951472607`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"e4de901e-8db9-8f45-afca-d82ad894c7e3"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"0.2573937406214685`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.208135344162256`\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.30784`\\\"}], \\\"+\\\", \\\"x\\\"}], \
\\\")\\\"}], \\\"2\\\"]}]], \\\" \\\", RowBox[{\\\"claimSizeFunction\\\", \
\\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 25, 4, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409705899625607`*^9, 3.940970647781164*^9, 
  3.940971027587204*^9, 3.941865876702839*^9, 3.9418706302173767`*^9, 
  3.9418714621317196`*^9, 3.941970555288967*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"6c65eb60-cfd0-b84b-98ee-2a5bfd1ab2c8"],

Cell[BoxData[
 TemplateBox[{
  "SetDelayed", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"NIntegrate\\\"}]\\) in \
\\!\\(\\*RowBox[{RowBox[{\\\"NIntegrate\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"claimSizeFunction\\\", \\\"[\\\", \\\"x\\\", \
\\\"]\\\"}], \\\" \\\", RowBox[{\\\"PDF\\\", \\\"[\\\", \
RowBox[{\\\"magnitudeDist\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"\
\[Infinity]\\\"}], \\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\"[\\\", \\\"propertyValue_\\\", \\\"]\\\"}]\\) is \
Protected.\"", 2, 25, 5, 24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409705899625607`*^9, 3.940970647781164*^9, 
  3.940971027587204*^9, 3.941865876702839*^9, 3.9418706302173767`*^9, 
  3.9418714621317196`*^9, 3.941970555316778*^9},
 CellLabel->
  "During evaluation of \
In[25]:=",ExpressionUUID->"06cd8227-9a78-1548-acb6-c9eea5167603"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expected Loss", "Section",
 CellChangeTimes->{{3.940953460488388*^9, 
  3.940953463127466*^9}},ExpressionUUID->"de8badd0-f7dd-254f-a868-\
b7fd6e592a98"],

Cell["E[Loss] = E[S] \[Times] \[Lambda] \[Times] t", "Text",
 CellChangeTimes->{{3.9409547849117756`*^9, 3.940954811120468*^9}, {
  3.940982898564039*^9, 
  3.94098290256649*^9}},ExpressionUUID->"363bbe53-bf40-4f46-96f8-\
56b59cfb07b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"expectedTotalLoss", "=", 
   RowBox[{"expectedClaimSize", "*", "poissonRate", "*", "t"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9409548212492447`*^9, 3.940954821250244*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"313dc45a-4e3f-0b49-909a-cdabd60a5e46"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"0.2573937406214685`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.208135344162256`\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.30784`\\\"}], \\\"+\\\", \\\"x\\\"}], \
\\\")\\\"}], \\\"2\\\"]}]], \\\" \\\", RowBox[{\\\"claimSizeFunction\\\", \
\\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 26, 6, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409548230995865`*^9, 3.9418658767771664`*^9, 
  3.94187063027977*^9, 3.941871462164137*^9, 3.9419705553593197`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"5ae798e7-2a94-9040-b8c0-9435017beaee"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"0.2573937406214685`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.208135344162256`\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.30784`\\\"}], \\\"+\\\", \\\"x\\\"}], \
\\\")\\\"}], \\\"2\\\"]}]], \\\" \\\", RowBox[{\\\"claimSizeFunction\\\", \
\\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 26, 7, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409548230995865`*^9, 3.9418658767771664`*^9, 
  3.94187063027977*^9, 3.941871462164137*^9, 3.9419705553642025`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"86d1f1a7-7a58-4f4d-bdff-ff8c34ba8ae2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate Premium", "Section",
 CellChangeTimes->{{3.9409548401530743`*^9, 
  3.9409548446060867`*^9}},ExpressionUUID->"a0a6e63a-9353-aa45-9619-\
fb8219986485"],

Cell["Premium = (1 + safetyLoading) \[Times] E[Loss]", "Text",
 CellChangeTimes->{{3.940954871178997*^9, 3.940954921162489*^9}, {
  3.9409832516336937`*^9, 
  3.940983253065935*^9}},ExpressionUUID->"4f33ebfb-f876-4346-9e9a-\
c0f977c89909"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"safetyLoading", "=", "0.2"}], ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"premiumPrice", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "safetyLoading"}], ")"}], "*", "expectedTotalLoss"}]}],
   ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.940954905332964*^9, 3.94095491048094*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"e9e55764-d027-474c-aaab-8c34dce4bc1b"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"0.2573937406214685`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.208135344162256`\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.30784`\\\"}], \\\"+\\\", \\\"x\\\"}], \
\\\")\\\"}], \\\"2\\\"]}]], \\\" \\\", RowBox[{\\\"claimSizeFunction\\\", \
\\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 28, 8, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409549325189705`*^9, 3.9418658768107166`*^9, 
  3.941870630318447*^9, 3.9418714622103577`*^9, 3.941970555403351*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"4d7dea03-055f-364d-b31d-002aba9b4ba5"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"0.2573937406214685`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.208135344162256`\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.30784`\\\"}], \\\"+\\\", \\\"x\\\"}], \
\\\")\\\"}], \\\"2\\\"]}]], \\\" \\\", RowBox[{\\\"claimSizeFunction\\\", \
\\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 28, 9, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409549325189705`*^9, 3.9418658768107166`*^9, 
  3.941870630318447*^9, 3.9418714622103577`*^9, 3.9419705554093018`*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"e37c3b78-d3c3-7d49-a9f4-d97a85918f7d"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"0.2573937406214685`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.208135344162256`\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.30784`\\\"}], \\\"+\\\", \\\"x\\\"}], \
\\\")\\\"}], \\\"2\\\"]}]], \\\" \\\", RowBox[{\\\"claimSizeFunction\\\", \
\\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 28, 10, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409549325189705`*^9, 3.9418658768107166`*^9, 
  3.941870630318447*^9, 3.9418714622103577`*^9, 3.9419705554124775`*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"ac8e9736-a4db-7941-b0f9-db39c073dfa8"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"inumr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 28, 11, 24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409549325189705`*^9, 3.9418658768107166`*^9, 
  3.941870630318447*^9, 3.9418714622103577`*^9, 3.941970555419201*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"627e0a4a-ed81-bb46-8fe0-58702f34a206"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"calculatePremium", "[", 
    RowBox[{
    "propertyValue_", ",", "years_", ",", "safetyLoading_", ",", 
     "deductible_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "expectedLoss", "}"}], ",", 
     RowBox[{
      RowBox[{"expectedLoss", "=", 
       RowBox[{
        RowBox[{"expectedClaimSize", "[", "propertyValue", "]"}], "*", 
        "poissonRate", "*", "years"}]}], ";", 
      RowBox[{"expectedLoss", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "safetyLoading"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "deductible"}], ")"}]}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.940970700136389*^9, 3.940970703550974*^9}, 
   3.9409710783346977`*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"8c07ba9a-e400-c942-bb5b-4b722712a0ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stimulate Reserve Process (R(t))", "Section",
 CellChangeTimes->{{3.940954941458124*^9, 
  3.940954958328575*^9}},ExpressionUUID->"25482623-8821-0046-b3cf-\
105f8334befa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reserve", "[", "t_", "]"}], ":=", 
   RowBox[{"initialReserve", "+", 
    RowBox[{"premiumRate", "*", "t"}], "-", 
    RowBox[{"Total", "[", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"ExponentialDistribution", "[", "expectedClaimSize", "]"}], 
       ",", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"poissonProcess", "[", "t", "]"}], "]"}]}], "]"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9409549729897175`*^9, 3.9409549798988247`*^9}, 
   3.940970721721054*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"0dfcf72a-6792-4f40-9d66-c2dc98bf2f6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assess Ruin Probability", "Section",
 CellChangeTimes->{{3.940954987270611*^9, 
  3.9409549939471455`*^9}},ExpressionUUID->"8dba97fd-a3c2-7e42-bdc3-\
3195aaad16d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ruinProbability", "=", 
   RowBox[{"Probability", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"reserve", "[", "t", "]"}], "<", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
     RowBox[{"Method", "->", "\"\<MonteCarlo\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.940954997714218*^9, 3.940954998707678*^9}, 
   3.9409834458428707`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"4c492eba-10b0-2b44-8569-2ef85f4a989e"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"0.2573937406214685`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.208135344162256`\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.30784`\\\"}], \\\"+\\\", \\\"x\\\"}], \
\\\")\\\"}], \\\"2\\\"]}]], \\\" \\\", RowBox[{\\\"claimSizeFunction\\\", \
\\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 31, 12, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409707253512287`*^9, 3.941865876903017*^9, 
  3.9418706303958664`*^9, 3.9418714622716064`*^9, 3.9419705554864674`*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"ca469f7f-bebc-564d-acf8-036e521f5c2a"],

Cell[BoxData[
 TemplateBox[{
  "RandomVariate", "posprm", 
   "\"Parameter \\!\\(\\*RowBox[{\\\"20.652622883106154`\\\", \\\" \\\", \
\\\"t\\\"}]\\) at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"PoissonDistribution\\\", \\\"[\\\", \
RowBox[{\\\"20.652622883106154`\\\", \\\" \\\", \\\"t\\\"}], \\\"]\\\"}]\\) \
is expected to be positive.\"", 2, 31, 13, 24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409707253512287`*^9, 3.941865876903017*^9, 
  3.9418706303958664`*^9, 3.9418714622716064`*^9, 3.941970555524439*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"4d890d31-37a5-384f-b9bf-aa515d7a2733"],

Cell[BoxData[
 TemplateBox[{
  "RandomVariate", "array", 
   "\"The array dimensions \\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{\\\"PoissonDistribution\\\", \\\"[\\\", \
RowBox[{\\\"20.652622883106154`\\\", \\\" \\\", \\\"t\\\"}], \\\"]\\\"}], \
\\\"]\\\"}]\\) given in position 2 of \\!\\(\\*RowBox[{\\\"RandomVariate\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"ExponentialDistribution\\\", \\\"[\\\", \
RowBox[{\\\"NIntegrate\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"claimSizeFunction\\\", \\\"[\\\", \\\"x\\\", \
\\\"]\\\"}], \\\" \\\", RowBox[{\\\"PDF\\\", \\\"[\\\", \
RowBox[{\\\"magnitudeDist\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"\
\[Infinity]\\\"}], \\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"RandomVariate\\\", \
\\\"[\\\", RowBox[{\\\"PoissonDistribution\\\", \\\"[\\\", \
RowBox[{\\\"20.652622883106154`\\\", \\\" \\\", \\\"t\\\"}], \\\"]\\\"}], \
\\\"]\\\"}]}], \\\"]\\\"}]\\) should be a list of non-negative machine-sized \
integers giving the dimensions for the result.\"", 2, 31, 14, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409707253512287`*^9, 3.941865876903017*^9, 
  3.9418706303958664`*^9, 3.9418714622716064`*^9, 3.941970555551502*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"5ad73961-6b38-8c47-a1d1-5be9d0e378e8"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"0.2573937406214685`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.208135344162256`\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.30784`\\\"}], \\\"+\\\", \\\"x\\\"}], \
\\\")\\\"}], \\\"2\\\"]}]], \\\" \\\", RowBox[{\\\"claimSizeFunction\\\", \
\\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 31, 15, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409707253512287`*^9, 3.941865876903017*^9, 
  3.9418706303958664`*^9, 3.9418714622716064`*^9, 3.941970555551502*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"3f7f3a5e-7424-914e-b1a0-447655db6f65"],

Cell[BoxData[
 TemplateBox[{
  "RandomVariate", "array", 
   "\"The array dimensions \\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{\\\"PoissonDistribution\\\", \\\"[\\\", \
RowBox[{\\\"20.652622883106154`\\\", \\\" \\\", \\\"t\\\"}], \\\"]\\\"}], \
\\\"]\\\"}]\\) given in position 2 of \\!\\(\\*RowBox[{\\\"RandomVariate\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"ExponentialDistribution\\\", \\\"[\\\", \
RowBox[{\\\"NIntegrate\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"claimSizeFunction\\\", \\\"[\\\", \\\"x\\\", \
\\\"]\\\"}], \\\" \\\", RowBox[{\\\"PDF\\\", \\\"[\\\", \
RowBox[{\\\"magnitudeDist\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"\
\[Infinity]\\\"}], \\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"RandomVariate\\\", \
\\\"[\\\", RowBox[{\\\"PoissonDistribution\\\", \\\"[\\\", \
RowBox[{\\\"20.652622883106154`\\\", \\\" \\\", \\\"t\\\"}], \\\"]\\\"}], \
\\\"]\\\"}]}], \\\"]\\\"}]\\) should be a list of non-negative machine-sized \
integers giving the dimensions for the result.\"", 2, 31, 16, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409707253512287`*^9, 3.941865876903017*^9, 
  3.9418706303958664`*^9, 3.9418714622716064`*^9, 3.9419705555721455`*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"a9d0039e-1818-cd43-91bd-c8ea76ff7a49"],

Cell[BoxData[
 TemplateBox[{
  "Probability", "input", "\"Invalid input.\"", 2, 31, 17, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409707253512287`*^9, 3.941865876903017*^9, 
  3.9418706303958664`*^9, 3.9418714622716064`*^9, 3.941970555603052*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"43c7b93f-f603-2f49-ac52-ffc5ad9d0551"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"0.2573937406214685`\\\", \\\" \\\", \
SuperscriptBox[\\\"\[ExponentialE]\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"0.208135344162256`\\\"}], \\\" \\\", SuperscriptBox[RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4.30784`\\\"}], \\\"+\\\", \\\"x\\\"}], \
\\\")\\\"}], \\\"2\\\"]}]], \\\" \\\", RowBox[{\\\"claimSizeFunction\\\", \
\\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]\\) has evaluated to non-numerical values \
for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 31, 18, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409707253512287`*^9, 3.941865876903017*^9, 
  3.9418706303958664`*^9, 3.9418714622716064`*^9, 3.941970555610382*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"68547dd7-41dc-4c46-b33b-804aad2297e6"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"inumr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 31, 19, 24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409707253512287`*^9, 3.941865876903017*^9, 
  3.9418706303958664`*^9, 3.9418714622716064`*^9, 3.941970555618532*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"4cc776c0-8e18-d64d-8006-cf4a27f59c12"],

Cell[BoxData[
 TemplateBox[{
  "RandomVariate", "array", 
   "\"The array dimensions \\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{\\\"PoissonDistribution\\\", \\\"[\\\", \
RowBox[{\\\"20.652622883106154`\\\", \\\" \\\", \\\"t\\\"}], \\\"]\\\"}], \
\\\"]\\\"}]\\) given in position 2 of \\!\\(\\*RowBox[{\\\"RandomVariate\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"ExponentialDistribution\\\", \\\"[\\\", \
RowBox[{\\\"NIntegrate\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"claimSizeFunction\\\", \\\"[\\\", \\\"x\\\", \
\\\"]\\\"}], \\\" \\\", RowBox[{\\\"PDF\\\", \\\"[\\\", \
RowBox[{\\\"magnitudeDist\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}]}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"\
\[Infinity]\\\"}], \\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"RandomVariate\\\", \
\\\"[\\\", RowBox[{\\\"PoissonDistribution\\\", \\\"[\\\", \
RowBox[{\\\"20.652622883106154`\\\", \\\" \\\", \\\"t\\\"}], \\\"]\\\"}], \
\\\"]\\\"}]}], \\\"]\\\"}]\\) should be a list of non-negative machine-sized \
integers giving the dimensions for the result.\"", 2, 31, 20, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409707253512287`*^9, 3.941865876903017*^9, 
  3.9418706303958664`*^9, 3.9418714622716064`*^9, 3.9419705556208553`*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"78c1060c-85c9-684c-aade-d7b669cda9d1"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RandomVariate\\\", \
\\\"::\\\", \\\"array\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 31, 21, 24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409707253512287`*^9, 3.941865876903017*^9, 
  3.9418706303958664`*^9, 3.9418714622716064`*^9, 3.941970555628174*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"ac061052-abfc-114f-bcc5-990c71d2ed33"],

Cell[BoxData[
 TemplateBox[{
  "Probability", "input", "\"Invalid input.\"", 2, 31, 22, 
   24497405206345836536, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9409707253512287`*^9, 3.941865876903017*^9, 
  3.9418706303958664`*^9, 3.9418714622716064`*^9, 3.9419705556348667`*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"3b6d254d-4596-7f48-bef2-bb615a5e8436"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Break Even Point", "Section",
 CellChangeTimes->{{3.9409707300041084`*^9, 
  3.940970732611143*^9}},ExpressionUUID->"08d40358-2e5b-ae4b-b43a-\
39e5aecaa445"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"calculateBreakEven", "[", 
    RowBox[{"propertyValue_", ",", "annualPremium_"}], "]"}], ":=", 
   RowBox[{"propertyValue", "/", "annualPremium"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9409707542875233`*^9, 3.940970755125704*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"0765c7f1-21f6-ab40-ad82-93b5580ac4b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactive Visualization", "Section",
 CellChangeTimes->{{3.9409707672153053`*^9, 
  3.940970772268612*^9}},ExpressionUUID->"82d41118-b401-b54f-9005-\
609e14032226"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clear", " ", "any", " ", "existing", " ", "definitions"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "expectedClaimSize", ",", "claimSizeFunction", ",", "calculatePremium", 
      ",", "calculateBreakEven"}], "]"}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", "Constants", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meanMagnitude", "=", "4.30784"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"stdDevMagnitude", "=", "1.54993"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"poissonRate", "=", 
     RowBox[{"1", "/", "0.04842"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"magnitudeDist", "=", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"meanMagnitude", ",", "stdDevMagnitude"}], "]"}]}], ";"}], "\n",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "claim", " ", "size", " ", "function", " ", "separately", 
     " ", "to", " ", "avoid", " ", "protected", " ", "function", " ", 
     "issues"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"claimSizeFunction", "[", 
      RowBox[{"magnitude_", ",", "propertyValue_"}], "]"}], ":=", 
     RowBox[{"propertyValue", "*", 
      RowBox[{"(", 
       RowBox[{"0.01", "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"0.5", "*", "magnitude"}], ")"}]}]}], ")"}]}]}], ";"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "expected", " ", "claim", " ", "size", " ", "using", " ", 
     "discrete", " ", "sum"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"expectedClaimSize", "[", "propertyValue_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "magnitudeRange", ",", "probabilities", ",", "claims", ",", "total"}],
         "}"}], ",", 
       RowBox[{
        RowBox[{"magnitudeRange", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"1.4", ",", "7.4", ",", "0.1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"probabilities", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{"magnitudeDist", ",", "#"}], "]"}], "&"}], "/@", 
          "magnitudeRange"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"claims", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"claimSizeFunction", "[", 
            RowBox[{"#", ",", "propertyValue"}], "]"}], "&"}], "/@", 
          "magnitudeRange"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"total", "=", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"claims", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"probabilities", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "magnitudeRange", "]"}]}], "}"}]}], 
           "]"}], "*", "0.1"}]}], ";", "\[IndentingNewLine]", "total"}]}], 
      "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculatePremium", "[", 
      RowBox[{
      "propertyValue_", ",", "years_", ",", "safetyLoading_", ",", 
       "deductible_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "expectedLoss", "}"}], ",", 
       RowBox[{
        RowBox[{"expectedLoss", "=", 
         RowBox[{
          RowBox[{"expectedClaimSize", "[", "propertyValue", "]"}], "*", 
          "poissonRate", "*", "years"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"expectedLoss", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", "safetyLoading"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "deductible"}], ")"}]}]}]}], "]"}]}], ";"}], "\n",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculateBreakEven", "[", 
      RowBox[{"propertyValue_", ",", "annualPremium_"}], "]"}], ":=", 
     RowBox[{"propertyValue", "/", "annualPremium"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Main", " ", "visualization"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lastPropertyValue", "=", "100000"}], ",", 
       RowBox[{"lastYears", "=", "10"}], ",", 
       RowBox[{"lastSafetyLoading", "=", "0.2"}], ",", 
       RowBox[{"lastDeductible", "=", "0.05"}]}], "}"}], ",", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "is", ",", "ip", ",", "premium", ",", "annualPremium", ",", 
           "breakEvenYears", ",", "paymentsData", ",", "premiumsData"}], 
          "}"}], ",", 
         RowBox[{
          RowBox[{"is", "=", 
           RowBox[{"{", 
            RowBox[{"280", ",", "140"}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ip", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"50", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"40", ",", "2"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"premium", "=", 
           RowBox[{"calculatePremium", "[", 
            RowBox[{
            "propertyValue", ",", "years", ",", "safetyLoading", ",", 
             "deductible"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"annualPremium", "=", 
           RowBox[{"premium", "/", "years"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"breakEvenYears", "=", 
           RowBox[{"calculateBreakEven", "[", 
            RowBox[{"propertyValue", ",", "annualPremium"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"paymentsData", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"expectedClaimSize", "[", "propertyValue", "]"}], "*", 
              "poissonRate", "*", "t"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "years"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"premiumsData", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"annualPremium", "*", "t"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "years"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Labeled", "[", 
                RowBox[{
                 RowBox[{"ListLinePlot", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", "years"}], "]"}], ",", "premiumsData"}],
                     "}"}], "]"}], ",", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", "years"}], "]"}], ",", "paymentsData"}],
                     "}"}], "]"}]}], "}"}], ",", 
                   RowBox[{"Axes", "->", "False"}], ",", 
                   RowBox[{"Filling", "->", "0"}], ",", 
                   RowBox[{"Frame", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "is"}], ",", 
                   RowBox[{"PlotMarkers", "->", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "4"}], "}"}]}], ",", 
                   RowBox[{"PlotRange", "->", "All"}], ",", 
                   RowBox[{"ImagePadding", "->", "ip"}], ",", 
                   RowBox[{"PlotRangePadding", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Scaled", "[", "0.1", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Scaled", "[", "0.05", "]"}]}], "}"}]}], "}"}]}], 
                   ",", 
                   RowBox[{"AspectRatio", "->", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                   RowBox[{"FrameLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Years from inception\>\"", ",", 
                    "\"\<Payment $\>\""}], "}"}]}], ",", 
                   RowBox[{"PlotStyle", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "Blue", "}"}], ",", 
                    RowBox[{"{", "Red", "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Text", "@", "\"\<Insurer Payments\>\""}]}], "]"}], 
               ",", 
               RowBox[{"Labeled", "[", 
                RowBox[{
                 RowBox[{"ListLinePlot", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{"1", "-", 
                    RowBox[{"t", "/", "breakEvenYears"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "years"}], "}"}]}], "]"}], 
                   ",", 
                   RowBox[{"Axes", "->", "False"}], ",", 
                   RowBox[{"Filling", "->", "0"}], ",", 
                   RowBox[{"Frame", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "is"}], ",", 
                   RowBox[{"PlotMarkers", "->", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "4"}], "}"}]}], ",", 
                   RowBox[{"PlotRange", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "years"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
                   RowBox[{"ImagePadding", "->", "ip"}], ",", 
                   RowBox[{"PlotRangePadding", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Scaled", "[", "0.1", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Scaled", "[", "0.05", "]"}]}], "}"}]}], "}"}]}], 
                   ",", 
                   RowBox[{"AspectRatio", "->", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                   RowBox[{"FrameLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Years from inception\>\"", ",", 
                    "\"\<Survival Probability\>\""}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Text", "@", "\"\<Survival Probability\>\""}]}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"TextGrid", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"\"\<Present Value of Expected Claims\>\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<$\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"expectedClaimSize", "[", "propertyValue", "]"}], 
                    "]"}]}], "}"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Present Value of Expected Premium\>\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<$\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"premium", ",", 
                    RowBox[{"{", 
                    RowBox[{"9", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}]}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Annual Premium Needed to Break Even\>\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<$\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"annualPremium", ",", 
                    RowBox[{"{", 
                    RowBox[{"9", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}]}],
                    "}"}]}], "}"}], ",", 
                RowBox[{"Frame", "->", "All"}], ",", 
                RowBox[{"ItemSize", "->", 
                 RowBox[{"{", 
                  RowBox[{"14", ",", "1"}], "}"}]}], ",", 
                RowBox[{"Dividers", "->", "All"}], ",", 
                RowBox[{"Background", "->", 
                 RowBox[{"Lighter", "[", 
                  RowBox[{"Green", ",", "0.8"}], "]"}]}]}], "]"}], "}"}]}], 
            "}"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "propertyValue", ",", "100000", ",", "\"\<Property Value\>\""}], 
          "}"}], ",", "10000", ",", "1000000", ",", "10000", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "years", ",", "10", ",", "\"\<Coverage Period (Years)\>\""}], "}"}],
          ",", "1", ",", "30", ",", "1", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "safetyLoading", ",", "0.2", ",", "\"\<Safety Loading\>\""}], "}"}],
          ",", "0.1", ",", "0.5", ",", "0.05", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"deductible", ",", "0.05", ",", "\"\<Deductible\>\""}], 
          "}"}], ",", "0.01", ",", "0.20", ",", "0.01", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"Initialization", ":>", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"lastPropertyValue", "=", "propertyValue"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"lastYears", "=", "years"}], ";", "\[IndentingNewLine]", 
          RowBox[{"lastSafetyLoading", "=", "safetyLoading"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"lastDeductible", "=", "deductible"}]}], ")"}]}], ",", 
       RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]}], "]"}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.9409803441845036`*^9, 3.9409803441845036`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"086b0ae1-b2d6-3d48-842e-de592f1f2440"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`lastPropertyValue$$ = 
  100000, $CellContext`lastYears$$ = 10, $CellContext`lastSafetyLoading$$ = 
  0.2, $CellContext`lastDeductible$$ = 0.05}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`deductible$$ = 
     0.05, $CellContext`propertyValue$$ = 
     100000, $CellContext`safetyLoading$$ = 0.2, $CellContext`years$$ = 10, 
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`propertyValue$$], 100000, "Property Value"}, 10000, 
       1000000, 10000, ControlType -> Manipulator}, {{
        Hold[$CellContext`years$$], 10, "Coverage Period (Years)"}, 1, 30, 1, 
       ControlType -> Manipulator}, {{
        Hold[$CellContext`safetyLoading$$], 0.2, "Safety Loading"}, 0.1, 0.5, 
       0.05, ControlType -> Manipulator}, {{
        Hold[$CellContext`deductible$$], 0.05, "Deductible"}, 0.01, 0.2, 0.01,
        ControlType -> Manipulator}}, Typeset`size$$ = {
     433.0734367675781, {99.75165777365861, 103.87424064691363`}}, 
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False,
      Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {$CellContext`deductible$$ = 
         0.05, $CellContext`propertyValue$$ = 
         100000, $CellContext`safetyLoading$$ = 0.2, $CellContext`years$$ = 
         10}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$, 
         Typeset`keyframeActionsQ$$, Typeset`keyframeList$$}, "Body" :> 
       Module[{$CellContext`is$, $CellContext`ip$, $CellContext`premium$, \
$CellContext`annualPremium$, $CellContext`breakEvenYears$, \
$CellContext`paymentsData$, $CellContext`premiumsData$}, $CellContext`is$ = {
           280, 140}; $CellContext`ip$ = {{50, 2}, {40, 
           2}}; $CellContext`premium$ = \
$CellContext`calculatePremium[$CellContext`propertyValue$$, \
$CellContext`years$$, $CellContext`safetyLoading$$, \
$CellContext`deductible$$]; $CellContext`annualPremium$ = \
$CellContext`premium$/$CellContext`years$$; $CellContext`breakEvenYears$ = \
$CellContext`calculateBreakEven[$CellContext`propertyValue$$, \
$CellContext`annualPremium$]; $CellContext`paymentsData$ = 
          Table[$CellContext`expectedClaimSize[$CellContext`propertyValue$$] \
$CellContext`poissonRate $CellContext`t, {$CellContext`t, 
             0, $CellContext`years$$}]; $CellContext`premiumsData$ = 
          Table[$CellContext`annualPremium$ $CellContext`t, {$CellContext`t, 
             0, $CellContext`years$$}]; Grid[{{
             Labeled[
              ListLinePlot[{
                Thread[{
                  Range[
                  0, $CellContext`years$$], $CellContext`premiumsData$}], 
                Thread[{
                  Range[
                  0, $CellContext`years$$], $CellContext`paymentsData$}]}, 
               Axes -> False, Filling -> 0, Frame -> True, 
               ImageSize -> $CellContext`is$, PlotMarkers -> {Automatic, 4}, 
               PlotRange -> All, ImagePadding -> $CellContext`ip$, 
               PlotRangePadding -> {{Automatic, 
                  Scaled[0.1]}, {Automatic, 
                  Scaled[0.05]}}, AspectRatio -> 1/2, 
               FrameLabel -> {"Years from inception", "Payment $"}, 
               PlotStyle -> {{Blue}, {Red}}], 
              Text["Insurer Payments"]], 
             Labeled[
              ListLinePlot[
               
               Table[{$CellContext`t, 
                 1 - $CellContext`t/$CellContext`breakEvenYears$}, \
{$CellContext`t, 0, $CellContext`years$$}], Axes -> False, Filling -> 0, 
               Frame -> True, ImageSize -> $CellContext`is$, 
               PlotMarkers -> {Automatic, 4}, 
               PlotRange -> {{0, $CellContext`years$$}, {0, 1}}, 
               ImagePadding -> $CellContext`ip$, 
               PlotRangePadding -> {{Automatic, 
                  Scaled[0.1]}, {Automatic, 
                  Scaled[0.05]}}, AspectRatio -> 1/2, 
               FrameLabel -> {
                "Years from inception", "Survival Probability"}], 
              Text["Survival Probability"]]}, {
             TextGrid[{{"Present Value of Expected Claims", 
                Row[{"$", 
                  NumberForm[
                   $CellContext`expectedClaimSize[$CellContext`propertyValue$$\
]]}]}, {"Present Value of Expected Premium", 
                Row[{"$", 
                  NumberForm[$CellContext`premium$, {9, 2}]}]}, {
               "Annual Premium Needed to Break Even", 
                Row[{"$", 
                  NumberForm[$CellContext`annualPremium$, {9, 2}]}]}}, Frame -> 
              All, ItemSize -> {14, 1}, Dividers -> All, Background -> 
              Lighter[Green, 0.8]]}}]], 
       "Specifications" :> {{{$CellContext`propertyValue$$, 100000, 
           "Property Value"}, 10000, 1000000, 10000, Appearance -> "Labeled", 
          ImageSize -> 
          Medium}, {{$CellContext`years$$, 10, "Coverage Period (Years)"}, 1, 
          30, 1, Appearance -> "Labeled", ImageSize -> 
          Medium}, {{$CellContext`safetyLoading$$, 0.2, "Safety Loading"}, 
          0.1, 0.5, 0.05, Appearance -> "Labeled", ImageSize -> 
          Medium}, {{$CellContext`deductible$$, 0.05, "Deductible"}, 0.01, 
          0.2, 0.01, Appearance -> "Labeled", ImageSize -> Medium}}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{
       707.3513135070799, {120.62346246115862`, 124.74604533441365`}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({$CellContext`calculatePremium[
          Pattern[$CellContext`propertyValue, 
           Blank[]], 
          Pattern[$CellContext`years, 
           Blank[]], 
          Pattern[$CellContext`safetyLoading, 
           Blank[]], 
          Pattern[$CellContext`deductible, 
           Blank[]]] := 
        Module[{$CellContext`expectedLoss}, $CellContext`expectedLoss = \
$CellContext`expectedClaimSize[$CellContext`propertyValue] \
$CellContext`poissonRate $CellContext`years; $CellContext`expectedLoss (
            1 + $CellContext`safetyLoading) (
            1 - $CellContext`deductible)], $CellContext`safetyLoading$$ = 
        0.2, $CellContext`expectedClaimSize[
          Pattern[$CellContext`propertyValue, 
           Blank[]]] := 
        Module[{$CellContext`magnitudeRange, $CellContext`probabilities, \
$CellContext`claims, $CellContext`total}, $CellContext`magnitudeRange = 
           Range[1.4, 7.4, 0.1]; $CellContext`probabilities = 
           Map[PDF[$CellContext`magnitudeDist, #]& , \
$CellContext`magnitudeRange]; $CellContext`claims = 
           Map[$CellContext`claimSizeFunction[#, $CellContext`propertyValue]& \
, $CellContext`magnitudeRange]; $CellContext`total = 
           Sum[Part[$CellContext`claims, $CellContext`i] 
              Part[$CellContext`probabilities, $CellContext`i], \
{$CellContext`i, 1, 
               Length[$CellContext`magnitudeRange]}] 
            0.1; $CellContext`total], $CellContext`magnitudeDist = 
        NormalDistribution[4.30784, 1.54993], $CellContext`claimSizeFunction[
          Pattern[$CellContext`magnitude, 
           Blank[]], 
          Pattern[$CellContext`propertyValue, 
           Blank[]]] := $CellContext`propertyValue (0.01 
          E^(0.5 $CellContext`magnitude)), $CellContext`poissonRate = 
        20.652622883106154`, $CellContext`calculateBreakEven[
          Pattern[$CellContext`propertyValue, 
           Blank[]], 
          Pattern[$CellContext`annualPremium, 
           
           Blank[]]] := \
$CellContext`propertyValue/$CellContext`annualPremium, \
$CellContext`lastPropertyValue$$ = $CellContext`propertyValue$$; \
$CellContext`lastYears$$ = $CellContext`years$$; \
$CellContext`lastSafetyLoading$$ = $CellContext`safetyLoading$$; \
$CellContext`lastDeductible$$ = $CellContext`deductible$$}; 
      Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.9409803451339016`*^9, 3.9418658771288166`*^9, 
  3.941870630607773*^9, 3.9418714624886684`*^9, 3.941970555772772*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"8548aa8a-1fb8-944f-8270-71e06bc29daa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clear", " ", "any", " ", "existing", " ", "definitions"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "expectedClaimSize", ",", "claimSizeFunction", ",", "calculatePremium", 
      ",", "calculateBreakEven", ",", "simulateReserveProcess"}], "]"}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", "Constants", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meanMagnitude", "=", "4.30784"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"stdDevMagnitude", "=", "1.54993"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"poissonRate", "=", 
     RowBox[{"1", "/", "0.04842"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"magnitudeDist", "=", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"meanMagnitude", ",", "stdDevMagnitude"}], "]"}]}], ";"}], "\n",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "claim", " ", "size", " ", "function", " ", "separately", 
     " ", "to", " ", "avoid", " ", "protected", " ", "function", " ", 
     "issues"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"claimSizeFunction", "[", 
      RowBox[{"magnitude_", ",", "propertyValue_"}], "]"}], ":=", 
     RowBox[{"propertyValue", "*", 
      RowBox[{"(", 
       RowBox[{"0.01", "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"0.5", "*", "magnitude"}], ")"}]}]}], ")"}]}]}], ";"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "expected", " ", "claim", " ", "size", " ", "using", " ", 
     "discrete", " ", "sum"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"expectedClaimSize", "[", "propertyValue_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "magnitudeRange", ",", "probabilities", ",", "claims", ",", "total"}],
         "}"}], ",", 
       RowBox[{
        RowBox[{"magnitudeRange", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"1.4", ",", "7.4", ",", "0.1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"probabilities", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{"magnitudeDist", ",", "#"}], "]"}], "&"}], "/@", 
          "magnitudeRange"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"claims", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"claimSizeFunction", "[", 
            RowBox[{"#", ",", "propertyValue"}], "]"}], "&"}], "/@", 
          "magnitudeRange"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"total", "=", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"claims", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"probabilities", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "magnitudeRange", "]"}]}], "}"}]}], 
           "]"}], "*", "0.1"}]}], ";", "\[IndentingNewLine]", "total"}]}], 
      "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculatePremium", "[", 
      RowBox[{
      "propertyValue_", ",", "years_", ",", "safetyLoading_", ",", 
       "deductible_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "expectedLoss", "}"}], ",", 
       RowBox[{
        RowBox[{"expectedLoss", "=", 
         RowBox[{
          RowBox[{"expectedClaimSize", "[", "propertyValue", "]"}], "*", 
          "poissonRate", "*", "years"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"expectedLoss", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", "safetyLoading"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "deductible"}], ")"}]}]}]}], "]"}]}], ";"}], "\n",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculateBreakEven", "[", 
      RowBox[{"propertyValue_", ",", "annualPremium_"}], "]"}], ":=", 
     RowBox[{"propertyValue", "/", "annualPremium"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Simulate", " ", "Reserve", " ", "Process", " ", "with", " ", "Poisson", 
     " ", "Claim", " ", "Arrivals"}], "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"simulateReserveProcess", "[", 
      RowBox[{
      "initialReserve_", ",", "premiumRate_", ",", "years_", ",", 
       "propertyValue_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "timeSteps", ",", "totalTime", ",", "claimTimes", ",", "claimSizes", 
         ",", "reserveTrajectory", ",", "premiumAccrued"}], "}"}], ",", 
       RowBox[{
        RowBox[{"totalTime", "=", 
         RowBox[{"years", "*", "365"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Simulate", " ", "daily", " ", "time", " ", "steps", " ", "for", " ",
           "given", " ", "years"}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{
         "Generate", " ", "random", " ", "claim", " ", "times", " ", "using", 
          " ", "Poisson", " ", "process"}], "*)"}], 
        RowBox[{"claimTimes", "=", 
         RowBox[{"Accumulate", "[", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"ExponentialDistribution", "[", "poissonRate", "]"}], ",",
             "totalTime"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"claimTimes", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"claimTimes", ",", 
           RowBox[{
            RowBox[{"#", "<=", "totalTime"}], "&"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Filter", " ", "within", " ", "the", " ", "time", " ", "range"}], 
         "*)"}], 
        RowBox[{"(*", 
         RowBox[{
         "Generate", " ", "claim", " ", "sizes", " ", "based", " ", "on", " ",
           "the", " ", "magnitude", " ", "distribution"}], "*)"}], 
        RowBox[{"claimSizes", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"claimSizeFunction", "[", 
            RowBox[{"#", ",", "propertyValue"}], "]"}], "&"}], "/@", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"magnitudeDist", ",", 
            RowBox[{"Length", "[", "claimTimes", "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Initialize", " ", "reserve", " ", "and", " ", "simulate"}], 
         "*)"}], 
        RowBox[{"reserveTrajectory", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"premiumAccrued", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"t", "=", "1"}], ",", 
          RowBox[{"t", "<=", "totalTime"}], ",", 
          RowBox[{"t", "++"}], ",", 
          RowBox[{
           RowBox[{"premiumAccrued", "+=", 
            RowBox[{"premiumRate", "/", "365"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"Premium", " ", "accrues", " ", "daily"}], "*)"}], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Round", "[", "claimTimes", "]"}], ",", "t"}], "]"}], 
             ",", 
             RowBox[{"(*", 
              RowBox[{
              "Subtract", " ", "claims", " ", "when", " ", "they", " ", 
               "occur"}], "*)"}], 
             RowBox[{
              RowBox[{"premiumAccrued", "-=", 
               RowBox[{"claimSizes", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"claimSizes", "=", 
               RowBox[{"Rest", "[", "claimSizes", "]"}]}], ";"}]}], " ", 
            RowBox[{"(*", 
             RowBox[{"Remove", " ", "processed", " ", "claim"}], "*)"}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"reserveTrajectory", ",", 
             RowBox[{"initialReserve", "+", "premiumAccrued"}]}], "]"}], 
           ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
        "reserveTrajectory"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Main", " ", "visualization"}], "*)"}], "\n", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lastPropertyValue", "=", "100000"}], ",", 
       RowBox[{"lastYears", "=", "10"}], ",", 
       RowBox[{"lastSafetyLoading", "=", "0.2"}], ",", 
       RowBox[{"lastDeductible", "=", "0.05"}]}], "}"}], ",", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "is", ",", "ip", ",", "premium", ",", "annualPremium", ",", 
           "breakEvenYears", ",", "paymentsData", ",", "premiumsData", ",", 
           "reserveData"}], "}"}], ",", 
         RowBox[{
          RowBox[{"is", "=", 
           RowBox[{"{", 
            RowBox[{"280", ",", "140"}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ip", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"50", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"40", ",", "2"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"premium", "=", 
           RowBox[{"calculatePremium", "[", 
            RowBox[{
            "propertyValue", ",", "years", ",", "safetyLoading", ",", 
             "deductible"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"annualPremium", "=", 
           RowBox[{"premium", "/", "years"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"breakEvenYears", "=", 
           RowBox[{"calculateBreakEven", "[", 
            RowBox[{"propertyValue", ",", "annualPremium"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"paymentsData", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"expectedClaimSize", "[", "propertyValue", "]"}], "*", 
              "poissonRate", "*", "t"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "years"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"premiumsData", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"annualPremium", "*", "t"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "years"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Generate", " ", "reserve", " ", "data", " ", "using", " ", "the", 
            " ", "corrected", " ", "process"}], "*)"}], 
          RowBox[{"reserveData", "=", 
           RowBox[{"simulateReserveProcess", "[", 
            RowBox[{
            "initialReserve", ",", "annualPremium", ",", "years", ",", 
             "propertyValue"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Labeled", "[", 
                RowBox[{
                 RowBox[{"ListLinePlot", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", "years"}], "]"}], ",", "premiumsData"}],
                     "}"}], "]"}], ",", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", "years"}], "]"}], ",", "paymentsData"}],
                     "}"}], "]"}]}], "}"}], ",", 
                   RowBox[{"Axes", "->", "False"}], ",", 
                   RowBox[{"Filling", "->", "0"}], ",", 
                   RowBox[{"Frame", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "is"}], ",", 
                   RowBox[{"PlotMarkers", "->", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "4"}], "}"}]}], ",", 
                   RowBox[{"PlotRange", "->", "All"}], ",", 
                   RowBox[{"ImagePadding", "->", "ip"}], ",", 
                   RowBox[{"PlotRangePadding", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Scaled", "[", "0.1", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Scaled", "[", "0.05", "]"}]}], "}"}]}], "}"}]}], 
                   ",", 
                   RowBox[{"AspectRatio", "->", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                   RowBox[{"FrameLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Years from inception\>\"", ",", 
                    "\"\<Payment $\>\""}], "}"}]}], ",", 
                   RowBox[{"PlotStyle", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "Blue", "}"}], ",", 
                    RowBox[{"{", "Red", "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Text", "@", "\"\<Insurer Payments\>\""}]}], "]"}], 
               ",", 
               RowBox[{"Labeled", "[", 
                RowBox[{
                 RowBox[{"ListLinePlot", "[", 
                  RowBox[{
                   RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "reserveData", "]"}], "]"}], ",", 
                    "reserveData"}], "}"}], "]"}], ",", 
                   RowBox[{"Axes", "->", "False"}], ",", 
                   RowBox[{"Filling", "->", "Axis"}], ",", 
                   RowBox[{"Frame", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "is"}], ",", 
                   RowBox[{"PlotStyle", "->", "Green"}], ",", 
                   RowBox[{"PlotRange", "->", "All"}], ",", 
                   RowBox[{"AspectRatio", "->", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                   RowBox[{"FrameLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Days\>\"", ",", "\"\<Reserve Amount\>\""}], 
                    "}"}]}], ",", 
                   RowBox[{
                   "PlotLabel", "->", 
                    "\"\<Cramer-Lundberg Reserve Process\>\""}]}], "]"}], ",", 
                 RowBox[{"Text", "@", "\"\<Reserve Process\>\""}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"TextGrid", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"\"\<Present Value of Expected Claims\>\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<$\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"expectedClaimSize", "[", "propertyValue", "]"}], 
                    "]"}]}], "}"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Present Value of Expected Premium\>\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<$\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"premium", ",", 
                    RowBox[{"{", 
                    RowBox[{"9", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}]}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Annual Premium Needed to Break Even\>\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<$\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"annualPremium", ",", 
                    RowBox[{"{", 
                    RowBox[{"9", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}]}],
                    "}"}]}], "}"}], ",", 
                RowBox[{"Frame", "->", "All"}], ",", 
                RowBox[{"ItemSize", "->", 
                 RowBox[{"{", 
                  RowBox[{"14", ",", "1"}], "}"}]}], ",", 
                RowBox[{"Dividers", "->", "All"}], ",", 
                RowBox[{"Background", "->", 
                 RowBox[{"Lighter", "[", 
                  RowBox[{"Green", ",", "0.8"}], "]"}]}]}], "]"}], "}"}]}], 
            "}"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "propertyValue", ",", "100000", ",", "\"\<Property Value\>\""}], 
          "}"}], ",", "10000", ",", "1000000", ",", "10000", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "years", ",", "10", ",", "\"\<Coverage Period (Years)\>\""}], "}"}],
          ",", "1", ",", "30", ",", "1", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "safetyLoading", ",", "0.2", ",", "\"\<Safety Loading\>\""}], "}"}],
          ",", "0.1", ",", "0.5", ",", "0.05", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"deductible", ",", "0.05", ",", "\"\<Deductible\>\""}], 
          "}"}], ",", "0.01", ",", "0.20", ",", "0.01", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "initialReserve", ",", "100000", ",", "\"\<Initial Reserve\>\""}], 
          "}"}], ",", "10000", ",", "1000000", ",", "10000", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"Initialization", ":>", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"lastPropertyValue", "=", "propertyValue"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"lastYears", "=", "years"}], ";", "\[IndentingNewLine]", 
          RowBox[{"lastSafetyLoading", "=", "safetyLoading"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"lastDeductible", "=", "deductible"}]}], ")"}]}], ",", 
       RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]}], "]"}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.941867613421795*^9, 3.9418676157758865`*^9}, {
   3.941867656494034*^9, 3.941867659882141*^9}, 3.941867703129446*^9, {
   3.9418691121512947`*^9, 3.9418691128486767`*^9}, {3.941869675659773*^9, 
   3.941869691998848*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"c8da14f4-b51c-4642-b960-02025cd9bba6"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`lastPropertyValue$$ = 
  100000, $CellContext`lastYears$$ = 10, $CellContext`lastSafetyLoading$$ = 
  0.2, $CellContext`lastDeductible$$ = 0.05}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`deductible$$ = 
     0.05, $CellContext`initialReserve$$ = 
     100000, $CellContext`propertyValue$$ = 
     100000, $CellContext`safetyLoading$$ = 0.2, $CellContext`years$$ = 10, 
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`propertyValue$$], 100000, "Property Value"}, 10000, 
       1000000, 10000, ControlType -> Manipulator}, {{
        Hold[$CellContext`years$$], 10, "Coverage Period (Years)"}, 1, 30, 1, 
       ControlType -> Manipulator}, {{
        Hold[$CellContext`safetyLoading$$], 0.2, "Safety Loading"}, 0.1, 0.5, 
       0.05, ControlType -> Manipulator}, {{
        Hold[$CellContext`deductible$$], 0.05, "Deductible"}, 0.01, 0.2, 0.01,
        ControlType -> Manipulator}, {{
        Hold[$CellContext`initialReserve$$], 100000, "Initial Reserve"}, 
       10000, 1000000, 10000, ControlType -> Manipulator}}, Typeset`size$$ = {
     41.125389404296875`, {1.0774413710832595`, 6.825317160040139}}, 
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False,
      Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {$CellContext`deductible$$ = 
         0.05, $CellContext`initialReserve$$ = 
         100000, $CellContext`propertyValue$$ = 
         100000, $CellContext`safetyLoading$$ = 0.2, $CellContext`years$$ = 
         10}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$, 
         Typeset`keyframeActionsQ$$, Typeset`keyframeList$$}, "Body" :> 
       Module[{$CellContext`is$, $CellContext`ip$, $CellContext`premium$, \
$CellContext`annualPremium$, $CellContext`breakEvenYears$, \
$CellContext`paymentsData$, $CellContext`premiumsData$, \
$CellContext`reserveData$}, $CellContext`is$ = {280, 
           140}; $CellContext`ip$ = {{50, 2}, {40, 
           2}}; $CellContext`premium$ = \
$CellContext`calculatePremium[$CellContext`propertyValue$$, \
$CellContext`years$$, $CellContext`safetyLoading$$, \
$CellContext`deductible$$]; $CellContext`annualPremium$ = \
$CellContext`premium$/$CellContext`years$$; $CellContext`breakEvenYears$ = \
$CellContext`calculateBreakEven[$CellContext`propertyValue$$, \
$CellContext`annualPremium$]; $CellContext`paymentsData$ = 
          Table[$CellContext`expectedClaimSize[$CellContext`propertyValue$$] \
$CellContext`poissonRate $CellContext`t, {$CellContext`t, 
             0, $CellContext`years$$}]; $CellContext`premiumsData$ = 
          Table[$CellContext`annualPremium$ $CellContext`t, {$CellContext`t, 
             0, $CellContext`years$$}]; $CellContext`reserveData$ = \
$CellContext`simulateReserveProcess[$CellContext`initialReserve$$, \
$CellContext`annualPremium$, $CellContext`years$$, \
$CellContext`propertyValue$$]; Grid[{{
             Labeled[
              ListLinePlot[{
                Thread[{
                  Range[
                  0, $CellContext`years$$], $CellContext`premiumsData$}], 
                Thread[{
                  Range[
                  0, $CellContext`years$$], $CellContext`paymentsData$}]}, 
               Axes -> False, Filling -> 0, Frame -> True, 
               ImageSize -> $CellContext`is$, PlotMarkers -> {Automatic, 4}, 
               PlotRange -> All, ImagePadding -> $CellContext`ip$, 
               PlotRangePadding -> {{Automatic, 
                  Scaled[0.1]}, {Automatic, 
                  Scaled[0.05]}}, AspectRatio -> 1/2, 
               FrameLabel -> {"Years from inception", "Payment $"}, 
               PlotStyle -> {{Blue}, {Red}}], 
              Text["Insurer Payments"]], 
             Labeled[
              ListLinePlot[
               Thread[{
                 Range[
                  
                  Length[$CellContext`reserveData$]], \
$CellContext`reserveData$}], Axes -> False, Filling -> Axis, Frame -> True, 
               ImageSize -> $CellContext`is$, PlotStyle -> Green, PlotRange -> 
               All, AspectRatio -> 1/2, 
               FrameLabel -> {"Days", "Reserve Amount"}, PlotLabel -> 
               "Cramer-Lundberg Reserve Process"], 
              Text["Reserve Process"]]}, {
             TextGrid[{{"Present Value of Expected Claims", 
                Row[{"$", 
                  NumberForm[
                   $CellContext`expectedClaimSize[$CellContext`propertyValue$$\
]]}]}, {"Present Value of Expected Premium", 
                Row[{"$", 
                  NumberForm[$CellContext`premium$, {9, 2}]}]}, {
               "Annual Premium Needed to Break Even", 
                Row[{"$", 
                  NumberForm[$CellContext`annualPremium$, {9, 2}]}]}}, Frame -> 
              All, ItemSize -> {14, 1}, Dividers -> All, Background -> 
              Lighter[Green, 0.8]]}}]], 
       "Specifications" :> {{{$CellContext`propertyValue$$, 100000, 
           "Property Value"}, 10000, 1000000, 10000, Appearance -> "Labeled", 
          ImageSize -> 
          Medium}, {{$CellContext`years$$, 10, "Coverage Period (Years)"}, 1, 
          30, 1, Appearance -> "Labeled", ImageSize -> 
          Medium}, {{$CellContext`safetyLoading$$, 0.2, "Safety Loading"}, 
          0.1, 0.5, 0.05, Appearance -> "Labeled", ImageSize -> 
          Medium}, {{$CellContext`deductible$$, 0.05, "Deductible"}, 0.01, 
          0.2, 0.01, Appearance -> "Labeled", ImageSize -> 
          Medium}, {{$CellContext`initialReserve$$, 100000, 
           "Initial Reserve"}, 10000, 1000000, 10000, Appearance -> "Labeled",
           ImageSize -> Medium}}, "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{
       315.4032661437989, {52.21851325087248, 56.341096124127496`}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({$CellContext`calculatePremium[
          Pattern[$CellContext`propertyValue, 
           Blank[]], 
          Pattern[$CellContext`years, 
           Blank[]], 
          Pattern[$CellContext`safetyLoading, 
           Blank[]], 
          Pattern[$CellContext`deductible, 
           Blank[]]] := 
        Module[{$CellContext`expectedLoss}, $CellContext`expectedLoss = \
$CellContext`expectedClaimSize[$CellContext`propertyValue] \
$CellContext`poissonRate $CellContext`years; $CellContext`expectedLoss (
            1 + $CellContext`safetyLoading) (
            1 - $CellContext`deductible)], $CellContext`safetyLoading$$ = 
        0.2, $CellContext`expectedClaimSize[
          Pattern[$CellContext`propertyValue, 
           Blank[]]] := 
        Module[{$CellContext`magnitudeRange, $CellContext`probabilities, \
$CellContext`claims, $CellContext`total}, $CellContext`magnitudeRange = 
           Range[1.4, 7.4, 0.1]; $CellContext`probabilities = 
           Map[PDF[$CellContext`magnitudeDist, #]& , \
$CellContext`magnitudeRange]; $CellContext`claims = 
           Map[$CellContext`claimSizeFunction[#, $CellContext`propertyValue]& \
, $CellContext`magnitudeRange]; $CellContext`total = 
           Sum[Part[$CellContext`claims, $CellContext`i] 
              Part[$CellContext`probabilities, $CellContext`i], \
{$CellContext`i, 1, 
               Length[$CellContext`magnitudeRange]}] 
            0.1; $CellContext`total], $CellContext`magnitudeDist = 
        NormalDistribution[4.30784, 1.54993], $CellContext`claimSizeFunction[
          Pattern[$CellContext`magnitude, 
           Blank[]], 
          Pattern[$CellContext`propertyValue, 
           Blank[]]] := $CellContext`propertyValue (0.01 
          E^(0.5 $CellContext`magnitude)), $CellContext`poissonRate = 
        20.652622883106154`, $CellContext`calculateBreakEven[
          Pattern[$CellContext`propertyValue, 
           Blank[]], 
          Pattern[$CellContext`annualPremium, 
           
           Blank[]]] := \
$CellContext`propertyValue/$CellContext`annualPremium, \
$CellContext`simulateReserveProcess[
          Pattern[$CellContext`initialReserve, 
           Blank[]], 
          Pattern[$CellContext`premiumRate, 
           Blank[]], 
          Pattern[$CellContext`years, 
           Blank[]], 
          Pattern[$CellContext`propertyValue, 
           Blank[]]] := 
        Module[{$CellContext`timeSteps, $CellContext`totalTime, \
$CellContext`claimTimes, $CellContext`claimSizes, \
$CellContext`reserveTrajectory, $CellContext`premiumAccrued}, \
$CellContext`totalTime = $CellContext`years 365; $CellContext`claimTimes = 
           Accumulate[
             RandomVariate[
              
              ExponentialDistribution[$CellContext`poissonRate], \
$CellContext`totalTime]]; $CellContext`claimTimes = 
           Select[$CellContext`claimTimes, # <= $CellContext`totalTime& ]; \
$CellContext`claimSizes = 
           Map[$CellContext`claimSizeFunction[#, $CellContext`propertyValue]& \
, 
             RandomVariate[$CellContext`magnitudeDist, 
              
              Length[$CellContext`claimTimes]]]; \
$CellContext`reserveTrajectory = {}; $CellContext`premiumAccrued = 0; 
          For[$CellContext`t = 1, $CellContext`t <= $CellContext`totalTime, 
            Increment[$CellContext`t], 
            AddTo[$CellContext`premiumAccrued, $CellContext`premiumRate/365]; 
            If[
              MemberQ[
               Round[$CellContext`claimTimes], $CellContext`t], 
              SubtractFrom[$CellContext`premiumAccrued, 
                Part[$CellContext`claimSizes, 1]]; $CellContext`claimSizes = 
               Rest[$CellContext`claimSizes]; Null]; 
            AppendTo[$CellContext`reserveTrajectory, \
$CellContext`initialReserve + $CellContext`premiumAccrued]; 
            Null]; $CellContext`reserveTrajectory], $CellContext`claimSizes = {
          $CellContext`claimSizeFunction[5.3302556655754465`], 
          $CellContext`claimSizeFunction[4.829100251191005], 
          $CellContext`claimSizeFunction[4.932859169620678], 
          $CellContext`claimSizeFunction[4.866110125172176], 
          $CellContext`claimSizeFunction[5.864996521232565], 
          $CellContext`claimSizeFunction[4.940959518316636], 
          $CellContext`claimSizeFunction[2.9863585379837647`], 
          $CellContext`claimSizeFunction[4.217596818469123], 
          $CellContext`claimSizeFunction[3.925186737459065], 
          $CellContext`claimSizeFunction[3.1262704760626683`], 
          $CellContext`claimSizeFunction[3.737803602028109], 
          $CellContext`claimSizeFunction[6.0392030667474685`], 
          $CellContext`claimSizeFunction[3.16162482487245], 
          $CellContext`claimSizeFunction[3.1863460548465667`], 
          $CellContext`claimSizeFunction[4.9723778228911115`], 
          $CellContext`claimSizeFunction[5.895762348980908], 
          $CellContext`claimSizeFunction[2.8410288601163023`], 
          $CellContext`claimSizeFunction[4.798774741116922], 
          $CellContext`claimSizeFunction[0.41905743154553754`], 
          $CellContext`claimSizeFunction[4.95216669432067], 
          $CellContext`claimSizeFunction[2.9174957814910893`], 
          $CellContext`claimSizeFunction[4.400723694912925], 
          $CellContext`claimSizeFunction[3.5565244798086733`], 
          $CellContext`claimSizeFunction[7.1355582353471005`], 
          $CellContext`claimSizeFunction[5.156476424104946], 
          $CellContext`claimSizeFunction[4.995878724981018], 
          $CellContext`claimSizeFunction[3.7200120402200136`], 
          $CellContext`claimSizeFunction[6.435074015628803], 
          $CellContext`claimSizeFunction[2.3436336305730743`], 
          $CellContext`claimSizeFunction[7.653836490868423], 
          $CellContext`claimSizeFunction[5.306591589154186], 
          $CellContext`claimSizeFunction[5.924564388398983], 
          $CellContext`claimSizeFunction[4.786434244654924], 
          $CellContext`claimSizeFunction[5.823726694870194], 
          $CellContext`claimSizeFunction[4.401365485557315], 
          $CellContext`claimSizeFunction[2.5179327916432133`], 
          $CellContext`claimSizeFunction[1.9213754874514803`], 
          $CellContext`claimSizeFunction[5.425657838876285], 
          $CellContext`claimSizeFunction[3.550945569905232], 
          $CellContext`claimSizeFunction[5.32558115599835], 
          $CellContext`claimSizeFunction[4.428837050056689], 
          $CellContext`claimSizeFunction[2.156435009804529], 
          $CellContext`claimSizeFunction[4.9479869040789675`], 
          $CellContext`claimSizeFunction[5.163060368227753], 
          $CellContext`claimSizeFunction[5.66754808174411], 
          $CellContext`claimSizeFunction[6.096090912946224], 
          $CellContext`claimSizeFunction[4.338222576896621], 
          $CellContext`claimSizeFunction[4.737764894329358], 
          $CellContext`claimSizeFunction[7.960976027560964], 
          $CellContext`claimSizeFunction[4.467875561740092], 
          $CellContext`claimSizeFunction[3.625396414021566], 
          $CellContext`claimSizeFunction[3.1658917558363564`], 
          $CellContext`claimSizeFunction[1.4878458012248679`], 
          $CellContext`claimSizeFunction[4.771508956738808], 
          $CellContext`claimSizeFunction[3.232975649961768], 
          $CellContext`claimSizeFunction[3.6642899891157796`], 
          $CellContext`claimSizeFunction[4.90024176339719], 
          $CellContext`claimSizeFunction[4.85951160676925], 
          $CellContext`claimSizeFunction[1.966640528870895], 
          $CellContext`claimSizeFunction[2.3844851578121258`], 
          $CellContext`claimSizeFunction[4.697062619437744], 
          $CellContext`claimSizeFunction[3.144715967346495], 
          $CellContext`claimSizeFunction[4.28054870931122], 
          $CellContext`claimSizeFunction[5.932642086490023], 
          $CellContext`claimSizeFunction[3.8308229786813053`], 
          $CellContext`claimSizeFunction[5.142301013922833], 
          $CellContext`claimSizeFunction[2.951065022907035], 
          $CellContext`claimSizeFunction[4.996445550375637], 
          $CellContext`claimSizeFunction[4.55694459387221], 
          $CellContext`claimSizeFunction[1.9130271365991836`], 
          $CellContext`claimSizeFunction[6.185116334240377], 
          $CellContext`claimSizeFunction[4.23895767478118], 
          $CellContext`claimSizeFunction[7.045994895956735], 
          $CellContext`claimSizeFunction[2.672900520648648], 
          $CellContext`claimSizeFunction[2.2533199498836964`], 
          $CellContext`claimSizeFunction[3.494442170089101], 
          $CellContext`claimSizeFunction[2.719545759475514], 
          $CellContext`claimSizeFunction[2.364949564832634], 
          $CellContext`claimSizeFunction[5.248479617785776], 
          $CellContext`claimSizeFunction[4.976620347930907], 
          $CellContext`claimSizeFunction[2.0433313649249154`], 
          $CellContext`claimSizeFunction[4.620642731677453], 
          $CellContext`claimSizeFunction[7.882089687318127], 
          $CellContext`claimSizeFunction[3.9103380469809026`], 
          $CellContext`claimSizeFunction[4.77190774968893], 
          $CellContext`claimSizeFunction[4.384889772490499], 
          $CellContext`claimSizeFunction[4.642121252450964], 
          $CellContext`claimSizeFunction[5.388113569545865], 
          $CellContext`claimSizeFunction[3.1630571397559244`], 
          $CellContext`claimSizeFunction[3.9723096148512442`], 
          $CellContext`claimSizeFunction[7.245604391649728], 
          $CellContext`claimSizeFunction[3.799796857264586], 
          $CellContext`claimSizeFunction[2.7718730069691766`], 
          $CellContext`claimSizeFunction[7.235722408060594], 
          $CellContext`claimSizeFunction[8.8594026219393], 
          $CellContext`claimSizeFunction[4.273642019151342], 
          $CellContext`claimSizeFunction[4.276951558435051], 
          $CellContext`claimSizeFunction[5.158273648730728], 
          $CellContext`claimSizeFunction[4.6602359888220555`], 
          $CellContext`claimSizeFunction[
          2.95722833627173]}, $CellContext`lastPropertyValue$$ = \
$CellContext`propertyValue$$; $CellContext`lastYears$$ = $CellContext`years$$; \
$CellContext`lastSafetyLoading$$ = $CellContext`safetyLoading$$; \
$CellContext`lastDeductible$$ = $CellContext`deductible$$}; 
      Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.9418675500997505`*^9, 3.9418676614930553`*^9, 
  3.9418691140686264`*^9, 3.9418696926995335`*^9, 3.9418706311249638`*^9, 
  3.941871463101492*^9, 3.941970557326441*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"bfecdd0f-242e-5c42-b0b4-a0fb6da7545e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Main", " ", "visualization", " ", "with", " ", "an", " ", "additional", 
    " ", "plot"}], "*)"}], 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "is", ",", "ip", ",", "premium", ",", "annualPremium", ",", 
         "breakEvenYears", ",", "paymentsData", ",", "premiumsData", ",", 
         "reserveProcessData", ",", "initialReserve", ",", "claimSizeData", 
         ",", "magnitudeRange"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Set", " ", "initial", " ", "reserve", " ", "as", " ", "20", "%", " ",
          "of", " ", "property", " ", "value"}], "*)"}], 
       RowBox[{
        RowBox[{"initialReserve", "=", 
         RowBox[{"0.2", "*", "propertyValue"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"is", "=", 
         RowBox[{"{", 
          RowBox[{"280", ",", "140"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ip", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"50", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"40", ",", "2"}], "}"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"premium", "=", 
         RowBox[{"calculatePremium", "[", 
          RowBox[{
          "propertyValue", ",", "years", ",", "safetyLoading", ",", 
           "deductible"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"annualPremium", "=", 
         RowBox[{"premium", "/", "years"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"breakEvenYears", "=", 
         RowBox[{"calculateBreakEven", "[", 
          RowBox[{"propertyValue", ",", "annualPremium"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"paymentsData", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"expectedClaimSize", "[", "propertyValue", "]"}], "*", 
            "poissonRate", "*", "t"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "years"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"premiumsData", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"annualPremium", "*", "t"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "years"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Simulate", " ", "reserve", " ", "process"}], "*)"}], 
        RowBox[{"reserveProcessData", "=", 
         RowBox[{"simulateReserveProcess", "[", 
          RowBox[{"initialReserve", ",", "annualPremium", ",", "years"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Cramer", "-", 
          RowBox[{
          "Lundberg", " ", "Reserve", " ", "Process", " ", "Simulation"}]}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"simulateReserveProcess", "[", 
          RowBox[{"initialReserve_", ",", "premiumRate_", ",", "years_"}], 
          "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "claimSizes", ",", "numClaims", ",", "reserveTrajectory", ",", 
             "time"}], "}"}], ",", 
           RowBox[{
            RowBox[{"SeedRandom", "[", "42", "]"}], ";", 
            RowBox[{"(*", 
             RowBox[{"For", " ", "reproducibility"}], "*)"}], 
            RowBox[{"claimSizes", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"claimSizeFunction", "[", 
                RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
              RowBox[{"RandomVariate", "[", 
               RowBox[{"magnitudeDist", ",", "1000"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"numClaims", "=", 
             RowBox[{"RandomVariate", "[", 
              RowBox[{"PoissonDistribution", "[", 
               RowBox[{"poissonRate", "*", "years"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"reserveTrajectory", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"initialReserve", "+", 
                RowBox[{"premiumRate", "*", "t"}], "-", 
                RowBox[{"Total", "[", 
                 RowBox[{"Take", "[", 
                  RowBox[{"claimSizes", ",", 
                   RowBox[{"UpTo", "[", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Accumulate", "[", "claimSizes", "]"}], "<=", 
                    "t"}], ",", "True"}], "]"}], ",", 
                    RowBox[{"Length", "[", "claimSizes", "]"}]}], "]"}], 
                    "]"}]}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "years"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "reserveTrajectory"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Generate", " ", "claim", " ", "size", " ", "data"}], "*)"}], 
        RowBox[{"magnitudeRange", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"1.4", ",", "7.4", ",", "0.1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"claimSizeData", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"claimSizeFunction", "[", 
            RowBox[{"#", ",", "propertyValue"}], "]"}], "&"}], "/@", 
          "magnitudeRange"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Labeled", "[", 
              RowBox[{
               RowBox[{"ListLinePlot", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", "years"}], "]"}], ",", "premiumsData"}],
                     "}"}], "]"}], ",", 
                   RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", "years"}], "]"}], ",", "paymentsData"}],
                     "}"}], "]"}]}], "}"}], ",", 
                 RowBox[{"Axes", "->", "False"}], ",", 
                 RowBox[{"Filling", "->", "0"}], ",", 
                 RowBox[{"Frame", "->", "True"}], ",", 
                 RowBox[{"ImageSize", "->", "is"}], ",", 
                 RowBox[{"PlotMarkers", "->", 
                  RowBox[{"{", 
                   RowBox[{"Automatic", ",", "4"}], "}"}]}], ",", 
                 RowBox[{"PlotRange", "->", "All"}], ",", 
                 RowBox[{"ImagePadding", "->", "ip"}], ",", 
                 RowBox[{"PlotRangePadding", "->", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Scaled", "[", "0.1", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Scaled", "[", "0.05", "]"}]}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"AspectRatio", "->", 
                  RowBox[{"1", "/", "2"}]}], ",", 
                 RowBox[{"FrameLabel", "->", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<Years from inception\>\"", ",", "\"\<Payment $\>\""}],
                    "}"}]}], ",", 
                 RowBox[{"PlotStyle", "->", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "Blue", "}"}], ",", 
                    RowBox[{"{", "Red", "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Text", "[", "\"\<Insurer Payments\>\"", "]"}]}], 
              "]"}], ",", 
             RowBox[{"Labeled", "[", 
              RowBox[{
               RowBox[{"ListLinePlot", "[", 
                RowBox[{
                 RowBox[{"Thread", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"1.4", ",", "7.4", ",", "0.1"}], "]"}], ",", 
                    "claimSizeData"}], "}"}], "]"}], ",", 
                 RowBox[{"Axes", "->", "False"}], ",", 
                 RowBox[{"Filling", "->", "0"}], ",", 
                 RowBox[{"Frame", "->", "True"}], ",", 
                 RowBox[{"ImageSize", "->", "is"}], ",", 
                 RowBox[{"PlotMarkers", "->", 
                  RowBox[{"{", 
                   RowBox[{"Automatic", ",", "4"}], "}"}]}], ",", 
                 RowBox[{"PlotRange", "->", "All"}], ",", 
                 RowBox[{"ImagePadding", "->", "ip"}], ",", 
                 RowBox[{"PlotRangePadding", "->", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Scaled", "[", "0.1", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Scaled", "[", "0.05", "]"}]}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"AspectRatio", "->", 
                  RowBox[{"1", "/", "2"}]}], ",", 
                 RowBox[{"FrameLabel", "->", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Magnitude\>\"", ",", "\"\<Claim Size\>\""}], 
                   "}"}]}], ",", 
                 RowBox[{"PlotStyle", "->", 
                  RowBox[{"{", "Purple", "}"}]}]}], "]"}], ",", 
               RowBox[{
               "Text", "[", "\"\<Claim Size Distribution\>\"", "]"}]}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"TextGrid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<Present Value of Expected Claims\>\"", ",", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<$\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"expectedClaimSize", "[", "propertyValue", "]"}], 
                    "]"}]}], "}"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<Present Value of Expected Premium\>\"", ",", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<$\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"premium", ",", 
                    RowBox[{"{", 
                    RowBox[{"9", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}]}],
                  "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<Annual Premium Needed to Break Even\>\"", ",", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<$\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"annualPremium", ",", 
                    RowBox[{"{", 
                    RowBox[{"9", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}]}],
                  "}"}]}], "}"}], ",", 
              RowBox[{"Frame", "->", "All"}], ",", 
              RowBox[{"ItemSize", "->", 
               RowBox[{"{", 
                RowBox[{"14", ",", "1"}], "}"}]}], ",", 
              RowBox[{"Dividers", "->", "All"}], ",", 
              RowBox[{"Background", "->", 
               RowBox[{"Lighter", "[", 
                RowBox[{"Green", ",", "0.8"}], "]"}]}]}], "]"}], "}"}]}], 
          "}"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Sliders", " ", "and", " ", "Controls"}], "*)"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "propertyValue", ",", "100000", ",", "\"\<Property Value\>\""}], 
        "}"}], ",", "10000", ",", "1000000", ",", "10000", ",", 
       RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
       RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"years", ",", "10", ",", "\"\<Coverage Period (Years)\>\""}], 
        "}"}], ",", "1", ",", "30", ",", "1", ",", 
       RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
       RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"safetyLoading", ",", "0.2", ",", "\"\<Safety Loading\>\""}], 
        "}"}], ",", "0.1", ",", "0.5", ",", "0.05", ",", 
       RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
       RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"deductible", ",", "0.05", ",", "\"\<Deductible\>\""}], "}"}],
        ",", "0.01", ",", "0.20", ",", "0.01", ",", 
       RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
       RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "0.01", ",", "\"\<Damage Coefficient (a)\>\""}], 
        "}"}], ",", "0.001", ",", "0.1", ",", "0.001", ",", 
       RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
       RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"b", ",", "0.5", ",", "\"\<Growth Rate (b)\>\""}], "}"}], ",",
        "0.1", ",", "1", ",", "0.05", ",", 
       RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
       RowBox[{"ImageSize", "->", "Medium"}]}], "}"}]}], "]"}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.9418672794450417`*^9, 3.941867279446354*^9}, {
  3.941867435117569*^9, 3.9418674356032925`*^9}, {3.941867899836151*^9, 
  3.9418679015207157`*^9}, {3.941868133955868*^9, 3.9418681350180664`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"736971a9-66d8-c344-87c9-d5516a00199f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.01, $CellContext`b$$ = 
    0.5, $CellContext`deductible$$ = 0.05, $CellContext`propertyValue$$ = 
    100000, $CellContext`safetyLoading$$ = 0.2, $CellContext`years$$ = 10, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`propertyValue$$], 100000, "Property Value"}, 10000, 
      1000000, 10000, ControlType -> Manipulator}, {{
       Hold[$CellContext`years$$], 10, "Coverage Period (Years)"}, 1, 30, 1, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`safetyLoading$$], 0.2, "Safety Loading"}, 0.1, 0.5, 
      0.05, ControlType -> Manipulator}, {{
       Hold[$CellContext`deductible$$], 0.05, "Deductible"}, 0.01, 0.2, 0.01, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`a$$], 0.01, "Damage Coefficient (a)"}, 0.001, 0.1, 
      0.001, ControlType -> Manipulator}, {{
       Hold[$CellContext`b$$], 0.5, "Growth Rate (b)"}, 0.1, 1, 0.05, 
      ControlType -> Manipulator}}, Typeset`size$$ = {
    421.27039863586424`, {100.14732135337894`, 104.1596750372008}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.01, $CellContext`b$$ = 
        0.5, $CellContext`deductible$$ = 0.05, $CellContext`propertyValue$$ = 
        100000, $CellContext`safetyLoading$$ = 0.2, $CellContext`years$$ = 
        10}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`is$, $CellContext`ip$, $CellContext`premium$, \
$CellContext`annualPremium$, $CellContext`breakEvenYears$, \
$CellContext`paymentsData$, $CellContext`premiumsData$, \
$CellContext`reserveProcessData$, $CellContext`initialReserve$, \
$CellContext`claimSizeData$, $CellContext`magnitudeRange$}, \
$CellContext`initialReserve$ = 
         0.2 $CellContext`propertyValue$$; $CellContext`is$ = {280, 
          140}; $CellContext`ip$ = {{50, 2}, {40, 
          2}}; $CellContext`premium$ = \
$CellContext`calculatePremium[$CellContext`propertyValue$$, \
$CellContext`years$$, $CellContext`safetyLoading$$, \
$CellContext`deductible$$]; $CellContext`annualPremium$ = \
$CellContext`premium$/$CellContext`years$$; $CellContext`breakEvenYears$ = \
$CellContext`calculateBreakEven[$CellContext`propertyValue$$, \
$CellContext`annualPremium$]; $CellContext`paymentsData$ = 
         Table[$CellContext`expectedClaimSize[$CellContext`propertyValue$$] \
$CellContext`poissonRate $CellContext`t, {$CellContext`t, 
            0, $CellContext`years$$}]; $CellContext`premiumsData$ = 
         Table[$CellContext`annualPremium$ $CellContext`t, {$CellContext`t, 
            0, $CellContext`years$$}]; $CellContext`reserveProcessData$ = \
$CellContext`simulateReserveProcess[$CellContext`initialReserve$, \
$CellContext`annualPremium$, $CellContext`years$$]; \
$CellContext`simulateReserveProcess[
           Pattern[$CellContext`initialReserve, 
            Blank[]], 
           Pattern[$CellContext`premiumRate, 
            Blank[]], 
           Pattern[$CellContext`years, 
            Blank[]]] := 
         Module[{$CellContext`claimSizes, $CellContext`numClaims, \
$CellContext`reserveTrajectory, $CellContext`time}, 
           SeedRandom[42]; $CellContext`claimSizes = 
            Map[$CellContext`claimSizeFunction[#, 1]& , 
              
              RandomVariate[$CellContext`magnitudeDist, 
               1000]]; $CellContext`numClaims = RandomVariate[
              
              PoissonDistribution[$CellContext`poissonRate \
$CellContext`years]]; $CellContext`reserveTrajectory = 
            Table[$CellContext`initialReserve + $CellContext`premiumRate \
$CellContext`t - Total[
               Take[$CellContext`claimSizes, 
                UpTo[
                 Min[
                  Count[
                  Accumulate[$CellContext`claimSizes] <= $CellContext`t, 
                   True], 
                  Length[$CellContext`claimSizes]]]]], {$CellContext`t, 
               0, $CellContext`years}]; $CellContext`reserveTrajectory]; \
$CellContext`magnitudeRange$ = 
         Range[1.4, 7.4, 0.1]; $CellContext`claimSizeData$ = 
         Map[$CellContext`claimSizeFunction[#, $CellContext`propertyValue$$]& \
, $CellContext`magnitudeRange$]; Grid[{{
            Labeled[
             ListLinePlot[{
               Thread[{
                 Range[0, $CellContext`years$$], $CellContext`premiumsData$}], 
               Thread[{
                 Range[
                 0, $CellContext`years$$], $CellContext`paymentsData$}]}, 
              Axes -> False, Filling -> 0, Frame -> True, 
              ImageSize -> $CellContext`is$, PlotMarkers -> {Automatic, 4}, 
              PlotRange -> All, ImagePadding -> $CellContext`ip$, 
              PlotRangePadding -> {{Automatic, 
                 Scaled[0.1]}, {Automatic, 
                 Scaled[0.05]}}, AspectRatio -> 1/2, 
              FrameLabel -> {"Years from inception", "Payment $"}, 
              PlotStyle -> {{Blue}, {Red}}], 
             Text["Insurer Payments"]], 
            Labeled[
             ListLinePlot[
              Thread[{
                Range[1.4, 7.4, 0.1], $CellContext`claimSizeData$}], Axes -> 
              False, Filling -> 0, Frame -> True, 
              ImageSize -> $CellContext`is$, PlotMarkers -> {Automatic, 4}, 
              PlotRange -> All, ImagePadding -> $CellContext`ip$, 
              PlotRangePadding -> {{Automatic, 
                 Scaled[0.1]}, {Automatic, 
                 Scaled[0.05]}}, AspectRatio -> 1/2, 
              FrameLabel -> {"Magnitude", "Claim Size"}, 
              PlotStyle -> {Purple}], 
             Text["Claim Size Distribution"]]}, {
            TextGrid[{{"Present Value of Expected Claims", 
               Row[{"$", 
                 NumberForm[
                  $CellContext`expectedClaimSize[$CellContext`propertyValue$$]\
]}]}, {"Present Value of Expected Premium", 
               Row[{"$", 
                 NumberForm[$CellContext`premium$, {9, 2}]}]}, {
              "Annual Premium Needed to Break Even", 
               Row[{"$", 
                 NumberForm[$CellContext`annualPremium$, {9, 2}]}]}}, Frame -> 
             All, ItemSize -> {14, 1}, Dividers -> All, Background -> 
             Lighter[Green, 0.8]]}}]], 
      "Specifications" :> {{{$CellContext`propertyValue$$, 100000, 
          "Property Value"}, 10000, 1000000, 10000, Appearance -> "Labeled", 
         ImageSize -> 
         Medium}, {{$CellContext`years$$, 10, "Coverage Period (Years)"}, 1, 
         30, 1, Appearance -> "Labeled", ImageSize -> 
         Medium}, {{$CellContext`safetyLoading$$, 0.2, "Safety Loading"}, 0.1,
          0.5, 0.05, Appearance -> "Labeled", ImageSize -> 
         Medium}, {{$CellContext`deductible$$, 0.05, "Deductible"}, 0.01, 0.2,
          0.01, Appearance -> "Labeled", ImageSize -> 
         Medium}, {{$CellContext`a$$, 0.01, "Damage Coefficient (a)"}, 0.001, 
         0.1, 0.001, Appearance -> "Labeled", ImageSize -> 
         Medium}, {{$CellContext`b$$, 0.5, "Growth Rate (b)"}, 0.1, 1, 0.05, 
         Appearance -> "Labeled", ImageSize -> Medium}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      688.1655140590667, {120.49490924400395`, 124.5072629278258}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.941867280272768*^9, 3.941867436809452*^9, 
  3.941867903241125*^9, 3.941868136011566*^9, 3.9418706321229553`*^9, 
  3.941871464021517*^9, 3.941970558280121*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"c0359743-5ad1-ef44-84ff-4b98d314ca0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Clear", " ", "any", " ", "existing", " ", "definitions"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "expectedClaimSize", ",", "claimSizeFunction", ",", "calculatePremium", 
      ",", "calculateBreakEven", ",", "simulateReserveProcess"}], "]"}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", "Constants", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meanMagnitude", "=", "4.30784"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"stdDevMagnitude", "=", "1.54993"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"poissonRate", "=", 
     RowBox[{"1", "/", "0.04842"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"magnitudeDist", "=", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"meanMagnitude", ",", "stdDevMagnitude"}], "]"}]}], ";"}], "\n",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "claim", " ", "size", " ", "function"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"claimSizeFunction", "[", 
      RowBox[{
      "magnitude_", ",", "propertyValue_", ",", "damage_", ",", 
       "growthRate_"}], "]"}], ":=", 
     RowBox[{"propertyValue", "*", 
      RowBox[{"(", 
       RowBox[{"damage", "*", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{"growthRate", "*", "magnitude"}], ")"}]}]}], ")"}]}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "expected", " ", "claim", " ", "size", " ", "using", " ", 
     "discrete", " ", "sum"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"expectedClaimSize", "[", 
      RowBox[{"propertyValue_", ",", "damage_", ",", "growthRate_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "magnitudeRange", ",", "probabilities", ",", "claims", ",", "total"}],
         "}"}], ",", 
       RowBox[{
        RowBox[{"magnitudeRange", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"1.4", ",", "7.4", ",", "0.1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"probabilities", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{"magnitudeDist", ",", "#"}], "]"}], "&"}], "/@", 
          "magnitudeRange"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"claims", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"claimSizeFunction", "[", 
            RowBox[{
            "#", ",", "propertyValue", ",", "damage", ",", "growthRate"}], 
            "]"}], "&"}], "/@", "magnitudeRange"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"total", "=", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"claims", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"probabilities", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "magnitudeRange", "]"}]}], "}"}]}], 
           "]"}], "*", "0.1"}]}], ";", "\[IndentingNewLine]", "total"}]}], 
      "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculatePremium", "[", 
      RowBox[{
      "propertyValue_", ",", "years_", ",", "safetyLoading_", ",", 
       "deductible_", ",", "damage_", ",", "growthRate_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "expectedLoss", "}"}], ",", 
       RowBox[{
        RowBox[{"expectedLoss", "=", 
         RowBox[{
          RowBox[{"expectedClaimSize", "[", 
           RowBox[{"propertyValue", ",", "damage", ",", "growthRate"}], "]"}],
           "*", "poissonRate", "*", "years"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"expectedLoss", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", "safetyLoading"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "deductible"}], ")"}]}]}]}], "]"}]}], ";"}], "\n",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculateBreakEven", "[", 
      RowBox[{"propertyValue_", ",", "annualPremium_"}], "]"}], ":=", 
     RowBox[{"propertyValue", "/", "annualPremium"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Simulate", " ", "Reserve", " ", "Process", " ", "with", " ", "Poisson", 
     " ", "Claim", " ", "Arrivals"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"simulateReserveProcess", "[", 
      RowBox[{
      "initialReserve_", ",", "premiumRate_", ",", "years_", ",", 
       "propertyValue_", ",", "damage_", ",", "growthRate_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "totalTime", ",", "claimTimes", ",", "claimSizes", ",", 
         "reserveTrajectory", ",", "premiumAccrued"}], "}"}], ",", 
       RowBox[{
        RowBox[{"totalTime", "=", 
         RowBox[{"years", "*", "365"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"claimTimes", "=", 
         RowBox[{"Accumulate", "[", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"ExponentialDistribution", "[", "poissonRate", "]"}], ",",
             "totalTime"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"claimTimes", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"claimTimes", ",", 
           RowBox[{
            RowBox[{"#", "<=", "totalTime"}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"claimSizes", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"claimSizeFunction", "[", 
            RowBox[{
            "#", ",", "propertyValue", ",", "damage", ",", "growthRate"}], 
            "]"}], "&"}], "/@", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"magnitudeDist", ",", 
            RowBox[{"Length", "[", "claimTimes", "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"reserveTrajectory", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"premiumAccrued", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"t", "=", "1"}], ",", 
          RowBox[{"t", "<=", "totalTime"}], ",", 
          RowBox[{"t", "++"}], ",", 
          RowBox[{
           RowBox[{"premiumAccrued", "+=", 
            RowBox[{"premiumRate", "/", "365"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Round", "[", "claimTimes", "]"}], ",", "t"}], "]"}], 
             ",", 
             RowBox[{
              RowBox[{"premiumAccrued", "-=", 
               RowBox[{"claimSizes", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"claimSizes", "=", 
               RowBox[{"Rest", "[", "claimSizes", "]"}]}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"reserveTrajectory", ",", 
             RowBox[{"initialReserve", "+", "premiumAccrued"}]}], "]"}], 
           ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
        "reserveTrajectory"}]}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Main", " ", "visualization"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lastPropertyValue", "=", "100000"}], ",", 
       RowBox[{"lastYears", "=", "10"}], ",", 
       RowBox[{"lastSafetyLoading", "=", "0.2"}], ",", 
       RowBox[{"lastDeductible", "=", "0.05"}], ",", 
       RowBox[{"lastDamage", "=", "0.01"}], ",", 
       RowBox[{"lastGrowthRate", "=", "0.5"}]}], "}"}], ",", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "is", ",", "ip", ",", "premium", ",", "annualPremium", ",", 
           "breakEvenYears", ",", "paymentsData", ",", "premiumsData", ",", 
           "reserveData", ",", "claimSizePlot"}], "}"}], ",", 
         RowBox[{
          RowBox[{"is", "=", 
           RowBox[{"{", 
            RowBox[{"280", ",", "140"}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ip", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"50", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"40", ",", "2"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"premium", "=", 
           RowBox[{"calculatePremium", "[", 
            RowBox[{
            "propertyValue", ",", "years", ",", "safetyLoading", ",", 
             "deductible", ",", "damage", ",", "growthRate"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"annualPremium", "=", 
           RowBox[{"premium", "/", "years"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"breakEvenYears", "=", 
           RowBox[{"calculateBreakEven", "[", 
            RowBox[{"propertyValue", ",", "annualPremium"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"paymentsData", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"expectedClaimSize", "[", 
               RowBox[{"propertyValue", ",", "damage", ",", "growthRate"}], 
               "]"}], "*", "poissonRate", "*", "t"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "years"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"premiumsData", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"annualPremium", "*", "t"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "years"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"reserveData", "=", 
           RowBox[{"simulateReserveProcess", "[", 
            RowBox[{
            "initialReserve", ",", "annualPremium", ",", "years", ",", 
             "propertyValue", ",", "damage", ",", "growthRate"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"claimSizePlot", "=", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"claimSizeFunction", "[", 
               RowBox[{
               "x", ",", "propertyValue", ",", "damage", ",", "growthRate"}], 
               "]"}], "*", 
              RowBox[{"PDF", "[", 
               RowBox[{"magnitudeDist", ",", "x"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "1.4", ",", "7.4"}], "}"}], ",", 
             RowBox[{"Axes", "->", "False"}], ",", 
             RowBox[{"Frame", "->", "True"}], ",", 
             RowBox[{"ImageSize", "->", "is"}], ",", 
             RowBox[{"FrameLabel", "->", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Magnitude\>\"", ",", "\"\<Claim Size Density\>\""}], 
               "}"}]}], ",", 
             RowBox[{"PlotStyle", "->", "Blue"}], ",", 
             RowBox[{"Filling", "->", "Axis"}], ",", 
             RowBox[{"AspectRatio", "->", 
              RowBox[{"1", "/", "2"}]}], ",", 
             RowBox[{"PlotRange", "->", "All"}], ",", 
             RowBox[{"PlotLabel", "->", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Claim Size Distribution (Damage: \>\"", ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"damage", ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", 
                 "\"\<, Growth Rate: \>\"", ",", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"growthRate", ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", 
                 "\"\<)\>\""}], "}"}], "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Labeled", "[", 
                RowBox[{
                 RowBox[{"ListLinePlot", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", "years"}], "]"}], ",", "premiumsData"}],
                     "}"}], "]"}], ",", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"0", ",", "years"}], "]"}], ",", "paymentsData"}],
                     "}"}], "]"}]}], "}"}], ",", 
                   RowBox[{"Axes", "->", "False"}], ",", 
                   RowBox[{"Filling", "->", "0"}], ",", 
                   RowBox[{"Frame", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "is"}], ",", 
                   RowBox[{"PlotMarkers", "->", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "4"}], "}"}]}], ",", 
                   RowBox[{"PlotRange", "->", "All"}], ",", 
                   RowBox[{"ImagePadding", "->", "ip"}], ",", 
                   RowBox[{"PlotRangePadding", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Scaled", "[", "0.1", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", 
                    RowBox[{"Scaled", "[", "0.05", "]"}]}], "}"}]}], "}"}]}], 
                   ",", 
                   RowBox[{"AspectRatio", "->", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                   RowBox[{"FrameLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Years from inception\>\"", ",", 
                    "\"\<Payment $\>\""}], "}"}]}], ",", 
                   RowBox[{"PlotStyle", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "Blue", "}"}], ",", 
                    RowBox[{"{", "Red", "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Text", "@", "\"\<Insurer Payments\>\""}]}], "]"}], 
               ",", 
               RowBox[{"Labeled", "[", 
                RowBox[{
                 RowBox[{"ListLinePlot", "[", 
                  RowBox[{
                   RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "reserveData", "]"}], "]"}], ",", 
                    "reserveData"}], "}"}], "]"}], ",", 
                   RowBox[{"Axes", "->", "False"}], ",", 
                   RowBox[{"Filling", "->", "Axis"}], ",", 
                   RowBox[{"Frame", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "is"}], ",", 
                   RowBox[{"PlotStyle", "->", "Green"}], ",", 
                   RowBox[{"PlotRange", "->", "All"}], ",", 
                   RowBox[{"AspectRatio", "->", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                   RowBox[{"FrameLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Days\>\"", ",", "\"\<Reserve Amount\>\""}], 
                    "}"}]}], ",", 
                   RowBox[{
                   "PlotLabel", "->", 
                    "\"\<Cramer-Lundberg Reserve Process\>\""}]}], "]"}], ",", 
                 RowBox[{"Text", "@", "\"\<Reserve Process\>\""}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", "claimSizePlot", "}"}]}], "}"}], "]"}]}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "propertyValue", ",", "100000", ",", "\"\<Property Value\>\""}], 
          "}"}], ",", "10000", ",", "1000000", ",", "10000", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "years", ",", "10", ",", "\"\<Coverage Period (Years)\>\""}], "}"}],
          ",", "1", ",", "30", ",", "1", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "safetyLoading", ",", "0.2", ",", "\"\<Safety Loading\>\""}], "}"}],
          ",", "0.1", ",", "0.5", ",", "0.05", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"deductible", ",", "0.05", ",", "\"\<Deductible\>\""}], 
          "}"}], ",", "0.01", ",", "0.20", ",", "0.01", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"damage", ",", "0.01", ",", "\"\<Damage\>\""}], "}"}], ",", 
         "0.005", ",", "0.05", ",", "0.005", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"growthRate", ",", "0.5", ",", "\"\<Growth Rate\>\""}], 
          "}"}], ",", "0.1", ",", "1", ",", "0.1", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "initialReserve", ",", "100000", ",", "\"\<Initial Reserve\>\""}], 
          "}"}], ",", "10000", ",", "1000000", ",", "10000", ",", 
         RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "}"}], ",", 
       RowBox[{"Initialization", ":>", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"lastPropertyValue", "=", "propertyValue"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"lastYears", "=", "years"}], ";", 
          RowBox[{"lastSafetyLoading", "=", "safetyLoading"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"lastDeductible", "=", "deductible"}], ";", 
          RowBox[{"lastDamage", "=", "damage"}], ";", "\[IndentingNewLine]", 
          RowBox[{"lastGrowthRate", "=", "growthRate"}]}], ")"}]}], ",", 
       RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]}], "]"}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.941870022744381*^9, 3.9418700227543335`*^9}, {
  3.9418701707818375`*^9, 3.9418701712427483`*^9}, {3.9418703048999805`*^9, 
  3.9418703079775505`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"36f25f5e-d862-bd4e-a8be-24da51c4662f"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`lastPropertyValue$$ = 
  100000, $CellContext`lastYears$$ = 10, $CellContext`lastSafetyLoading$$ = 
  0.2, $CellContext`lastDeductible$$ = 0.05, $CellContext`lastDamage$$ = 
  0.01, $CellContext`lastGrowthRate$$ = 0.5}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`damage$$ = 
     0.01, $CellContext`deductible$$ = 0.05, $CellContext`growthRate$$ = 
     0.5, $CellContext`initialReserve$$ = 
     100000, $CellContext`propertyValue$$ = 
     100000, $CellContext`safetyLoading$$ = 0.2, $CellContext`years$$ = 10, 
     Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`propertyValue$$], 100000, "Property Value"}, 10000, 
       1000000, 10000, ControlType -> Manipulator}, {{
        Hold[$CellContext`years$$], 10, "Coverage Period (Years)"}, 1, 30, 1, 
       ControlType -> Manipulator}, {{
        Hold[$CellContext`safetyLoading$$], 0.2, "Safety Loading"}, 0.1, 0.5, 
       0.05, ControlType -> Manipulator}, {{
        Hold[$CellContext`deductible$$], 0.05, "Deductible"}, 0.01, 0.2, 0.01,
        ControlType -> Manipulator}, {{
        Hold[$CellContext`damage$$], 0.01, "Damage"}, 0.005, 0.05, 0.005, 
       ControlType -> Manipulator}, {{
        Hold[$CellContext`growthRate$$], 0.5, "Growth Rate"}, 0.1, 1, 0.1, 
       ControlType -> Manipulator}, {{
        Hold[$CellContext`initialReserve$$], 100000, "Initial Reserve"}, 
       10000, 1000000, 10000, ControlType -> Manipulator}}, Typeset`size$$ = {
     395.64, {104.71702628308907`, 108.72937996691093`}}, Typeset`update$$ = 
     0, Typeset`initDone$$, Typeset`skipInitDone$$ = False, 
     Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {$CellContext`damage$$ = 
         0.01, $CellContext`deductible$$ = 0.05, $CellContext`growthRate$$ = 
         0.5, $CellContext`initialReserve$$ = 
         100000, $CellContext`propertyValue$$ = 
         100000, $CellContext`safetyLoading$$ = 0.2, $CellContext`years$$ = 
         10}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$, 
         Typeset`keyframeActionsQ$$, Typeset`keyframeList$$}, "Body" :> 
       Module[{$CellContext`is$, $CellContext`ip$, $CellContext`premium$, \
$CellContext`annualPremium$, $CellContext`breakEvenYears$, \
$CellContext`paymentsData$, $CellContext`premiumsData$, \
$CellContext`reserveData$, $CellContext`claimSizePlot$}, $CellContext`is$ = {
           280, 140}; $CellContext`ip$ = {{50, 2}, {40, 
           2}}; $CellContext`premium$ = \
$CellContext`calculatePremium[$CellContext`propertyValue$$, \
$CellContext`years$$, $CellContext`safetyLoading$$, \
$CellContext`deductible$$, $CellContext`damage$$, $CellContext`growthRate$$]; \
$CellContext`annualPremium$ = $CellContext`premium$/$CellContext`years$$; \
$CellContext`breakEvenYears$ = \
$CellContext`calculateBreakEven[$CellContext`propertyValue$$, \
$CellContext`annualPremium$]; $CellContext`paymentsData$ = 
          Table[$CellContext`expectedClaimSize[$CellContext`propertyValue$$, \
$CellContext`damage$$, $CellContext`growthRate$$] $CellContext`poissonRate \
$CellContext`t, {$CellContext`t, 
             0, $CellContext`years$$}]; $CellContext`premiumsData$ = 
          Table[$CellContext`annualPremium$ $CellContext`t, {$CellContext`t, 
             0, $CellContext`years$$}]; $CellContext`reserveData$ = \
$CellContext`simulateReserveProcess[$CellContext`initialReserve$$, \
$CellContext`annualPremium$, $CellContext`years$$, \
$CellContext`propertyValue$$, $CellContext`damage$$, \
$CellContext`growthRate$$]; $CellContext`claimSizePlot$ = 
          Plot[$CellContext`claimSizeFunction[$CellContext`x, \
$CellContext`propertyValue$$, $CellContext`damage$$, \
$CellContext`growthRate$$] 
            PDF[$CellContext`magnitudeDist, $CellContext`x], {$CellContext`x, 
             1.4, 7.4}, Axes -> False, Frame -> True, 
            ImageSize -> $CellContext`is$, 
            FrameLabel -> {"Magnitude", "Claim Size Density"}, PlotStyle -> 
            Blue, Filling -> Axis, AspectRatio -> 1/2, PlotRange -> All, 
            PlotLabel -> Row[{"Claim Size Distribution (Damage: ", 
               NumberForm[$CellContext`damage$$, {2, 2}], ", Growth Rate: ", 
               NumberForm[$CellContext`growthRate$$, {2, 2}], ")"}]]; Grid[{{
             Labeled[
              ListLinePlot[{
                Thread[{
                  Range[
                  0, $CellContext`years$$], $CellContext`premiumsData$}], 
                Thread[{
                  Range[
                  0, $CellContext`years$$], $CellContext`paymentsData$}]}, 
               Axes -> False, Filling -> 0, Frame -> True, 
               ImageSize -> $CellContext`is$, PlotMarkers -> {Automatic, 4}, 
               PlotRange -> All, ImagePadding -> $CellContext`ip$, 
               PlotRangePadding -> {{Automatic, 
                  Scaled[0.1]}, {Automatic, 
                  Scaled[0.05]}}, AspectRatio -> 1/2, 
               FrameLabel -> {"Years from inception", "Payment $"}, 
               PlotStyle -> {{Blue}, {Red}}], 
              Text["Insurer Payments"]], 
             Labeled[
              ListLinePlot[
               Thread[{
                 Range[
                  
                  Length[$CellContext`reserveData$]], \
$CellContext`reserveData$}], Axes -> False, Filling -> Axis, Frame -> True, 
               ImageSize -> $CellContext`is$, PlotStyle -> Green, PlotRange -> 
               All, AspectRatio -> 1/2, 
               FrameLabel -> {"Days", "Reserve Amount"}, PlotLabel -> 
               "Cramer-Lundberg Reserve Process"], 
              Text["Reserve Process"]]}, {$CellContext`claimSizePlot$}}]], 
       "Specifications" :> {{{$CellContext`propertyValue$$, 100000, 
           "Property Value"}, 10000, 1000000, 10000, Appearance -> "Labeled", 
          ImageSize -> 
          Medium}, {{$CellContext`years$$, 10, "Coverage Period (Years)"}, 1, 
          30, 1, Appearance -> "Labeled", ImageSize -> 
          Medium}, {{$CellContext`safetyLoading$$, 0.2, "Safety Loading"}, 
          0.1, 0.5, 0.05, Appearance -> "Labeled", ImageSize -> 
          Medium}, {{$CellContext`deductible$$, 0.05, "Deductible"}, 0.01, 
          0.2, 0.01, Appearance -> "Labeled", ImageSize -> 
          Medium}, {{$CellContext`damage$$, 0.01, "Damage"}, 0.005, 0.05, 
          0.005, Appearance -> "Labeled", ImageSize -> 
          Medium}, {{$CellContext`growthRate$$, 0.5, "Growth Rate"}, 0.1, 1, 
          0.1, Appearance -> "Labeled", ImageSize -> 
          Medium}, {{$CellContext`initialReserve$$, 100000, 
           "Initial Reserve"}, 10000, 1000000, 10000, Appearance -> "Labeled",
           ImageSize -> Medium}}, "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{
       662.5351154232026, {125.06461417371409`, 129.07696785753592`}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({$CellContext`calculatePremium[
          Pattern[$CellContext`propertyValue, 
           Blank[]], 
          Pattern[$CellContext`years, 
           Blank[]], 
          Pattern[$CellContext`safetyLoading, 
           Blank[]], 
          Pattern[$CellContext`deductible, 
           Blank[]], 
          Pattern[$CellContext`damage, 
           Blank[]], 
          Pattern[$CellContext`growthRate, 
           Blank[]]] := 
        Module[{$CellContext`expectedLoss}, $CellContext`expectedLoss = \
$CellContext`expectedClaimSize[$CellContext`propertyValue, \
$CellContext`damage, $CellContext`growthRate] $CellContext`poissonRate \
$CellContext`years; $CellContext`expectedLoss (
            1 + $CellContext`safetyLoading) (
            1 - $CellContext`deductible)], $CellContext`safetyLoading$$ = 
        0.2, $CellContext`expectedClaimSize[
          Pattern[$CellContext`propertyValue, 
           Blank[]], 
          Pattern[$CellContext`damage, 
           Blank[]], 
          Pattern[$CellContext`growthRate, 
           Blank[]]] := 
        Module[{$CellContext`magnitudeRange, $CellContext`probabilities, \
$CellContext`claims, $CellContext`total}, $CellContext`magnitudeRange = 
           Range[1.4, 7.4, 0.1]; $CellContext`probabilities = 
           Map[PDF[$CellContext`magnitudeDist, #]& , \
$CellContext`magnitudeRange]; $CellContext`claims = 
           Map[$CellContext`claimSizeFunction[#, $CellContext`propertyValue, \
$CellContext`damage, $CellContext`growthRate]& , $CellContext`magnitudeRange]; \
$CellContext`total = 
           Sum[Part[$CellContext`claims, $CellContext`i] 
              Part[$CellContext`probabilities, $CellContext`i], \
{$CellContext`i, 1, 
               Length[$CellContext`magnitudeRange]}] 
            0.1; $CellContext`total], $CellContext`magnitudeDist = 
        NormalDistribution[4.30784, 1.54993], $CellContext`claimSizeFunction[
          Pattern[$CellContext`magnitude, 
           Blank[]], 
          Pattern[$CellContext`propertyValue, 
           Blank[]], 
          Pattern[$CellContext`damage, 
           Blank[]], 
          Pattern[$CellContext`growthRate, 
           Blank[]]] := $CellContext`propertyValue ($CellContext`damage 
          E^($CellContext`growthRate $CellContext`magnitude)), \
$CellContext`poissonRate = 
        20.652622883106154`, $CellContext`calculateBreakEven[
          Pattern[$CellContext`propertyValue, 
           Blank[]], 
          Pattern[$CellContext`annualPremium, 
           
           Blank[]]] := \
$CellContext`propertyValue/$CellContext`annualPremium, $CellContext`t = 
        3651, $CellContext`simulateReserveProcess[
          Pattern[$CellContext`initialReserve, 
           Blank[]], 
          Pattern[$CellContext`premiumRate, 
           Blank[]], 
          Pattern[$CellContext`years, 
           Blank[]], 
          Pattern[$CellContext`propertyValue, 
           Blank[]], 
          Pattern[$CellContext`damage, 
           Blank[]], 
          Pattern[$CellContext`growthRate, 
           Blank[]]] := 
        Module[{$CellContext`totalTime, $CellContext`claimTimes, \
$CellContext`claimSizes, $CellContext`reserveTrajectory, \
$CellContext`premiumAccrued}, $CellContext`totalTime = $CellContext`years 
            365; $CellContext`claimTimes = Accumulate[
             RandomVariate[
              
              ExponentialDistribution[$CellContext`poissonRate], \
$CellContext`totalTime]]; $CellContext`claimTimes = 
           Select[$CellContext`claimTimes, # <= $CellContext`totalTime& ]; \
$CellContext`claimSizes = 
           Map[$CellContext`claimSizeFunction[#, $CellContext`propertyValue, \
$CellContext`damage, $CellContext`growthRate]& , 
             RandomVariate[$CellContext`magnitudeDist, 
              
              Length[$CellContext`claimTimes]]]; \
$CellContext`reserveTrajectory = {}; $CellContext`premiumAccrued = 0; 
          For[$CellContext`t = 1, $CellContext`t <= $CellContext`totalTime, 
            Increment[$CellContext`t], 
            AddTo[$CellContext`premiumAccrued, $CellContext`premiumRate/365]; 
            If[
              MemberQ[
               Round[$CellContext`claimTimes], $CellContext`t], 
              SubtractFrom[$CellContext`premiumAccrued, 
                Part[$CellContext`claimSizes, 1]]; $CellContext`claimSizes = 
               Rest[$CellContext`claimSizes]]; 
            AppendTo[$CellContext`reserveTrajectory, \
$CellContext`initialReserve + $CellContext`premiumAccrued]; 
            Null]; $CellContext`reserveTrajectory], $CellContext`claimSizes = {
          $CellContext`claimSizeFunction[5.3302556655754465`], 
          $CellContext`claimSizeFunction[4.829100251191005], 
          $CellContext`claimSizeFunction[4.932859169620678], 
          $CellContext`claimSizeFunction[4.866110125172176], 
          $CellContext`claimSizeFunction[5.864996521232565], 
          $CellContext`claimSizeFunction[4.940959518316636], 
          $CellContext`claimSizeFunction[2.9863585379837647`], 
          $CellContext`claimSizeFunction[4.217596818469123], 
          $CellContext`claimSizeFunction[3.925186737459065], 
          $CellContext`claimSizeFunction[3.1262704760626683`], 
          $CellContext`claimSizeFunction[3.737803602028109], 
          $CellContext`claimSizeFunction[6.0392030667474685`], 
          $CellContext`claimSizeFunction[3.16162482487245], 
          $CellContext`claimSizeFunction[3.1863460548465667`], 
          $CellContext`claimSizeFunction[4.9723778228911115`], 
          $CellContext`claimSizeFunction[5.895762348980908], 
          $CellContext`claimSizeFunction[2.8410288601163023`], 
          $CellContext`claimSizeFunction[4.798774741116922], 
          $CellContext`claimSizeFunction[0.41905743154553754`], 
          $CellContext`claimSizeFunction[4.95216669432067], 
          $CellContext`claimSizeFunction[2.9174957814910893`], 
          $CellContext`claimSizeFunction[4.400723694912925], 
          $CellContext`claimSizeFunction[3.5565244798086733`], 
          $CellContext`claimSizeFunction[7.1355582353471005`], 
          $CellContext`claimSizeFunction[5.156476424104946], 
          $CellContext`claimSizeFunction[4.995878724981018], 
          $CellContext`claimSizeFunction[3.7200120402200136`], 
          $CellContext`claimSizeFunction[6.435074015628803], 
          $CellContext`claimSizeFunction[2.3436336305730743`], 
          $CellContext`claimSizeFunction[7.653836490868423], 
          $CellContext`claimSizeFunction[5.306591589154186], 
          $CellContext`claimSizeFunction[5.924564388398983], 
          $CellContext`claimSizeFunction[4.786434244654924], 
          $CellContext`claimSizeFunction[5.823726694870194], 
          $CellContext`claimSizeFunction[4.401365485557315], 
          $CellContext`claimSizeFunction[2.5179327916432133`], 
          $CellContext`claimSizeFunction[1.9213754874514803`], 
          $CellContext`claimSizeFunction[5.425657838876285], 
          $CellContext`claimSizeFunction[3.550945569905232], 
          $CellContext`claimSizeFunction[5.32558115599835], 
          $CellContext`claimSizeFunction[4.428837050056689], 
          $CellContext`claimSizeFunction[2.156435009804529], 
          $CellContext`claimSizeFunction[4.9479869040789675`], 
          $CellContext`claimSizeFunction[5.163060368227753], 
          $CellContext`claimSizeFunction[5.66754808174411], 
          $CellContext`claimSizeFunction[6.096090912946224], 
          $CellContext`claimSizeFunction[4.338222576896621], 
          $CellContext`claimSizeFunction[4.737764894329358], 
          $CellContext`claimSizeFunction[7.960976027560964], 
          $CellContext`claimSizeFunction[4.467875561740092], 
          $CellContext`claimSizeFunction[3.625396414021566], 
          $CellContext`claimSizeFunction[3.1658917558363564`], 
          $CellContext`claimSizeFunction[1.4878458012248679`], 
          $CellContext`claimSizeFunction[4.771508956738808], 
          $CellContext`claimSizeFunction[3.232975649961768], 
          $CellContext`claimSizeFunction[3.6642899891157796`], 
          $CellContext`claimSizeFunction[4.90024176339719], 
          $CellContext`claimSizeFunction[4.85951160676925], 
          $CellContext`claimSizeFunction[1.966640528870895], 
          $CellContext`claimSizeFunction[2.3844851578121258`], 
          $CellContext`claimSizeFunction[4.697062619437744], 
          $CellContext`claimSizeFunction[3.144715967346495], 
          $CellContext`claimSizeFunction[4.28054870931122], 
          $CellContext`claimSizeFunction[5.932642086490023], 
          $CellContext`claimSizeFunction[3.8308229786813053`], 
          $CellContext`claimSizeFunction[5.142301013922833], 
          $CellContext`claimSizeFunction[2.951065022907035], 
          $CellContext`claimSizeFunction[4.996445550375637], 
          $CellContext`claimSizeFunction[4.55694459387221], 
          $CellContext`claimSizeFunction[1.9130271365991836`], 
          $CellContext`claimSizeFunction[6.185116334240377], 
          $CellContext`claimSizeFunction[4.23895767478118], 
          $CellContext`claimSizeFunction[7.045994895956735], 
          $CellContext`claimSizeFunction[2.672900520648648], 
          $CellContext`claimSizeFunction[2.2533199498836964`], 
          $CellContext`claimSizeFunction[3.494442170089101], 
          $CellContext`claimSizeFunction[2.719545759475514], 
          $CellContext`claimSizeFunction[2.364949564832634], 
          $CellContext`claimSizeFunction[5.248479617785776], 
          $CellContext`claimSizeFunction[4.976620347930907], 
          $CellContext`claimSizeFunction[2.0433313649249154`], 
          $CellContext`claimSizeFunction[4.620642731677453], 
          $CellContext`claimSizeFunction[7.882089687318127], 
          $CellContext`claimSizeFunction[3.9103380469809026`], 
          $CellContext`claimSizeFunction[4.77190774968893], 
          $CellContext`claimSizeFunction[4.384889772490499], 
          $CellContext`claimSizeFunction[4.642121252450964], 
          $CellContext`claimSizeFunction[5.388113569545865], 
          $CellContext`claimSizeFunction[3.1630571397559244`], 
          $CellContext`claimSizeFunction[3.9723096148512442`], 
          $CellContext`claimSizeFunction[7.245604391649728], 
          $CellContext`claimSizeFunction[3.799796857264586], 
          $CellContext`claimSizeFunction[2.7718730069691766`], 
          $CellContext`claimSizeFunction[7.235722408060594], 
          $CellContext`claimSizeFunction[8.8594026219393], 
          $CellContext`claimSizeFunction[4.273642019151342], 
          $CellContext`claimSizeFunction[4.276951558435051], 
          $CellContext`claimSizeFunction[5.158273648730728], 
          $CellContext`claimSizeFunction[4.6602359888220555`], 
          $CellContext`claimSizeFunction[
          2.95722833627173]}, $CellContext`lastPropertyValue$$ = \
$CellContext`propertyValue$$; $CellContext`lastYears$$ = $CellContext`years$$; \
$CellContext`lastSafetyLoading$$ = $CellContext`safetyLoading$$; \
$CellContext`lastDeductible$$ = $CellContext`deductible$$; \
$CellContext`lastDamage$$ = $CellContext`damage$$; \
$CellContext`lastGrowthRate$$ = $CellContext`growthRate$$}; 
      Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.9418700234545784`*^9, 3.94187018862438*^9, 
  3.9418703116371136`*^9, 3.941870632371977*^9, 3.9418714642716312`*^9, 
  3.941970558524887*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"6fc30eef-9926-c140-9537-ea59ae6b90af"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 461},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.7 Inherited,
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"485274b5-72c0-0140-85bb-240b5732e277"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 226, 4, 67, "Title",ExpressionUUID->"f256d4ea-5a4a-5743-98cb-777f31ba1990"],
Cell[805, 28, 175, 3, 21, "Author",ExpressionUUID->"8f8098d8-83b2-3f4a-b858-092eaa0a8be7"],
Cell[CellGroupData[{
Cell[1005, 35, 158, 3, 46, "Section",ExpressionUUID->"63949002-80ff-1543-8992-6d5b6b41bbce"],
Cell[1166, 40, 270, 7, 21, "Input",ExpressionUUID->"67220f13-cddd-5648-9c1d-b06c78f3a9bd"],
Cell[CellGroupData[{
Cell[1461, 51, 180, 3, 21, "Input",ExpressionUUID->"01f13e77-113b-ad4b-87cf-51f4643a30d0"],
Cell[1644, 56, 122955, 2519, 398, "Output",ExpressionUUID->"51ed4496-b654-5840-8410-e5b399f80803"]
}, Open  ]],
Cell[124614, 2578, 194, 4, 23, "Text",ExpressionUUID->"468885d6-8174-344e-b8ac-e9e7c05fd6af"],
Cell[CellGroupData[{
Cell[124833, 2586, 256, 6, 21, "Input",ExpressionUUID->"8951e9c1-fd05-4a48-80ed-5b1a7311e3c1"],
Cell[125092, 2594, 36924, 688, 398, "Output",ExpressionUUID->"160bd126-33ee-5a40-88ae-0343ce938168"]
}, Open  ]],
Cell[162031, 3285, 192, 4, 23, "Text",ExpressionUUID->"6c9885b2-0c56-754c-a801-cfa7f5e482f2"],
Cell[CellGroupData[{
Cell[162248, 3293, 252, 6, 21, "Input",ExpressionUUID->"3b795995-6ac7-8645-9f08-231dbd0b8399"],
Cell[162503, 3301, 37246, 694, 398, "Output",ExpressionUUID->"a52dad6f-06be-ba42-9ab1-6d6153216793"]
}, Open  ]],
Cell[199764, 3998, 189, 4, 23, "Text",ExpressionUUID->"a93989af-2e6f-394b-92fc-7ffb98631d55"],
Cell[CellGroupData[{
Cell[199978, 4006, 251, 6, 21, "Input",ExpressionUUID->"365704e5-ae87-c94a-af00-9b955544a9ae"],
Cell[200232, 4014, 52994, 882, 398, "Output",ExpressionUUID->"7c549c7d-11f7-1e46-9d04-c717e11a86cc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253275, 4902, 182, 3, 46, "Section",ExpressionUUID->"ca63e734-d114-1f48-9386-91b1bc37ce53"],
Cell[253460, 4907, 273, 6, 21, "Input",ExpressionUUID->"ebf1bc4a-aa61-664c-a751-7cc755650fd9"],
Cell[CellGroupData[{
Cell[253758, 4917, 143, 2, 21, "Input",ExpressionUUID->"8d189ffd-6ef8-d24d-a378-70ed6d8e998e"],
Cell[253904, 4921, 937, 14, 35, "Output",ExpressionUUID->"47607a32-9f09-ee44-b666-b510c69cf11c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254878, 4940, 274, 6, 21, "Input",ExpressionUUID->"2cd23b1d-b204-1247-893f-021252b3868a"],
Cell[255155, 4948, 2465, 55, 49, "Output",ExpressionUUID->"0d291f5e-e35b-8a45-8f8d-14290c7f5c85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257657, 5008, 224, 5, 21, "Input",ExpressionUUID->"77445a62-9e80-c744-95b3-a7de32fdb24f"],
Cell[257884, 5015, 3331, 103, 49, "Output",ExpressionUUID->"fd0f31fc-6f8b-2848-afd0-f2cf048b88e3"]
}, Open  ]],
Cell[261230, 5121, 208, 4, 23, "Text",ExpressionUUID->"21726e84-5598-6045-9183-cdd550e06798"],
Cell[CellGroupData[{
Cell[261463, 5129, 249, 6, 21, "Input",ExpressionUUID->"a8868159-aa44-0648-805f-d41f7ff66a2a"],
Cell[261715, 5137, 938, 14, 35, "Output",ExpressionUUID->"79cb23d8-cf99-364c-8093-3b15df329738"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262690, 5156, 154, 2, 21, "Input",ExpressionUUID->"e51154dc-6794-6e43-9f3c-638bf0f28dd0"],
Cell[262847, 5160, 346, 5, 23, "Output",ExpressionUUID->"1a8d85e4-88b7-d445-83e8-a006b2cd1d2a"]
}, Open  ]],
Cell[263208, 5168, 308, 7, 34, "Text",ExpressionUUID->"8f80acbf-f215-4243-811f-49a7394fb4cf"],
Cell[CellGroupData[{
Cell[263541, 5179, 420, 9, 33, "Input",ExpressionUUID->"bbfa1d62-982f-d348-801e-9b533068c6e7"],
Cell[263964, 5190, 264, 3, 23, "Output",ExpressionUUID->"cf5c1290-5e54-7a4f-92a7-0e8c155f63c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264265, 5198, 249, 6, 21, "Input",ExpressionUUID->"f52a6958-2873-1b45-87b8-4b9d1a1ac042"],
Cell[264517, 5206, 814, 13, 23, "Output",ExpressionUUID->"4fc36beb-0c0a-b24d-8c26-53a6f8c310c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265368, 5224, 154, 2, 21, "Input",ExpressionUUID->"1f74827e-06e4-0d45-9042-5ed4a7d7ad5a"],
Cell[265525, 5228, 493, 11, 18, "Message",ExpressionUUID->"fa7d2583-62e5-5c49-ba4e-91fa43589726"],
Cell[266021, 5241, 316, 5, 23, "Output",ExpressionUUID->"e7a558af-6572-1c4c-87c7-8c5f6d4969d5"]
}, Open  ]],
Cell[266352, 5249, 324, 7, 34, "Text",ExpressionUUID->"ae19c79b-0f73-644f-9b80-12c576fbc1fa"],
Cell[CellGroupData[{
Cell[266701, 5260, 395, 9, 33, "Input",ExpressionUUID->"e6efb48f-f4d1-284d-a92f-a56dc54d4b3a"],
Cell[267099, 5271, 262, 3, 23, "Output",ExpressionUUID->"4c906da1-8891-8140-872e-22983f04cc35"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[267410, 5280, 173, 3, 46, "Section",ExpressionUUID->"3a4dbdf4-6db5-0246-a7b5-b1022f93b6bd"],
Cell[267586, 5285, 423, 13, 23, "Text",ExpressionUUID->"8baf8fec-7b75-a244-98ee-1dd024752fab"],
Cell[268012, 5300, 251, 4, 21, "Item",ExpressionUUID->"9543234c-d6cc-cc46-9fd2-0cb5b29a5dd2"],
Cell[268266, 5306, 238, 4, 21, "Item",ExpressionUUID->"901d141b-83ea-4e49-9ebe-42f1f14b98d5"],
Cell[268507, 5312, 250, 6, 21, "Item",ExpressionUUID->"ef863508-1d29-da48-9506-cde2ea49ce41"],
Cell[268760, 5320, 422, 12, 21, "Item",ExpressionUUID->"a1a4bc13-2c1d-1946-84f7-bf812c3d035e"],
Cell[269185, 5334, 267, 5, 23, "Text",ExpressionUUID->"5ca4b3de-b5b2-cf44-9bfe-57e5852a0998"],
Cell[269455, 5341, 402, 10, 46, "Input",ExpressionUUID->"4692aca4-d38f-4e4d-a6ab-dc9fba410301"],
Cell[269860, 5353, 384, 9, 33, "Input",ExpressionUUID->"13b654a7-70dc-2649-bd88-b6010764cf4c"],
Cell[270247, 5364, 486, 14, 23, "Text",ExpressionUUID->"8368269f-aeba-554b-b726-763b4f7b50f4"],
Cell[270736, 5380, 357, 8, 33, "Input",ExpressionUUID->"90a929b5-d9cb-2644-97d6-fe439c0551e5"],
Cell[271096, 5390, 701, 19, 38, "Text",ExpressionUUID->"7e30c276-857b-204a-a151-f6d802b08665"],
Cell[271800, 5411, 346, 7, 21, "Input",ExpressionUUID->"61cf144e-6c93-2244-931b-651c7b46d220"],
Cell[272149, 5420, 258, 6, 23, "Text",ExpressionUUID->"d2405dd6-9e50-744a-a837-efeb6e96a92b"],
Cell[272410, 5428, 220, 5, 21, "Item",ExpressionUUID->"f174ead7-a9e9-d949-8da4-086636066b28"],
Cell[CellGroupData[{
Cell[272655, 5437, 224, 5, 21, "Item",ExpressionUUID->"361a219f-c2e9-bf40-ba6a-025f23dbc6db"],
Cell[272882, 5444, 496, 13, 21, "Input",ExpressionUUID->"a85de0cc-45d3-4e40-8b89-dddbf2bab9e3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273427, 5463, 219, 4, 46, "Section",ExpressionUUID->"7b7c0b53-4d0a-d34c-a842-6be8b77cd8e6"],
Cell[273649, 5469, 562, 17, 25, "Text",ExpressionUUID->"fbd11f24-ec83-794b-abd1-d37f1c3c130e"],
Cell[CellGroupData[{
Cell[274236, 5490, 546, 14, 21, "Input",ExpressionUUID->"61ed1413-e93f-854d-8ec5-5122b888bc70"],
Cell[274785, 5506, 1021, 18, 19, "Message",ExpressionUUID->"4698aa72-d96b-6249-a6b9-7307abb7340c"],
Cell[275809, 5526, 1023, 18, 19, "Message",ExpressionUUID->"b5cf8e62-d399-8249-a566-6b3eedf3909c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276869, 5549, 1584, 42, 73, "Input",ExpressionUUID->"e4de901e-8db9-8f45-afca-d82ad894c7e3"],
Cell[278456, 5593, 1070, 19, 19, "Message",ExpressionUUID->"6c65eb60-cfd0-b84b-98ee-2a5bfd1ab2c8"],
Cell[279529, 5614, 985, 18, 18, "Message",ExpressionUUID->"06cd8227-9a78-1548-acb6-c9eea5167603"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[280563, 5638, 158, 3, 46, "Section",ExpressionUUID->"de8badd0-f7dd-254f-a868-b7fd6e592a98"],
Cell[280724, 5643, 236, 4, 23, "Text",ExpressionUUID->"363bbe53-bf40-4f46-96f8-56b59cfb07b3"],
Cell[CellGroupData[{
Cell[280985, 5651, 293, 6, 21, "Input",ExpressionUUID->"313dc45a-4e3f-0b49-909a-cdabd60a5e46"],
Cell[281281, 5659, 1022, 18, 19, "Message",ExpressionUUID->"5ae798e7-2a94-9040-b8c0-9435017beaee"],
Cell[282306, 5679, 1022, 18, 19, "Message",ExpressionUUID->"86d1f1a7-7a58-4f4d-bdff-ff8c34ba8ae2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[283377, 5703, 166, 3, 46, "Section",ExpressionUUID->"a0a6e63a-9353-aa45-9619-fb8219986485"],
Cell[283546, 5708, 239, 4, 23, "Text",ExpressionUUID->"4f33ebfb-f876-4346-9e9a-c0f977c89909"],
Cell[CellGroupData[{
Cell[283810, 5716, 421, 11, 46, "Input",ExpressionUUID->"e9e55764-d027-474c-aaab-8c34dce4bc1b"],
Cell[284234, 5729, 1023, 18, 19, "Message",ExpressionUUID->"4d7dea03-055f-364d-b31d-002aba9b4ba5"],
Cell[285260, 5749, 1025, 18, 19, "Message",ExpressionUUID->"e37c3b78-d3c3-7d49-a9f4-d97a85918f7d"],
Cell[286288, 5769, 1026, 18, 19, "Message",ExpressionUUID->"ac8e9736-a4db-7941-b0f9-db39c073dfa8"],
Cell[287317, 5789, 553, 11, 18, "Message",ExpressionUUID->"627e0a4a-ed81-bb46-8fe0-58702f34a206"]
}, Open  ]],
Cell[287885, 5803, 851, 23, 33, "Input",ExpressionUUID->"8c07ba9a-e400-c942-bb5b-4b722712a0ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288773, 5831, 177, 3, 46, "Section",ExpressionUUID->"25482623-8821-0046-b3cf-105f8334befa"],
Cell[288953, 5836, 639, 16, 21, "Input",ExpressionUUID->"0dfcf72a-6792-4f40-9d66-c2dc98bf2f6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289629, 5857, 170, 3, 46, "Section",ExpressionUUID->"8dba97fd-a3c2-7e42-bdc3-3195aaad16d7"],
Cell[CellGroupData[{
Cell[289824, 5864, 543, 14, 33, "Input",ExpressionUUID->"4c492eba-10b0-2b44-8569-2ef85f4a989e"],
Cell[290370, 5880, 1026, 18, 19, "Message",ExpressionUUID->"ca469f7f-bebc-564d-acf8-036e521f5c2a"],
Cell[291399, 5900, 694, 13, 18, "Message",ExpressionUUID->"4d890d31-37a5-384f-b9bf-aa515d7a2733"],
Cell[292096, 5915, 1486, 25, 44, "Message",ExpressionUUID->"5ad73961-6b38-8c47-a1d1-5be9d0e378e8"],
Cell[293585, 5942, 1024, 18, 19, "Message",ExpressionUUID->"3f7f3a5e-7424-914e-b1a0-447655db6f65"],
Cell[294612, 5962, 1488, 25, 44, "Message",ExpressionUUID->"a9d0039e-1818-cd43-91bd-c8ea76ff7a49"],
Cell[296103, 5989, 408, 9, 18, "Message",ExpressionUUID->"43c7b93f-f603-2f49-ac52-ffc5ad9d0551"],
Cell[296514, 6000, 1024, 18, 19, "Message",ExpressionUUID->"68547dd7-41dc-4c46-b33b-804aad2297e6"],
Cell[297541, 6020, 553, 11, 18, "Message",ExpressionUUID->"4cc776c0-8e18-d64d-8006-cf4a27f59c12"],
Cell[298097, 6033, 1488, 25, 44, "Message",ExpressionUUID->"78c1060c-85c9-684c-aade-d7b669cda9d1"],
Cell[299588, 6060, 556, 11, 18, "Message",ExpressionUUID->"ac061052-abfc-114f-bcc5-990c71d2ed33"],
Cell[300147, 6073, 410, 9, 18, "Message",ExpressionUUID->"3b6d254d-4596-7f48-bef2-bb615a5e8436"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[300606, 6088, 163, 3, 46, "Section",ExpressionUUID->"08d40358-2e5b-ae4b-b43a-39e5aecaa445"],
Cell[300772, 6093, 360, 7, 21, "Input",ExpressionUUID->"0765c7f1-21f6-ab40-ad82-93b5580ac4b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301169, 6105, 172, 3, 46, "Section",ExpressionUUID->"82d41118-b401-b54f-9005-609e14032226"],
Cell[CellGroupData[{
Cell[301366, 6112, 15200, 355, 672, "Input",ExpressionUUID->"086b0ae1-b2d6-3d48-842e-de592f1f2440"],
Cell[316569, 6469, 8922, 168, 256, "Output",ExpressionUUID->"8548aa8a-1fb8-944f-8270-71e06bc29daa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325528, 6642, 19341, 451, 898, "Input",ExpressionUUID->"c8da14f4-b51c-4642-b960-02025cd9bba6"],
Cell[344872, 7095, 17416, 313, 256, "Output",ExpressionUUID->"bfecdd0f-242e-5c42-b0b4-a0fb6da7545e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362325, 7413, 14159, 321, 512, "Input",ExpressionUUID->"736971a9-66d8-c344-87c9-d5516a00199f"],
Cell[376487, 7736, 8530, 159, 256, "Output",ExpressionUUID->"c0359743-5ad1-ef44-84ff-4b98d314ca0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385054, 7900, 19253, 447, 912, "Input",ExpressionUUID->"36f25f5e-d862-bd4e-a8be-24da51c4662f"],
Cell[404310, 8349, 19220, 346, 266, "Output",ExpressionUUID->"6fc30eef-9926-c140-9537-ea59ae6b90af"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

